{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/SizeSettings/SizeSettings.js\";\nimport React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"@kit-ui/core\";\nimport Button from '@material-ui/core/ButtonBase';\nimport SizeSettingsOptions from \"./SizeSettingsOptions\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: theme.spacing(1.5)\n  }\n}));\n\nconst SizeSettings = ({\n  value,\n  options,\n  onChange\n}) => {\n  const {\n    variant,\n    enumOptions,\n    enumDisabled\n  } = options;\n\n  if (!value) {\n    value = enumOptions[0].value;\n  }\n\n  const [expanded, setExpanded] = useState(false);\n  const anchorRef = useRef(null);\n\n  const _onChange = value => {\n    onChange && onChange(value);\n    setExpanded(false);\n  };\n\n  const _onToggle = event => {\n    setExpanded(prevExpanded => !prevExpanded);\n  };\n\n  const _onCollapse = event => {\n    setExpanded(false);\n  };\n\n  const maxRows = 4;\n  const maxCols = 4;\n  const classes = useStyles({\n    cols: maxCols,\n    rows: maxRows\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    onClick: _onToggle,\n    ref: anchorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, value), /*#__PURE__*/React.createElement(Dropdown, {\n    expanded: expanded,\n    anchorEl: anchorRef.current,\n    onClickAway: _onCollapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SizeSettingsOptions, {\n    options: enumOptions,\n    onChange: _onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })));\n};\n\nSizeSettings.defaultProps = {};\nSizeSettings.propTypes = {};\nSizeSettings.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"SizeSettings\"\n};\nexport default SizeSettings;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/SizeSettings/SizeSettings.js\"] = {\n    name: \"SizeSettings\",\n    docgenInfo: SizeSettings.__docgenInfo,\n    path: \"src/components/SizeSettings/SizeSettings.js\"\n  };\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/SizeSettings/SizeSettings.js"],"names":["React","forwardRef","useState","useEffect","useRef","PropTypes","Dropdown","Button","SizeSettingsOptions","useStyles","makeStyles","theme","button","padding","spacing","SizeSettings","value","options","onChange","variant","enumOptions","enumDisabled","expanded","setExpanded","anchorRef","_onChange","_onToggle","event","prevExpanded","_onCollapse","maxRows","maxCols","classes","cols","rows","current","defaultProps","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAACC,KAAK,KAAK;AAEnCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,GAAd;AADL;AAF2B,CAAL,CAAN,CAA5B;;AASA,MAAMC,YAAY,GAAG,CAAC;AAClBC,EAAAA,KADkB;AAElBC,EAAAA,OAFkB;AAGlBC,EAAAA;AAHkB,CAAD,KAIf;AAEF,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA;AAHE,MAIFJ,OAJJ;;AAMA,MAAI,CAACD,KAAL,EAAY;AACRA,IAAAA,KAAK,GAAGI,WAAW,CAAC,CAAD,CAAX,CAAeJ,KAAvB;AACH;;AAED,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMsB,SAAS,GAAGpB,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMqB,SAAS,GAAIT,KAAD,IAAW;AACzBE,IAAAA,QAAQ,IAAIA,QAAQ,CAACF,KAAD,CAApB;AACAO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;;AAKA,QAAMG,SAAS,GAAIC,KAAD,IAAW;AACzBJ,IAAAA,WAAW,CAACK,YAAY,IAAI,CAACA,YAAlB,CAAX;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIF,KAAD,IAAW;AAC3BJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMO,OAAO,GAAG,CAAhB;AACA,QAAMC,OAAO,GAAG,CAAhB;AAEA,QAAMC,OAAO,GAAGvB,SAAS,CAAC;AAACwB,IAAAA,IAAI,EAAEF,OAAP;AAAgBG,IAAAA,IAAI,EAAEJ;AAAtB,GAAD,CAAzB;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEE,OAAO,CAACpB,MAA3B;AAAmC,IAAA,OAAO,EAAEc,SAA5C;AAAuD,IAAA,GAAG,EAAEF,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwER,KAAxE,CADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEM,QAApB;AAA8B,IAAA,QAAQ,EAAEE,SAAS,CAACW,OAAlD;AAA2D,IAAA,WAAW,EAAEN,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAET,WAA9B;AAA2C,IAAA,QAAQ,EAAEK,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AASH,CA9CD;;AAgDAV,YAAY,CAACqB,YAAb,GAA4B,EAA5B;AAGArB,YAAY,CAACsB,SAAb,GAAyB,EAAzB;;;;;;AAGA,eAAetB,YAAf","sourcesContent":["import React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\"\nimport { Dropdown } from \"@kit-ui/core\"\n\nimport Button from '@material-ui/core/ButtonBase';\n\nimport SizeSettingsOptions from \"./SizeSettingsOptions\"\n\nconst useStyles = makeStyles(theme => ({\n\n    button: {\n        padding: theme.spacing(1.5)\n    },\n\n\n}));\n\nconst SizeSettings = ({\n    value, \n    options,\n    onChange\n}) => {\n\n    const {\n        variant,\n        enumOptions,\n        enumDisabled\n    } = options;\n\n    if (!value) {\n        value = enumOptions[0].value\n    }\n     \n    const [expanded, setExpanded] = useState(false);\n    const anchorRef = useRef(null)\n\n    const _onChange = (value) => {\n        onChange && onChange(value)\n        setExpanded(false)\n    }\n\n    const _onToggle = (event) => {\n        setExpanded(prevExpanded => !prevExpanded);\n    }\n\n    const _onCollapse = (event) => {\n        setExpanded(false);\n    };\n\n    const maxRows = 4;\n    const maxCols = 4;\n\n    const classes = useStyles({cols: maxCols, rows: maxRows})\n\n    return (\n        <React.Fragment>\n            <Button className={classes.button} onClick={_onToggle} ref={anchorRef}>{value}</Button>\n            <Dropdown expanded={expanded} anchorEl={anchorRef.current} onClickAway={_onCollapse}>\n                <SizeSettingsOptions options={enumOptions} onChange={_onChange} />\n            </Dropdown>\n        </React.Fragment>\n    )\n\n}\n\nSizeSettings.defaultProps = {\n}\n\nSizeSettings.propTypes = {\n}\n\nexport default SizeSettings;"]},"metadata":{},"sourceType":"module"}