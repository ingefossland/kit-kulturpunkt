{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/Module/ModulePrefix.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\"; //import ButtonDraggable from \"../NavToolbar/ButtonDraggable\"\n//import ButtonCollapsible from \"../NavToolbar/ButtonCollapsible\"\n\nimport ButtonSelectable from \"./ButtonSelect\";\n\nconst ButtonDraggable = () => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 32\n  }\n}, \"drag\");\n\nconst ButtonCollapsible = () => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 34\n  }\n}, \"collapse\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    margin: theme.spacing(1.5)\n  }\n}));\n\nconst ModulePrefix = ({\n  className,\n  startAdornment,\n  icon,\n  onClick,\n  selectable,\n  selected,\n  onSelect\n}) => {\n  const classes = useStyles();\n\n  if (startAdornment) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className || classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, startAdornment);\n  }\n\n  if (selectable) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className || classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, selectable && /*#__PURE__*/React.createElement(ButtonSelectable, {\n      selected: selected,\n      onClick: onSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }));\n  }\n\n  if (icon && onClick) {\n    return /*#__PURE__*/React.createElement(IconButton, {\n      className: className || classes.root,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, icon));\n  }\n\n  if (icon) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className || classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, icon));\n  }\n\n  return false;\n};\n\nModulePrefix.propTypes = {\n  className: PropTypes.string,\n  startAdornment: PropTypes.node,\n  selectable: PropTypes.bool,\n  selected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  icon: PropTypes.string,\n  onClick: PropTypes.func\n};\nModulePrefix.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ModulePrefix\",\n  \"props\": {\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"startAdornment\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"selectable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"selected\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onSelect\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"icon\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default ModulePrefix;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Module/ModulePrefix.js\"] = {\n    name: \"ModulePrefix\",\n    docgenInfo: ModulePrefix.__docgenInfo,\n    path: \"src/components/Module/ModulePrefix.js\"\n  };\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/Module/ModulePrefix.js"],"names":["React","makeStyles","PropTypes","IconButton","Icon","ButtonSelectable","ButtonDraggable","ButtonCollapsible","useStyles","theme","root","display","alignItems","justifyContent","icon","margin","spacing","ModulePrefix","className","startAdornment","onClick","selectable","selected","onSelect","classes","propTypes","string","node","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\"\n\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Icon from \"@material-ui/core/Icon\"\n\n//import ButtonDraggable from \"../NavToolbar/ButtonDraggable\"\n//import ButtonCollapsible from \"../NavToolbar/ButtonCollapsible\"\nimport ButtonSelectable from \"./ButtonSelect\"\n\nconst ButtonDraggable = () => (<p>drag</p>)\nconst ButtonCollapsible = () => (<p>collapse</p>)\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    icon: {\n        margin: theme.spacing(1.5)\n    }\n}));\n\nconst ModulePrefix = ({ className, startAdornment, icon, onClick, selectable, selected, onSelect }) => {\n\n    const classes = useStyles()\n\n    if (startAdornment) {\n        return (\n            <div className={className || classes.root}>\n                { startAdornment }\n            </div>\n        )    \n    }\n\n    if (selectable) {\n        return (\n            <div className={className || classes.root}>\n                { selectable && <ButtonSelectable selected={selected} onClick={onSelect} /> }\n            </div>\n        )    \n    }\n\n    if (icon && onClick) {\n        return (\n            <IconButton className={className || classes.root} onClick={onClick}>\n                <Icon>{icon}</Icon>\n            </IconButton>\n        )    \n    }\n\n    if (icon) {\n        return (\n            <div className={className || classes.root}  >\n                <Icon className={classes.icon}>{icon}</Icon>\n            </div>\n        )    \n    }\n\n    return false\n\n}\n\nModulePrefix.propTypes = {\n    className: PropTypes.string,\n    startAdornment: PropTypes.node,\n    selectable: PropTypes.bool,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func,\n    icon: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default ModulePrefix;\n"]},"metadata":{},"sourceType":"module"}