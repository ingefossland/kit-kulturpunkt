{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/SectionTypeSettings/SectionTypeSettings.js\";\nimport React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"@kit-ui/core\";\nimport Button from '@material-ui/core/ButtonBase';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DmIcon from \"./DmIcon\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: theme.spacing(1.5)\n  }\n}));\nconst icons = {\n  \"text\": \"subject\",\n  \"media\": \"insert_photo\",\n  \"links\": \"insert_link\",\n  \"attachments\": \"attach_file\",\n  \"quote\": \"format_quote\",\n  \"dm\": /*#__PURE__*/React.createElement(DmIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })\n};\n\nconst SettingsIcon = ({\n  icon\n}) => {\n  if (!icon) {\n    return false;\n  }\n\n  if (icon && typeof icon === \"string\") {\n    return /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, icon);\n  }\n\n  return icon;\n};\n\nconst SettingsButton = ({\n  value,\n  onClick\n}) => {\n  const icon = icons[value];\n\n  if (icon) {\n    /*#__PURE__*/\n    React.createElement(IconButton, {\n      className: classes.button,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SettingsIcon, {\n      icon: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 66\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, value);\n};\n\nconst ListSettings = ({\n  value,\n  options,\n  onChange\n}) => {\n  const {\n    variant,\n    enumOptions,\n    enumDisabled\n  } = options;\n\n  if (!value) {\n    value = enumOptions[0].value;\n  }\n\n  const [expanded, setExpanded] = useState(false);\n  const anchorRef = useRef(null);\n\n  const _onSelect = value => {\n    onChange && onChange(value);\n    setExpanded(false);\n  };\n\n  const _onToggle = event => {\n    setExpanded(prevExpanded => !prevExpanded);\n  };\n\n  const _onCollapse = event => {\n    setExpanded(false);\n  };\n\n  const ListOption = option => {\n    const {\n      label,\n      value\n    } = option;\n    const icon = icons[value];\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: () => _onSelect(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, icon && /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SettingsIcon, {\n      icon: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SettingsButton, {\n    className: classes.button,\n    value: value,\n    onClick: _onToggle,\n    ref: anchorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    expanded: expanded,\n    anchorEl: anchorRef.current,\n    onClickAway: _onCollapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, enumOptions && enumOptions.map((option, index) => {\n    return /*#__PURE__*/React.createElement(ListOption, Object.assign({}, option, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 32\n      }\n    }));\n  }))));\n};\n\nListSettings.defaultProps = {};\nListSettings.propTypes = {};\nListSettings.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ListSettings\"\n};\nexport default ListSettings;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/SectionTypeSettings/SectionTypeSettings.js\"] = {\n    name: \"ListSettings\",\n    docgenInfo: ListSettings.__docgenInfo,\n    path: \"src/components/SectionTypeSettings/SectionTypeSettings.js\"\n  };\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/SectionTypeSettings/SectionTypeSettings.js"],"names":["React","forwardRef","useState","useEffect","useRef","PropTypes","Dropdown","Button","IconButton","Icon","List","ListItem","ListItemIcon","ListItemText","makeStyles","DmIcon","useStyles","theme","button","padding","spacing","icons","SettingsIcon","icon","SettingsButton","value","onClick","classes","ListSettings","options","onChange","variant","enumOptions","enumDisabled","expanded","setExpanded","anchorRef","_onSelect","_onToggle","event","prevExpanded","_onCollapse","ListOption","option","label","current","map","index","defaultProps","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACnCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,GAAd;AADL;AAD2B,CAAL,CAAN,CAA5B;AAMA,MAAMC,KAAK,GAAG;AACV,UAAQ,SADE;AAEV,WAAS,cAFC;AAGV,WAAS,aAHC;AAIV,iBAAe,aAJL;AAKV,WAAS,cALC;AAMV,qBAAM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANI,CAAd;;AASA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAE7B,MAAI,CAACA,IAAL,EAAW;AACP,WAAO,KAAP;AACH;;AAED,MAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AAClC,wBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,IAAP,CADJ;AAGH;;AAED,SAAOA,IAAP;AAEH,CAdD;;AAgBA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAEzC,QAAMH,IAAI,GAAGF,KAAK,CAACI,KAAD,CAAlB;;AAEA,MAAIF,IAAJ,EAAU;AACN;AAAA,wBAAC,UAAD;AAAY,MAAA,SAAS,EAAEI,OAAO,CAACT,MAA/B;AAAuC,MAAA,OAAO,EAAEQ,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyD,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEH,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzD;AACH;;AAED,sBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEI,OAAO,CAACT,MAA3B;AAAmC,IAAA,OAAO,EAAEQ,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDD,KAAtD,CADJ;AAIH,CAZD;;AAcA,MAAMG,YAAY,GAAG,CAAC;AAClBH,EAAAA,KADkB;AAElBI,EAAAA,OAFkB;AAGlBC,EAAAA;AAHkB,CAAD,KAIf;AAEF,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA;AAHE,MAIFJ,OAJJ;;AAMA,MAAI,CAACJ,KAAL,EAAY;AACRA,IAAAA,KAAK,GAAGO,WAAW,CAAC,CAAD,CAAX,CAAeP,KAAvB;AACH;;AAED,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMkC,SAAS,GAAGhC,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMiC,SAAS,GAAIZ,KAAD,IAAW;AACzBK,IAAAA,QAAQ,IAAIA,QAAQ,CAACL,KAAD,CAApB;AACAU,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;;AAKA,QAAMG,SAAS,GAAIC,KAAD,IAAW;AACzBJ,IAAAA,WAAW,CAACK,YAAY,IAAI,CAACA,YAAlB,CAAX;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIF,KAAD,IAAW;AAC3BJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAKA,QAAMO,UAAU,GAAIC,MAAD,IAAY;AAC3B,UAAM;AAAEC,MAAAA,KAAF;AAASnB,MAAAA;AAAT,QAAmBkB,MAAzB;AAEA,UAAMpB,IAAI,GAAGF,KAAK,CAACI,KAAD,CAAlB;AAEA,wBACI,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAMY,SAAS,CAACZ,KAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMF,IAAI,iBAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CADd,eAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEqB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH,GAZD;;AAcA,QAAMjB,OAAO,GAAGX,SAAS,EAAzB;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEW,OAAO,CAACT,MAAnC;AAA2C,IAAA,KAAK,EAAEO,KAAlD;AAAyD,IAAA,OAAO,EAAEa,SAAlE;AAA6E,IAAA,GAAG,EAAEF,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEF,QAApB;AAA8B,IAAA,QAAQ,EAAEE,SAAS,CAACS,OAAlD;AAA2D,IAAA,WAAW,EAAEJ,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMT,WAAW,IAAIA,WAAW,CAACc,GAAZ,CAAgB,CAACH,MAAD,EAASI,KAAT,KAAmB;AAChD,wBAAO,oBAAC,UAAD,oBAAgBJ,MAAhB;AAAwB,MAAA,GAAG,EAAEI,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAFgB,CADrB,CADJ,CAFJ,CADJ;AAaH,CA9DD;;AAgEAnB,YAAY,CAACoB,YAAb,GAA4B,EAA5B;AAGApB,YAAY,CAACqB,SAAb,GAAyB,EAAzB;;;;;;AAGA,eAAerB,YAAf","sourcesContent":["import React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\"\nimport { Dropdown } from \"@kit-ui/core\"\n\nimport Button from '@material-ui/core/ButtonBase';\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Icon from \"@material-ui/core/Icon\"\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DmIcon from \"./DmIcon\"\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        padding: theme.spacing(1.5)\n    }\n}));\n\nconst icons = {\n    \"text\": \"subject\",\n    \"media\": \"insert_photo\",\n    \"links\": \"insert_link\",\n    \"attachments\": \"attach_file\",\n    \"quote\": \"format_quote\",\n    \"dm\": <DmIcon />\n}\n\nconst SettingsIcon = ({icon}) => {\n\n    if (!icon) {\n        return false\n    }\n\n    if (icon && typeof icon === \"string\") {\n        return (\n            <Icon>{icon}</Icon>\n        )\n    }\n\n    return icon\n    \n}\n\nconst SettingsButton = ({value, onClick}) => {\n\n    const icon = icons[value]\n\n    if (icon) {\n        <IconButton className={classes.button} onClick={onClick}><SettingsIcon icon={icon} /></IconButton>\n    }\n\n    return (\n        <Button className={classes.button} onClick={onClick}>{value}</Button>\n    )\n\n}\n\nconst ListSettings = ({\n    value, \n    options,\n    onChange\n}) => {\n\n    const {\n        variant,\n        enumOptions,\n        enumDisabled\n    } = options;\n\n    if (!value) {\n        value = enumOptions[0].value\n    }\n    \n    const [expanded, setExpanded] = useState(false);\n    const anchorRef = useRef(null)\n\n    const _onSelect = (value) => {\n        onChange && onChange(value)\n        setExpanded(false)\n    }\n\n    const _onToggle = (event) => {\n        setExpanded(prevExpanded => !prevExpanded);\n    }\n\n    const _onCollapse = (event) => {\n        setExpanded(false);\n    };\n\n\n    const ListOption = (option) => {\n        const { label, value } = option\n\n        const icon = icons[value]\n\n        return (\n            <ListItem button onClick={() => _onSelect(value)}>\n                { icon && <ListItemIcon><SettingsIcon icon={icon} /></ListItemIcon> }\n                <ListItemText primary={label} />\n            </ListItem>\n        )\n\n    }\n\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <SettingsButton className={classes.button} value={value} onClick={_onToggle} ref={anchorRef} />\n            <Dropdown expanded={expanded} anchorEl={anchorRef.current} onClickAway={_onCollapse}>\n                <List>\n                    { enumOptions && enumOptions.map((option, index) => {\n                        return <ListOption {...option} key={index} />\n                    })}\n                </List>\n            </Dropdown>\n        </React.Fragment>\n    )\n\n}\n\nListSettings.defaultProps = {\n}\n\nListSettings.propTypes = {\n}\n\nexport default ListSettings;"]},"metadata":{},"sourceType":"module"}