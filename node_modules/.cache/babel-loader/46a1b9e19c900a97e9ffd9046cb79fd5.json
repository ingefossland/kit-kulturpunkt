{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.getFieldType = void 0;\n\nvar _fieldTypes = _interopRequireDefault(require(\"../fieldTypes\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar getFieldType = function getFieldType(props) {\n  var schema = props && props.schema;\n  var schemaType = schema && schema.type;\n  var itemSchema = props && props.schema && props.schema.items;\n  var itemType = itemSchema && itemSchema.type;\n  var field = {};\n\n  if (schemaType && schemaType in _fieldTypes.default) {\n    var convertFieldType = _fieldTypes.default[schemaType];\n    field = convertFieldType(_extends({}, props));\n    field.schema = _extends({}, field.schema, {\n      _type: schemaType\n    });\n  } else if (schemaType === \"array\" && itemType && itemType in _fieldTypes.default) {\n    console.log(\"convert item\", itemSchema);\n    var convertItemType = _fieldTypes.default[itemType];\n    var itemField = convertItemType({\n      schema: itemSchema,\n      uiSchema: props.uiSchema && props.uiSchema.items\n    });\n    console.log(\"new item\", itemField);\n    field = _extends({}, props, {\n      schema: _extends({}, schema, {\n        items: _extends({}, itemField.schema, {\n          _type: itemType\n        })\n      }),\n      uiSchema: _extends({}, props.uiSchema, {\n        items: _extends({}, itemField.uiSchema)\n      })\n    });\n  } else {\n    field = props;\n  }\n\n  return field;\n};\n\nexports.getFieldType = getFieldType;\nvar _default = getFieldType;\nexports.default = _default;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/lib/utils/getFieldType.js"],"names":["exports","__esModule","default","getFieldType","_fieldTypes","_interopRequireDefault","require","obj","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","props","schema","schemaType","type","itemSchema","items","itemType","field","convertFieldType","_type","console","log","convertItemType","itemField","uiSchema","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.getFieldType = void 0;\n\nvar _fieldTypes = _interopRequireDefault(require(\"../fieldTypes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar getFieldType = function getFieldType(props) {\n  var schema = props && props.schema;\n  var schemaType = schema && schema.type;\n  var itemSchema = props && props.schema && props.schema.items;\n  var itemType = itemSchema && itemSchema.type;\n  var field = {};\n\n  if (schemaType && schemaType in _fieldTypes.default) {\n    var convertFieldType = _fieldTypes.default[schemaType];\n    field = convertFieldType(_extends({}, props));\n    field.schema = _extends({}, field.schema, {\n      _type: schemaType\n    });\n  } else if (schemaType === \"array\" && itemType && itemType in _fieldTypes.default) {\n    console.log(\"convert item\", itemSchema);\n    var convertItemType = _fieldTypes.default[itemType];\n    var itemField = convertItemType({\n      schema: itemSchema,\n      uiSchema: props.uiSchema && props.uiSchema.items\n    });\n    console.log(\"new item\", itemField);\n    field = _extends({}, props, {\n      schema: _extends({}, schema, {\n        items: _extends({}, itemField.schema, {\n          _type: itemType\n        })\n      }),\n      uiSchema: _extends({}, props.uiSchema, {\n        items: _extends({}, itemField.uiSchema)\n      })\n    });\n  } else {\n    field = props;\n  }\n\n  return field;\n};\n\nexports.getFieldType = getFieldType;\nvar _default = getFieldType;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}