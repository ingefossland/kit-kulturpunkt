{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AsfUtil = void 0;\n\nconst Util_1 = require(\"../common/Util\");\n\nconst Token = require(\"token-types\");\n\nclass AsfUtil {\n  static getParserForAttr(i) {\n    return AsfUtil.attributeParsers[i];\n  }\n\n  static parseUnicodeAttr(buf) {\n    return Util_1.default.stripNulls(Util_1.default.decodeString(buf, \"utf16le\"));\n  }\n\n  static parseByteArrayAttr(buf) {\n    const newBuf = Buffer.alloc(buf.length);\n    buf.copy(newBuf);\n    return newBuf;\n  }\n\n  static parseBoolAttr(buf, offset = 0) {\n    return AsfUtil.parseWordAttr(buf, offset) === 1;\n  }\n\n  static parseDWordAttr(buf, offset = 0) {\n    return buf.readUInt32LE(offset);\n  }\n\n  static parseQWordAttr(buf, offset = 0) {\n    return Token.UINT64_LE.get(buf, offset);\n  }\n\n  static parseWordAttr(buf, offset = 0) {\n    return buf.readUInt16LE(offset);\n  }\n\n}\n\nexports.AsfUtil = AsfUtil;\nAsfUtil.attributeParsers = [AsfUtil.parseUnicodeAttr, AsfUtil.parseByteArrayAttr, AsfUtil.parseBoolAttr, AsfUtil.parseDWordAttr, AsfUtil.parseQWordAttr, AsfUtil.parseWordAttr, AsfUtil.parseByteArrayAttr];","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/music-metadata/lib/asf/AsfUtil.js"],"names":["Object","defineProperty","exports","value","AsfUtil","Util_1","require","Token","getParserForAttr","i","attributeParsers","parseUnicodeAttr","buf","default","stripNulls","decodeString","parseByteArrayAttr","newBuf","Buffer","alloc","length","copy","parseBoolAttr","offset","parseWordAttr","parseDWordAttr","readUInt32LE","parseQWordAttr","UINT64_LE","get","readUInt16LE"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;;AACA,MAAMF,OAAN,CAAc;AACV,SAAOI,gBAAP,CAAwBC,CAAxB,EAA2B;AACvB,WAAOL,OAAO,CAACM,gBAAR,CAAyBD,CAAzB,CAAP;AACH;;AACD,SAAOE,gBAAP,CAAwBC,GAAxB,EAA6B;AACzB,WAAOP,MAAM,CAACQ,OAAP,CAAeC,UAAf,CAA0BT,MAAM,CAACQ,OAAP,CAAeE,YAAf,CAA4BH,GAA5B,EAAiC,SAAjC,CAA1B,CAAP;AACH;;AACD,SAAOI,kBAAP,CAA0BJ,GAA1B,EAA+B;AAC3B,UAAMK,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAaP,GAAG,CAACQ,MAAjB,CAAf;AACAR,IAAAA,GAAG,CAACS,IAAJ,CAASJ,MAAT;AACA,WAAOA,MAAP;AACH;;AACD,SAAOK,aAAP,CAAqBV,GAArB,EAA0BW,MAAM,GAAG,CAAnC,EAAsC;AAClC,WAAOnB,OAAO,CAACoB,aAAR,CAAsBZ,GAAtB,EAA2BW,MAA3B,MAAuC,CAA9C;AACH;;AACD,SAAOE,cAAP,CAAsBb,GAAtB,EAA2BW,MAAM,GAAG,CAApC,EAAuC;AACnC,WAAOX,GAAG,CAACc,YAAJ,CAAiBH,MAAjB,CAAP;AACH;;AACD,SAAOI,cAAP,CAAsBf,GAAtB,EAA2BW,MAAM,GAAG,CAApC,EAAuC;AACnC,WAAOhB,KAAK,CAACqB,SAAN,CAAgBC,GAAhB,CAAoBjB,GAApB,EAAyBW,MAAzB,CAAP;AACH;;AACD,SAAOC,aAAP,CAAqBZ,GAArB,EAA0BW,MAAM,GAAG,CAAnC,EAAsC;AAClC,WAAOX,GAAG,CAACkB,YAAJ,CAAiBP,MAAjB,CAAP;AACH;;AAvBS;;AAyBdrB,OAAO,CAACE,OAAR,GAAkBA,OAAlB;AACAA,OAAO,CAACM,gBAAR,GAA2B,CACvBN,OAAO,CAACO,gBADe,EAEvBP,OAAO,CAACY,kBAFe,EAGvBZ,OAAO,CAACkB,aAHe,EAIvBlB,OAAO,CAACqB,cAJe,EAKvBrB,OAAO,CAACuB,cALe,EAMvBvB,OAAO,CAACoB,aANe,EAOvBpB,OAAO,CAACY,kBAPe,CAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsfUtil = void 0;\nconst Util_1 = require(\"../common/Util\");\nconst Token = require(\"token-types\");\nclass AsfUtil {\n    static getParserForAttr(i) {\n        return AsfUtil.attributeParsers[i];\n    }\n    static parseUnicodeAttr(buf) {\n        return Util_1.default.stripNulls(Util_1.default.decodeString(buf, \"utf16le\"));\n    }\n    static parseByteArrayAttr(buf) {\n        const newBuf = Buffer.alloc(buf.length);\n        buf.copy(newBuf);\n        return newBuf;\n    }\n    static parseBoolAttr(buf, offset = 0) {\n        return AsfUtil.parseWordAttr(buf, offset) === 1;\n    }\n    static parseDWordAttr(buf, offset = 0) {\n        return buf.readUInt32LE(offset);\n    }\n    static parseQWordAttr(buf, offset = 0) {\n        return Token.UINT64_LE.get(buf, offset);\n    }\n    static parseWordAttr(buf, offset = 0) {\n        return buf.readUInt16LE(offset);\n    }\n}\nexports.AsfUtil = AsfUtil;\nAsfUtil.attributeParsers = [\n    AsfUtil.parseUnicodeAttr,\n    AsfUtil.parseByteArrayAttr,\n    AsfUtil.parseBoolAttr,\n    AsfUtil.parseDWordAttr,\n    AsfUtil.parseQWordAttr,\n    AsfUtil.parseWordAttr,\n    AsfUtil.parseByteArrayAttr\n];\n//# sourceMappingURL=AsfUtil.js.map"]},"metadata":{},"sourceType":"script"}