{"ast":null,"code":"import React, { Component } from 'react';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: \"transparent\",\n      color: \"inherit\"\n    },\n    figure: {\n      width: function width(props) {\n        return props.size;\n      },\n      height: function height(props) {\n        return props.size;\n      },\n      \"& svg, & img\": {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        width: function width(props) {\n          return props.size;\n        },\n        height: function height(props) {\n          return props.size;\n        },\n        margin: \"auto\"\n      }\n    },\n\n    /*\n    img: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        maxWidth: \"64px\",\n        maxHeight: \"64px\",\n        margin: \"auto\"\n    },\n    */\n    label: {\n      display: \"block\",\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"12px\",\n      marginTop: \"-1em\"\n    }\n  };\n});\n\nvar AppsGridItem = function AppsGridItem(_ref) {\n  var title = _ref.title,\n      imageUrl = _ref.imageUrl,\n      icon = _ref.icon,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"large\" : _ref$size,\n      onClick = _ref.onClick;\n  var sizes = {\n    \"small\": 36,\n    \"medium\": 48,\n    \"large\": 64\n  };\n  size = sizes[size] || size || 64;\n  var classes = useStyles({\n    size: size\n  });\n  return /*#__PURE__*/React.createElement(ButtonBase, {\n    className: classes.root,\n    disableRipple: true,\n    onClick: onClick\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.figure,\n    component: \"figure\"\n  }, !icon && imageUrl && /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: imageUrl\n  }), icon), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    noWrap: true\n  }, title));\n};\n\nexport default AppsGridItem;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/node_modules/@kit-ui/admin/es/AppSwitcher/AppsGridItem.js"],"names":["React","Component","ButtonBase","IconButton","Typography","makeStyles","useStyles","theme","root","display","flexDirection","backgroundColor","color","figure","width","props","size","height","position","top","right","bottom","left","margin","label","fontFamily","fontSize","marginTop","AppsGridItem","_ref","title","imageUrl","icon","_ref$size","onClick","sizes","classes","createElement","className","disableRipple","component","img","src","noWrap"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: \"transparent\",\n      color: \"inherit\"\n    },\n    figure: {\n      width: function width(props) {\n        return props.size;\n      },\n      height: function height(props) {\n        return props.size;\n      },\n      \"& svg, & img\": {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        width: function width(props) {\n          return props.size;\n        },\n        height: function height(props) {\n          return props.size;\n        },\n        margin: \"auto\"\n      }\n    },\n\n    /*\n    img: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        maxWidth: \"64px\",\n        maxHeight: \"64px\",\n        margin: \"auto\"\n    },\n    */\n    label: {\n      display: \"block\",\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"12px\",\n      marginTop: \"-1em\"\n    }\n  };\n});\n\nvar AppsGridItem = function AppsGridItem(_ref) {\n  var title = _ref.title,\n      imageUrl = _ref.imageUrl,\n      icon = _ref.icon,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"large\" : _ref$size,\n      onClick = _ref.onClick;\n  var sizes = {\n    \"small\": 36,\n    \"medium\": 48,\n    \"large\": 64\n  };\n  size = sizes[size] || size || 64;\n  var classes = useStyles({\n    size: size\n  });\n  return /*#__PURE__*/React.createElement(ButtonBase, {\n    className: classes.root,\n    disableRipple: true,\n    onClick: onClick\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.figure,\n    component: \"figure\"\n  }, !icon && imageUrl && /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: imageUrl\n  }), icon), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    noWrap: true\n  }, title));\n};\n\nexport default AppsGridItem;"]},"metadata":{},"sourceType":"module"}