{"ast":null,"code":"import moment from \"moment\";\nexport const getEventRRule = (formData = {}) => {\n  if (!formData) {\n    return;\n  }\n\n  let rrules = {};\n  Object.keys(formData).map(name => {\n    const KEY = name.toUpperCase();\n    let VALUE = formData && formData[name];\n\n    if (Array.isArray(VALUE)) {\n      VALUE = VALUE.join(\",\");\n    }\n\n    rrules[KEY] = VALUE;\n  });\n  const {\n    FREQ,\n    INTERVAL,\n    BYMONTH,\n    BYMONTHDAY,\n    BYDAY,\n    BYSETPOS,\n    COUNT,\n    UNTIL,\n    ALLDAY\n  } = rrules;\n\n  if (!FREQ || FREQ === \"undefined\") {\n    return undefined;\n  }\n\n  let rrule = [];\n  rrule.push(\"FREQ=\" + FREQ);\n\n  if (INTERVAL) {\n    rrule.push(\"INTERVAL=\" + INTERVAL);\n  } // YEARLY\n\n\n  if (FREQ === \"YEARLY\") {\n    if (BYMONTH && BYMONTH.length) {\n      rrule.push(\"BYMONTH=\" + BYMONTH);\n    }\n  }\n\n  if (FREQ === \"YEARLY\" || FREQ === \"MONTHLY\") {\n    if (BYSETPOS && BYSETPOS.length) {\n      rrule.push(\"BYSETPOS=\" + BYSETPOS);\n      rrule.push(\"BYDAY=\" + BYDAY);\n    } else if (BYMONTHDAY && BYMONTHDAY.length) {\n      rrule.push(\"BYMONTHDAY=\" + BYMONTHDAY);\n    }\n  }\n\n  if (FREQ === \"WEEKLY\" || FREQ === \"HOURLY\" || FREQ === \"MINUTELY\") {\n    if (BYDAY && BYDAY.length) {\n      rrule.push(\"BYDAY=\" + BYDAY);\n    }\n  } // ENDS\n\n\n  if (UNTIL && ALLDAY) {\n    rrule.push(\"UNTIL=\" + moment(UNTIL).format('YYYYMMDD'));\n  } else if (UNTIL) {\n    rrule.push(\"UNTIL=\" + moment(UNTIL).format('YYYYMMDDTHHmmss'));\n  }\n\n  if (COUNT) {\n    rrule.push(\"COUNT=\" + COUNT);\n  }\n\n  return rrule.join(\";\");\n};\nexport default getEventRRule;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/utils/getVCalendarEventRRule.js"],"names":["moment","getEventRRule","formData","rrules","Object","keys","map","name","KEY","toUpperCase","VALUE","Array","isArray","join","FREQ","INTERVAL","BYMONTH","BYMONTHDAY","BYDAY","BYSETPOS","COUNT","UNTIL","ALLDAY","undefined","rrule","push","length","format"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAQ,GAAG,EAAZ,KAAmB;AAE5C,MAAI,CAACA,QAAL,EAAe;AACX;AACH;;AAED,MAAIC,MAAM,GAAG,EAAb;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,GAAtB,CAA0BC,IAAI,IAAI;AAE9B,UAAMC,GAAG,GAAGD,IAAI,CAACE,WAAL,EAAZ;AACA,QAAIC,KAAK,GAAGR,QAAQ,IAAIA,QAAQ,CAACK,IAAD,CAAhC;;AAEA,QAAII,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACtBA,MAAAA,KAAK,GAAGA,KAAK,CAACG,IAAN,CAAW,GAAX,CAAR;AACH;;AAEDV,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAcE,KAAd;AAEH,GAXD;AAaA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,UAA3B;AAAuCC,IAAAA,KAAvC;AAA8CC,IAAAA,QAA9C;AAAwDC,IAAAA,KAAxD;AAA+DC,IAAAA,KAA/D;AAAsEC,IAAAA;AAAtE,MAAiFnB,MAAvF;;AAEA,MAAI,CAACW,IAAD,IAASA,IAAI,KAAK,WAAtB,EAAmC;AAC/B,WAAOS,SAAP;AACH;;AAGD,MAAIC,KAAK,GAAG,EAAZ;AAEAA,EAAAA,KAAK,CAACC,IAAN,CAAW,UAAQX,IAAnB;;AAEA,MAAIC,QAAJ,EAAc;AACVS,IAAAA,KAAK,CAACC,IAAN,CAAW,cAAYV,QAAvB;AACH,GAlC2C,CAoC5C;;;AAEA,MAAID,IAAI,KAAK,QAAb,EAAuB;AAEnB,QAAIE,OAAO,IAAIA,OAAO,CAACU,MAAvB,EAA+B;AAC3BF,MAAAA,KAAK,CAACC,IAAN,CAAW,aAAWT,OAAtB;AACH;AAEJ;;AAED,MAAIF,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,SAAlC,EAA6C;AAEzC,QAAIK,QAAQ,IAAIA,QAAQ,CAACO,MAAzB,EAAiC;AAC7BF,MAAAA,KAAK,CAACC,IAAN,CAAW,cAAYN,QAAvB;AACAK,MAAAA,KAAK,CAACC,IAAN,CAAW,WAASP,KAApB;AACH,KAHD,MAGO,IAAID,UAAU,IAAIA,UAAU,CAACS,MAA7B,EAAqC;AACxCF,MAAAA,KAAK,CAACC,IAAN,CAAW,gBAAcR,UAAzB;AACH;AAEJ;;AAGD,MAAIH,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,QAA9B,IAA0CA,IAAI,KAAK,UAAvD,EAAmE;AAE/D,QAAII,KAAK,IAAIA,KAAK,CAACQ,MAAnB,EAA2B;AACvBF,MAAAA,KAAK,CAACC,IAAN,CAAW,WAASP,KAApB;AACH;AAEJ,GAhE2C,CAkE5C;;;AAEA,MAAIG,KAAK,IAAIC,MAAb,EAAqB;AACjBE,IAAAA,KAAK,CAACC,IAAN,CAAW,WAASzB,MAAM,CAACqB,KAAD,CAAN,CAAcM,MAAd,CAAqB,UAArB,CAApB;AACH,GAFD,MAEO,IAAIN,KAAJ,EAAW;AACdG,IAAAA,KAAK,CAACC,IAAN,CAAW,WAASzB,MAAM,CAACqB,KAAD,CAAN,CAAcM,MAAd,CAAqB,iBAArB,CAApB;AACH;;AAED,MAAIP,KAAJ,EAAW;AACPI,IAAAA,KAAK,CAACC,IAAN,CAAW,WAASL,KAApB;AACH;;AAED,SAAOI,KAAK,CAACX,IAAN,CAAW,GAAX,CAAP;AAEH,CAhFM;AAkFP,eAAeZ,aAAf","sourcesContent":["import moment from \"moment\"\n\nexport const getEventRRule = (formData = {}) => {\n\n    if (!formData) {\n        return\n    }\n\n    let rrules = {}\n\n    Object.keys(formData).map(name => {\n\n        const KEY = name.toUpperCase()\n        let VALUE = formData && formData[name]\n\n        if (Array.isArray(VALUE)) {\n            VALUE = VALUE.join(\",\")\n        }\n\n        rrules[KEY] = VALUE\n\n    })\n\n    const { FREQ, INTERVAL, BYMONTH, BYMONTHDAY, BYDAY, BYSETPOS, COUNT, UNTIL, ALLDAY } = rrules\n\n    if (!FREQ || FREQ === \"undefined\") {\n        return undefined\n    }\n\n\n    let rrule = []\n\n    rrule.push(\"FREQ=\"+FREQ)\n\n    if (INTERVAL) {\n        rrule.push(\"INTERVAL=\"+INTERVAL)\n    }\n\n    // YEARLY\n\n    if (FREQ === \"YEARLY\") {\n\n        if (BYMONTH && BYMONTH.length) {\n            rrule.push(\"BYMONTH=\"+BYMONTH)\n        }\n\n    }\n\n    if (FREQ === \"YEARLY\" || FREQ === \"MONTHLY\") {\n\n        if (BYSETPOS && BYSETPOS.length) {\n            rrule.push(\"BYSETPOS=\"+BYSETPOS)\n            rrule.push(\"BYDAY=\"+BYDAY)\n        } else if (BYMONTHDAY && BYMONTHDAY.length) {\n            rrule.push(\"BYMONTHDAY=\"+BYMONTHDAY)\n        }\n\n    }\n        \n\n    if (FREQ === \"WEEKLY\" || FREQ === \"HOURLY\" || FREQ === \"MINUTELY\") {\n\n        if (BYDAY && BYDAY.length) {\n            rrule.push(\"BYDAY=\"+BYDAY)\n        }\n    \n    }\n\n    // ENDS\n\n    if (UNTIL && ALLDAY) {\n        rrule.push(\"UNTIL=\"+moment(UNTIL).format('YYYYMMDD'))\n    } else if (UNTIL) {\n        rrule.push(\"UNTIL=\"+moment(UNTIL).format('YYYYMMDDTHHmmss'))\n    }\n\n    if (COUNT) {\n        rrule.push(\"COUNT=\"+COUNT)\n    }\n    \n    return rrule.join(\";\")\n\n}\n\nexport default getEventRRule"]},"metadata":{},"sourceType":"module"}