{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/NavSettings/NavSettings.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport ListSettings from \"./ListSettings\";\nimport GridSettings from \"./GridSettings\";\nconst templates = {\n  \"list\": ListSettings,\n  \"grid\": GridSettings\n};\nconst useStyles = makeStyles(theme => ({\n  settings: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexWrap: \"nowrap\"\n  }\n}));\n/** NavSettings renders settings with options. Each setting should have an onChange function. */\n\nconst NavSettings = ({\n  className,\n  settings = []\n}) => {\n  const classes = useStyles();\n\n  if (!settings.length) {\n    return false;\n  }\n\n  const renderSettings = ({\n    template,\n    ...props\n  }, index) => {\n    let SettingsTemplate;\n\n    if (template && typeof template === \"function\") {\n      SettingsTemplate = template;\n    } else if (template && templates[template]) {\n      SettingsTemplate = templates[template];\n    } else {\n      SettingsTemplate = ListSettings;\n    }\n\n    return /*#__PURE__*/React.createElement(SettingsTemplate, Object.assign({}, props, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className || classes.settings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, settings && settings.map((settingsProps, index) => {\n    return renderSettings(settingsProps);\n  }));\n};\n\nNavSettings.propTypes = {\n  settings: PropTypes.array\n};\nNavSettings.__docgenInfo = {\n  \"description\": \"NavSettings renders settings with options. Each setting should have an onChange function.\",\n  \"methods\": [],\n  \"displayName\": \"NavSettings\",\n  \"props\": {\n    \"settings\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default NavSettings;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NavSettings/NavSettings.js\"] = {\n    name: \"NavSettings\",\n    docgenInfo: NavSettings.__docgenInfo,\n    path: \"src/components/NavSettings/NavSettings.js\"\n  };\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/NavSettings/NavSettings.js"],"names":["React","makeStyles","PropTypes","ListSettings","GridSettings","templates","useStyles","theme","settings","display","alignItems","justifyContent","flexWrap","NavSettings","className","classes","length","renderSettings","template","props","index","SettingsTemplate","map","settingsProps","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,SAAS,GAAG;AACd,UAAQF,YADM;AAEd,UAAQC;AAFM,CAAlB;AAKA,MAAME,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,cAAc,EAAE,QAHV;AAINC,IAAAA,QAAQ,EAAE;AAJJ;AADyB,CAAL,CAAN,CAA5B;AASA;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYN,EAAAA,QAAQ,GAAG;AAAvB,CAAD,KAAgC;AAChD,QAAMO,OAAO,GAAGT,SAAS,EAAzB;;AAEA,MAAI,CAACE,QAAQ,CAACQ,MAAd,EAAsB;AAClB,WAAO,KAAP;AACH;;AAED,QAAMC,cAAc,GAAG,CAAC;AAACC,IAAAA,QAAD;AAAW,OAAGC;AAAd,GAAD,EAAuBC,KAAvB,KAAiC;AAEpD,QAAIC,gBAAJ;;AAEA,QAAIH,QAAQ,IAAI,OAAOA,QAAP,KAAoB,UAApC,EAAgD;AAC5CG,MAAAA,gBAAgB,GAAGH,QAAnB;AACH,KAFD,MAEO,IAAIA,QAAQ,IAAIb,SAAS,CAACa,QAAD,CAAzB,EAAqC;AACxCG,MAAAA,gBAAgB,GAAGhB,SAAS,CAACa,QAAD,CAA5B;AACH,KAFM,MAEA;AACHG,MAAAA,gBAAgB,GAAGlB,YAAnB;AACH;;AAED,wBAAO,oBAAC,gBAAD,oBAAsBgB,KAAtB;AAA6B,MAAA,GAAG,EAAEC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AAEH,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAEN,SAAS,IAAIC,OAAO,CAACP,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMA,QAAQ,IAAIA,QAAQ,CAACc,GAAT,CAAa,CAACC,aAAD,EAAgBH,KAAhB,KAA0B;AACjD,WAAOH,cAAc,CAACM,aAAD,CAArB;AACH,GAFa,CADlB,CADJ;AAQH,CA/BD;;AAiCAV,WAAW,CAACW,SAAZ,GAAwB;AACpBhB,EAAAA,QAAQ,EAAEN,SAAS,CAACuB;AADA,CAAxB;;;;;;;;;;;;;;;;;;;AAIA,eAAeZ,WAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\"\n\nimport ListSettings from \"./ListSettings\"\nimport GridSettings from \"./GridSettings\"\n\nconst templates = {\n    \"list\": ListSettings,\n    \"grid\": GridSettings,\n}\n\nconst useStyles = makeStyles(theme => ({\n    settings: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexWrap: \"nowrap\"\n    }\n}));\n\n/** NavSettings renders settings with options. Each setting should have an onChange function. */\n\nconst NavSettings = ({className, settings = []}) => {\n    const classes = useStyles()\n\n    if (!settings.length) {\n        return false\n    }\n\n    const renderSettings = ({template, ...props}, index) => {\n\n        let SettingsTemplate\n\n        if (template && typeof template === \"function\") {\n            SettingsTemplate = template\n        } else if (template && templates[template]) {\n            SettingsTemplate = templates[template]\n        } else {\n            SettingsTemplate = ListSettings\n        }\n\n        return <SettingsTemplate {...props} key={index} />\n            \n    }\n    \n    return (\n        <div className={className || classes.settings}>\n            { settings && settings.map((settingsProps, index) => {\n                return renderSettings(settingsProps)\n            })}\n        </div>\n    )\n\n}\n\nNavSettings.propTypes = {\n    settings: PropTypes.array,\n}\n\nexport default NavSettings;\n"]},"metadata":{},"sourceType":"module"}