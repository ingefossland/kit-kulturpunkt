{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListInfoTagValue = exports.Header = void 0;\n\nconst Token = require(\"token-types\");\n\nconst FourCC_1 = require(\"../common/FourCC\");\n/**\n * Common RIFF chunk header\n */\n\n\nexports.Header = {\n  len: 8,\n  get: (buf, off) => {\n    return {\n      // Group-ID\n      chunkID: FourCC_1.FourCcToken.get(buf, off),\n      // Size\n      chunkSize: buf.readUInt32LE(off + 4)\n    };\n  }\n};\n/**\n * Token to parse RIFF-INFO tag value\n */\n\nclass ListInfoTagValue {\n  constructor(tagHeader) {\n    this.tagHeader = tagHeader;\n    this.len = tagHeader.chunkSize;\n    this.len += this.len & 1; // if it is an odd length, round up to even\n  }\n\n  get(buf, off) {\n    return new Token.StringType(this.tagHeader.chunkSize, 'ascii').get(buf, off);\n  }\n\n}\n\nexports.ListInfoTagValue = ListInfoTagValue;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/music-metadata/lib/riff/RiffChunk.js"],"names":["Object","defineProperty","exports","value","ListInfoTagValue","Header","Token","require","FourCC_1","len","get","buf","off","chunkID","FourCcToken","chunkSize","readUInt32LE","constructor","tagHeader","StringType"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAAjD;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAxB;AACA;AACA;AACA;;;AACAL,OAAO,CAACG,MAAR,GAAiB;AACbI,EAAAA,GAAG,EAAE,CADQ;AAEbC,EAAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,WAAO;AACH;AACAC,MAAAA,OAAO,EAAEL,QAAQ,CAACM,WAAT,CAAqBJ,GAArB,CAAyBC,GAAzB,EAA8BC,GAA9B,CAFN;AAGH;AACAG,MAAAA,SAAS,EAAEJ,GAAG,CAACK,YAAJ,CAAiBJ,GAAG,GAAG,CAAvB;AAJR,KAAP;AAMH;AATY,CAAjB;AAWA;AACA;AACA;;AACA,MAAMR,gBAAN,CAAuB;AACnBa,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKT,GAAL,GAAWS,SAAS,CAACH,SAArB;AACA,SAAKN,GAAL,IAAY,KAAKA,GAAL,GAAW,CAAvB,CAHmB,CAGO;AAC7B;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO,IAAIN,KAAK,CAACa,UAAV,CAAqB,KAAKD,SAAL,CAAeH,SAApC,EAA+C,OAA/C,EAAwDL,GAAxD,CAA4DC,GAA5D,EAAiEC,GAAjE,CAAP;AACH;;AARkB;;AAUvBV,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListInfoTagValue = exports.Header = void 0;\nconst Token = require(\"token-types\");\nconst FourCC_1 = require(\"../common/FourCC\");\n/**\n * Common RIFF chunk header\n */\nexports.Header = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Group-ID\n            chunkID: FourCC_1.FourCcToken.get(buf, off),\n            // Size\n            chunkSize: buf.readUInt32LE(off + 4)\n        };\n    }\n};\n/**\n * Token to parse RIFF-INFO tag value\n */\nclass ListInfoTagValue {\n    constructor(tagHeader) {\n        this.tagHeader = tagHeader;\n        this.len = tagHeader.chunkSize;\n        this.len += this.len & 1; // if it is an odd length, round up to even\n    }\n    get(buf, off) {\n        return new Token.StringType(this.tagHeader.chunkSize, 'ascii').get(buf, off);\n    }\n}\nexports.ListInfoTagValue = ListInfoTagValue;\n//# sourceMappingURL=RiffChunk.js.map"]},"metadata":{},"sourceType":"script"}