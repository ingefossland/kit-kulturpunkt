{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Dialog/UploadDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuery } from '../redux/searchById';\nimport DialogBase from \"./DialogBase\";\nimport DialogSearch from \"./DialogSearch\";\nimport DialogUpload from \"./DialogUpload\";\nimport DialogHeader from \"./DialogHeader\";\nimport DialogSection from \"./DialogSection\";\nimport SearchResults from \"./SearchResults\";\nimport qs from 'query-string';\n\nconst UploadDialog = ({\n  schema,\n  formData,\n  onChange,\n  onClose,\n  query,\n  upload,\n  ...props\n}) => {\n  const {\n    t,\n    i18n\n  } = useTranslation(['dialog']);\n  const dispatch = useDispatch();\n  const searchById = useSelector(state => state.searchById);\n  const uploadById = {};\n  const [q, setQ] = useState(\"\");\n\n  const handleQuery = q => {\n    setQ(q);\n  };\n\n  const handleReset = () => {\n    if (q) {\n      setQ(\"\");\n    } else if (onClose) {\n      onClose();\n    }\n  };\n\n  const search = {\n    placeholder: t(\"Search uploads\")\n  }; // handle upload\n\n  const [uploadSession, setUploadSession] = useState(false);\n\n  const handleUpload = (acceptedFiles = []) => {\n    const uploadData = {\n      collectionId: query.collectionId,\n      status: \"upload\"\n    };\n    props.getUpload({\n      id: upload.id,\n      session: uploadSession,\n      acceptedFiles,\n      uploadData\n    });\n    setUploadSession(true);\n  }; // current uploads \n\n\n  const currentUpload = upload.id && uploadById && uploadById[upload.id];\n  const uploadModels = currentUpload && currentUpload.models;\n  const uploadResults = uploadModels && q && uploadModels.filter(model => {\n    const {\n      title\n    } = model;\n\n    if (title.includes(q)) {\n      return true;\n    }\n\n    return false;\n  }) || uploadModels;\n  let placeholder = t(\"Search uploads\");\n  const tabs = uploadResults && [{\n    title: t(\"media\"),\n    count: uploadResults.length\n  }];\n  return /*#__PURE__*/React.createElement(DialogBase, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(DialogSearch, Object.assign({}, search, {\n    placeholder: placeholder,\n    expanded: uploadResults && true,\n    onChange: handleQuery,\n    onReset: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DialogHeader, {\n    tabs: tabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SearchResults, {\n    schema: schema,\n    formData: formData,\n    onChange: onChange,\n    query: query,\n    layout: \"uploads\",\n    results: { ...currentUpload,\n      uploads: uploadResults || [] //                        resultsLoaded: currentUpload && currentUpload.models,\n      //                        pages: pages,\n      //                        page: currentPage,\n      //                        nextPage: nextPage\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DialogUpload, Object.assign({}, upload, {\n    currentUpload: currentUpload,\n    expanded: !currentUpload,\n    onUpload: handleUpload,\n    onCancel: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }))));\n};\n\nUploadDialog.defaultProps = {\n  upload: {\n    id: \"/dialog/upload\",\n    accept: [\"image/*\"]\n  },\n  query: {//        mediaType: \"*\"\n  }\n};\nexport default UploadDialog;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Dialog/UploadDialog.js"],"names":["React","useState","useEffect","useTranslation","useSelector","useDispatch","getQuery","DialogBase","DialogSearch","DialogUpload","DialogHeader","DialogSection","SearchResults","qs","UploadDialog","schema","formData","onChange","onClose","query","upload","props","t","i18n","dispatch","searchById","state","uploadById","q","setQ","handleQuery","handleReset","search","placeholder","uploadSession","setUploadSession","handleUpload","acceptedFiles","uploadData","collectionId","status","getUpload","id","session","currentUpload","uploadModels","models","uploadResults","filter","model","title","includes","tabs","count","length","uploads","defaultProps","accept"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,EAAP,MAAe,cAAf;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,OAA7B;AAAsCC,EAAAA,KAAtC;AAA6CC,EAAAA,MAA7C;AAAqD,KAAGC;AAAxD,CAAD,KAAoE;AACrF,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAcpB,cAAc,CAAC,CAAC,QAAD,CAAD,CAAlC;AACA,QAAMqB,QAAQ,GAAGnB,WAAW,EAA5B;AAEA,QAAMoB,UAAU,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAME,UAAU,GAAG,EAAnB;AAEA,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAY5B,QAAQ,CAAC,EAAD,CAA1B;;AAEA,QAAM6B,WAAW,GAAIF,CAAD,IAAO;AACvBC,IAAAA,IAAI,CAACD,CAAD,CAAJ;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACtB,QAAIH,CAAJ,EAAO;AACHC,MAAAA,IAAI,CAAC,EAAD,CAAJ;AACH,KAFD,MAEO,IAAIX,OAAJ,EAAa;AAChBA,MAAAA,OAAO;AACV;AACJ,GAND;;AAQA,QAAMc,MAAM,GAAG;AACXC,IAAAA,WAAW,EAAEX,CAAC,CAAC,gBAAD;AADH,GAAf,CArBqF,CAyBrF;;AAEA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoClC,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMmC,YAAY,GAAG,CAACC,aAAa,GAAG,EAAjB,KAAwB;AAEzC,UAAMC,UAAU,GAAG;AACfC,MAAAA,YAAY,EAAEpB,KAAK,CAACoB,YADL;AAEfC,MAAAA,MAAM,EAAE;AAFO,KAAnB;AAKAnB,IAAAA,KAAK,CAACoB,SAAN,CAAgB;AAACC,MAAAA,EAAE,EAAEtB,MAAM,CAACsB,EAAZ;AAAgBC,MAAAA,OAAO,EAAET,aAAzB;AAAwCG,MAAAA,aAAxC;AAAuDC,MAAAA;AAAvD,KAAhB;AAEAH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEH,GAXD,CA7BqF,CA0CrF;;;AAEA,QAAMS,aAAa,GAAGxB,MAAM,CAACsB,EAAP,IAAaf,UAAb,IAA2BA,UAAU,CAACP,MAAM,CAACsB,EAAR,CAA3D;AACA,QAAMG,YAAY,GAAGD,aAAa,IAAIA,aAAa,CAACE,MAApD;AAEA,QAAMC,aAAa,GAAGF,YAAY,IAAIjB,CAAhB,IAAqBiB,YAAY,CAACG,MAAb,CAAqBC,KAAD,IAAW;AACtE,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAlB;;AAEA,QAAIC,KAAK,CAACC,QAAN,CAAevB,CAAf,CAAJ,EAAuB;AACnB,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH,GAR0C,CAArB,IAQhBiB,YARN;AAWA,MAAIZ,WAAW,GAAGX,CAAC,CAAC,gBAAD,CAAnB;AAEA,QAAM8B,IAAI,GAAGL,aAAa,IAAI,CAC1B;AACIG,IAAAA,KAAK,EAAE5B,CAAC,CAAC,OAAD,CADZ;AAEI+B,IAAAA,KAAK,EAAEN,aAAa,CAACO;AAFzB,GAD0B,CAA9B;AAOA,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,YAAD,oBAAkBtB,MAAlB;AACI,IAAA,WAAW,EAAEC,WADjB;AAEI,IAAA,QAAQ,EAAEc,aAAa,IAAI,IAF/B;AAGI,IAAA,QAAQ,EAAEjB,WAHd;AAII,IAAA,OAAO,EAAEC,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADL,eAQK,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEqB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARL,eASK,oBAAC,aAAD;AACI,IAAA,MAAM,EAAErC,MADZ;AAEI,IAAA,QAAQ,EAAEC,QAFd;AAGI,IAAA,QAAQ,EAAEC,QAHd;AAII,IAAA,KAAK,EAAEE,KAJX;AAKI,IAAA,MAAM,EAAC,SALX;AAMI,IAAA,OAAO,EAAE,EACL,GAAGyB,aADE;AAELW,MAAAA,OAAO,EAAER,aAAa,IAAI,EAFrB,CAG7B;AACA;AACA;AACA;;AAN6B,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATL,eAwBK,oBAAC,YAAD,oBACQ3B,MADR;AAEI,IAAA,aAAa,EAAEwB,aAFnB;AAEkC,IAAA,QAAQ,EAAE,CAACA,aAF7C;AAE4D,IAAA,QAAQ,EAAER,YAFtE;AAEoF,IAAA,QAAQ,EAAEL,WAF9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxBL,CADH,CADJ;AAiCH,CApGD;;AAsGAjB,YAAY,CAAC0C,YAAb,GAA4B;AACxBpC,EAAAA,MAAM,EAAE;AACJsB,IAAAA,EAAE,EAAE,gBADA;AAEJe,IAAAA,MAAM,EAAE,CACJ,SADI;AAFJ,GADgB;AAOxBtC,EAAAA,KAAK,EAAE,CACX;AADW;AAPiB,CAA5B;AAYA,eAAeL,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuery } from '../redux/searchById';\n\nimport DialogBase from \"./DialogBase\"\nimport DialogSearch from \"./DialogSearch\"\nimport DialogUpload from \"./DialogUpload\"\n\nimport DialogHeader from \"./DialogHeader\"\nimport DialogSection from \"./DialogSection\"\n\nimport SearchResults from \"./SearchResults\"\n\nimport qs from 'query-string';\n\nconst UploadDialog = ({schema, formData, onChange, onClose, query, upload, ...props}) => {\n    const { t, i18n } = useTranslation(['dialog']);\n    const dispatch = useDispatch()\n\n    const searchById = useSelector(state => state.searchById)\n    const uploadById = {}\n\n    const [q, setQ] = useState(\"\")\n\n    const handleQuery = (q) => {\n        setQ(q)\n    }\n\n    const handleReset = () => {\n        if (q) {\n            setQ(\"\")\n        } else if (onClose) {\n            onClose()\n        }\n    }\n\n    const search = {\n        placeholder: t(\"Search uploads\"),\n    }\n\n    // handle upload\n\n    const [uploadSession, setUploadSession] = useState(false)\n\n    const handleUpload = (acceptedFiles = []) => {\n\n        const uploadData = {\n            collectionId: query.collectionId,\n            status: \"upload\"\n        }\n\n        props.getUpload({id: upload.id, session: uploadSession, acceptedFiles, uploadData})\n\n        setUploadSession(true)\n\n    }\n    \n    // current uploads \n\n    const currentUpload = upload.id && uploadById && uploadById[upload.id];\n    const uploadModels = currentUpload && currentUpload.models \n\n    const uploadResults = uploadModels && q && uploadModels.filter((model) => { \n        const { title } = model\n\n        if (title.includes(q)) {\n            return true\n        }\n\n        return false\n    }) || uploadModels\n\n\n    let placeholder = t(\"Search uploads\")\n\n    const tabs = uploadResults && [\n        {\n            title: t(\"media\"),\n            count: uploadResults.length             \n        }\n    ]\n\n    return (\n        <DialogBase>\n           <DialogSection>\n                <DialogSearch {...search} \n                    placeholder={placeholder}\n                    expanded={uploadResults && true}\n                    onChange={handleQuery}\n                    onReset={handleReset}\n                    \n                />\n                <DialogHeader tabs={tabs}></DialogHeader>\n                <SearchResults \n                    schema={schema}\n                    formData={formData}\n                    onChange={onChange}\n                    query={query}\n                    layout=\"uploads\"\n                    results={{\n                        ...currentUpload,\n                        uploads: uploadResults || [],\n//                        resultsLoaded: currentUpload && currentUpload.models,\n//                        pages: pages,\n//                        page: currentPage,\n//                        nextPage: nextPage\n                    }}\n                />\n                <DialogUpload \n                    {...upload} \n                    currentUpload={currentUpload} expanded={!currentUpload} onUpload={handleUpload} onCancel={handleReset}></DialogUpload>\n            </DialogSection>\n       </DialogBase>        \n    )\n\n}\n\nUploadDialog.defaultProps = {\n    upload: {\n        id: \"/dialog/upload\",\n        accept: [\n            \"image/*\",\n        ],\n    },\n    query: {\n//        mediaType: \"*\"\n    }\n}\n\nexport default UploadDialog"]},"metadata":{},"sourceType":"module"}