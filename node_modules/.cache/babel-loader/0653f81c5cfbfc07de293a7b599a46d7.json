{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Editor/EditorLoader.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAppLayout } from '../redux/app';\nimport { AppLoader } from \"@kit-ui/admin\";\nimport { EditorIcon } from \"@kit-ui/icons\";\n\nconst EditorLoader = ({\n  formData = {},\n  schema,\n  uiSchema,\n  children\n}) => {\n  const app = useSelector(state => state.app);\n  const title = formData.title || app && app.title || \"Editor\";\n  const description = app.isLoading && \"Loading app\" || formData.isLoading && \"Loading editor\" || !schema && \"Loading schema\" || !uiSchema && \"Loading uiSchema\" || \"Editor loaded\";\n  const isLoading = app.isLoading || formData.isLoading || !schema || !uiSchema || false;\n  const isSaving = formData.isSaving;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAppLayout(\"editor\"));\n  }, [isLoading, isSaving]);\n  return /*#__PURE__*/React.createElement(AppLoader, {\n    isLoading: isLoading,\n    icon: /*#__PURE__*/React.createElement(EditorIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }),\n    title: title,\n    description: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nEditorLoader.defaultProps = {};\nexport default EditorLoader;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Editor/EditorLoader.js"],"names":["React","useEffect","useState","useSelector","useDispatch","getAppLayout","AppLoader","EditorIcon","EditorLoader","formData","schema","uiSchema","children","app","state","title","description","isLoading","isSaving","dispatch","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,QAAQ,GAAG,EAAZ;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA;AAAlC,CAAD,KAAiD;AAClE,QAAMC,GAAG,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,GAAhB,CAAvB;AAEA,QAAME,KAAK,GAAGN,QAAQ,CAACM,KAAT,IAAkBF,GAAG,IAAIA,GAAG,CAACE,KAA7B,IAAsC,QAApD;AACA,QAAMC,WAAW,GAAGH,GAAG,CAACI,SAAJ,IAAiB,aAAjB,IAAkCR,QAAQ,CAACQ,SAAT,IAAsB,gBAAxD,IAA4E,CAACP,MAAD,IAAW,gBAAvF,IAA2G,CAACC,QAAD,IAAa,kBAAxH,IAA8I,eAAlK;AAEA,QAAMM,SAAS,GAAGJ,GAAG,CAACI,SAAJ,IAAiBR,QAAQ,CAACQ,SAA1B,IAAuC,CAACP,MAAxC,IAAkD,CAACC,QAAnD,IAA+D,KAAjF;AACA,QAAMO,QAAQ,GAAGT,QAAQ,CAACS,QAA1B;AAEA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ,CAACd,YAAY,CAAC,QAAD,CAAb,CAAR;AACH,GAFQ,EAEN,CAACY,SAAD,EAAYC,QAAZ,CAFM,CAAT;AAIA,sBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAED,SADf;AAEI,IAAA,IAAI,eAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV;AAGI,IAAA,KAAK,EAAEF,KAHX;AAII,IAAA,WAAW,EAAEC,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKSJ,QALT,CADJ;AAUH,CAzBD;;AA2BAJ,YAAY,CAACY,YAAb,GAA4B,EAA5B;AAGA,eAAeZ,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAppLayout } from '../redux/app';\n\nimport { AppLoader } from \"@kit-ui/admin\"\nimport { EditorIcon } from \"@kit-ui/icons\"\n\nconst EditorLoader = ({formData = {}, schema, uiSchema, children}) => {\n    const app = useSelector(state => state.app)\n\n    const title = formData.title || app && app.title || \"Editor\"\n    const description = app.isLoading && \"Loading app\" || formData.isLoading && \"Loading editor\" || !schema && \"Loading schema\" || !uiSchema && \"Loading uiSchema\" || \"Editor loaded\"\n\n    const isLoading = app.isLoading || formData.isLoading || !schema || !uiSchema || false\n    const isSaving = formData.isSaving\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getAppLayout(\"editor\"))\n    }, [isLoading, isSaving])\n\n    return (\n        <AppLoader\n            isLoading={isLoading}\n            icon={<EditorIcon />}\n            title={title}\n            description={description}>\n                {children}\n        </AppLoader>\n)\n\n}\n\nEditorLoader.defaultProps = {\n}\n\nexport default EditorLoader"]},"metadata":{},"sourceType":"module"}