{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/Masonry/Masonry.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { withResizeDetector } from 'react-resize-detector';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  masonry: {\n    width: \"100%\" //        overflow: \"hidden\",\n\n  },\n  row: {\n    display: \"flex\",\n    width: \"auto\",\n    margin: props => {\n      return theme.spacing(props.spacing / 2 * -1);\n    },\n    \"& > *\": {\n      flexBasis: 0,\n      flexGrow: 1\n    }\n  },\n  col: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: props => {\n      return props.colWidth;\n    },\n    maxWidth: props => {\n      return props.colWidth;\n    }\n  },\n  item: {\n    margin: props => {\n      return theme.spacing(props.spacing / 2);\n    },\n    \"& > *\": {\n      display: \"block\",\n      width: \"100%\"\n    }\n  }\n}));\n\nconst Masonry = ({\n  width,\n  columns = 3,\n  spacing = 1,\n  padding = 0,\n  children,\n  debug = false\n}) => {\n  const colWidth = Math.floor(width / columns);\n  const classes = useStyles({\n    padding,\n    spacing,\n    colWidth\n  });\n  const items = [].concat(children || []);\n\n  const getItemsByColumn = () => {\n    let itemsByColumn = {};\n    items.map((item, index) => {\n      const c = index % columns;\n\n      if (!itemsByColumn[c]) {\n        itemsByColumn[c] = [];\n      }\n\n      itemsByColumn[c].push(item);\n    });\n    return itemsByColumn;\n  };\n\n  const itemsByColumn = getItemsByColumn();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.masonry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, itemsByColumn && Object.values(itemsByColumn).map(items => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.col,\n      style: {\n        width: colWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, items.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, item);\n    }));\n  })));\n};\n\nMasonry.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Masonry\",\n  \"props\": {\n    \"columns\": {\n      \"defaultValue\": {\n        \"value\": \"3\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"spacing\": {\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"padding\": {\n      \"defaultValue\": {\n        \"value\": \"0\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"debug\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default withResizeDetector(Masonry);\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Masonry/Masonry.js\"] = {\n    name: \"Masonry\",\n    docgenInfo: Masonry.__docgenInfo,\n    path: \"src/components/Masonry/Masonry.js\"\n  };\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/Masonry/Masonry.js"],"names":["React","PropTypes","withResizeDetector","makeStyles","useStyles","theme","masonry","width","row","display","margin","props","spacing","flexBasis","flexGrow","col","flexDirection","colWidth","maxWidth","item","Masonry","columns","padding","children","debug","Math","floor","classes","items","concat","getItemsByColumn","itemsByColumn","map","index","c","push","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACnCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE,MADF,CAEb;;AAFa,GAD0B;AAKnCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,OAAO,EAAE,MADR;AAEDF,IAAAA,KAAK,EAAE,MAFN;AAGDG,IAAAA,MAAM,EAAEC,KAAK,IAAI;AAAE,aAAON,KAAK,CAACO,OAAN,CAAcD,KAAK,CAACC,OAAN,GAAc,CAAd,GAAkB,CAAC,CAAjC,CAAP;AAA4C,KAH9D;AAKD,aAAS;AACLC,MAAAA,SAAS,EAAE,CADN;AAELC,MAAAA,QAAQ,EAAE;AAFL;AALR,GAL8B;AAenCC,EAAAA,GAAG,EAAE;AACDN,IAAAA,OAAO,EAAE,MADR;AAEDO,IAAAA,aAAa,EAAE,QAFd;AAGDT,IAAAA,KAAK,EAAEI,KAAK,IAAI;AAAE,aAAOA,KAAK,CAACM,QAAb;AAAuB,KAHxC;AAIDC,IAAAA,QAAQ,EAAEP,KAAK,IAAI;AAAE,aAAOA,KAAK,CAACM,QAAb;AAAuB;AAJ3C,GAf8B;AAqBnCE,EAAAA,IAAI,EAAE;AACFT,IAAAA,MAAM,EAAEC,KAAK,IAAI;AAAE,aAAON,KAAK,CAACO,OAAN,CAAcD,KAAK,CAACC,OAAN,GAAc,CAA5B,CAAP;AAAuC,KADxD;AAEF,aAAS;AACLH,MAAAA,OAAO,EAAE,OADJ;AAELF,MAAAA,KAAK,EAAE;AAFF;AAFP;AArB6B,CAAL,CAAN,CAA5B;;AA8BA,MAAMa,OAAO,GAAG,CAAC;AAACb,EAAAA,KAAD;AAAQc,EAAAA,OAAO,GAAG,CAAlB;AAAqBT,EAAAA,OAAO,GAAG,CAA/B;AAAkCU,EAAAA,OAAO,GAAG,CAA5C;AAA+CC,EAAAA,QAA/C;AAAyDC,EAAAA,KAAK,GAAG;AAAjE,CAAD,KAA6E;AAEzF,QAAMP,QAAQ,GAAGQ,IAAI,CAACC,KAAL,CAAWnB,KAAK,GAACc,OAAjB,CAAjB;AAEA,QAAMM,OAAO,GAAGvB,SAAS,CAAC;AAACkB,IAAAA,OAAD;AAAUV,IAAAA,OAAV;AAAmBK,IAAAA;AAAnB,GAAD,CAAzB;AAEA,QAAMW,KAAK,GAAG,GAAGC,MAAH,CAAUN,QAAQ,IAAI,EAAtB,CAAd;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAC3B,QAAIC,aAAa,GAAG,EAApB;AAEAH,IAAAA,KAAK,CAACI,GAAN,CAAU,CAACb,IAAD,EAAOc,KAAP,KAAiB;AAEvB,YAAMC,CAAC,GAAGD,KAAK,GAAGZ,OAAlB;;AAEA,UAAI,CAACU,aAAa,CAACG,CAAD,CAAlB,EAAuB;AACnBH,QAAAA,aAAa,CAACG,CAAD,CAAb,GAAmB,EAAnB;AACH;;AAEDH,MAAAA,aAAa,CAACG,CAAD,CAAb,CAAiBC,IAAjB,CAAsBhB,IAAtB;AAEH,KAVD;AAYA,WAAOY,aAAP;AAEH,GAjBD;;AAoBA,QAAMA,aAAa,GAAGD,gBAAgB,EAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACrB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEqB,OAAO,CAACnB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKuB,aAAa,IAAIK,MAAM,CAACC,MAAP,CAAcN,aAAd,EAA6BC,GAA7B,CAAiCJ,KAAK,IAAI;AACxD,wBACI;AAAK,MAAA,SAAS,EAAED,OAAO,CAACZ,GAAxB;AAA6B,MAAA,KAAK,EAAE;AAACR,QAAAA,KAAK,EAAEU;AAAR,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,KAAK,CAACI,GAAN,CAAUb,IAAI,IAAI;AACf,0BACI;AAAK,QAAA,SAAS,EAAEQ,OAAO,CAACR,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IADL,CADJ;AAKH,KANA,CADL,CADJ;AAWH,GAZiB,CADtB,CADJ,CADJ;AAoBH,CAlDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,eAAejB,kBAAkB,CAACkB,OAAD,CAAjC","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { withResizeDetector } from 'react-resize-detector';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    masonry: {\n        width: \"100%\",\n//        overflow: \"hidden\",\n    },\n    row: {\n        display: \"flex\",\n        width: \"auto\",\n        margin: props => { return theme.spacing(props.spacing/2 * -1) },\n\n        \"& > *\": {\n            flexBasis: 0,\n            flexGrow: 1,\n        }\n    },\n    col: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: props => { return props.colWidth },\n        maxWidth: props => { return props.colWidth },\n    },\n    item: {\n        margin: props => { return theme.spacing(props.spacing/2) },\n        \"& > *\": {\n            display: \"block\",\n            width: \"100%\"\n        }\n    }\n}));\n\nconst Masonry = ({width, columns = 3, spacing = 1, padding = 0, children, debug = false}) => {\n\n    const colWidth = Math.floor(width/columns)\n\n    const classes = useStyles({padding, spacing, colWidth})\n\n    const items = [].concat(children || []);\n\n    const getItemsByColumn = () => {\n        let itemsByColumn = {}\n\n        items.map((item, index) => {\n\n            const c = index % columns\n\n            if (!itemsByColumn[c]) {\n                itemsByColumn[c] = []\n            }\n\n            itemsByColumn[c].push(item)\n\n        })\n\n        return itemsByColumn\n\n    }\n\n\n    const itemsByColumn = getItemsByColumn()\n\n    return (\n        <div className={classes.masonry}>\n            <div className={classes.row}>\n                {itemsByColumn && Object.values(itemsByColumn).map(items => {\n                    return (\n                        <div className={classes.col} style={{width: colWidth}}>\n                            {items.map(item => {\n                                return (\n                                    <div className={classes.item}>\n                                        {item}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n\n}\n\nexport default withResizeDetector(Masonry);"]},"metadata":{},"sourceType":"module"}