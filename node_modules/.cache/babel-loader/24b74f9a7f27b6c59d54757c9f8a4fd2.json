{"ast":null,"code":"import getMenuMedia from \"./getMenuMedia\";\nimport getMenuDocuments from \"./getMenuDocuments\";\nimport getMenuEkultur from \"./getMenuDocuments\";\nimport getMenuLatest from \"./getMenuLatest\";\nimport getMenuTrash from \"./getMenuTrash\";\nimport getMenuSearch from \"./getMenuSearch\";\nexport function getMenuChildren(props) {\n  let children = [];\n  props.children.forEach(child => {\n    child = getMenuChild(child, props);\n    children.push(child);\n  });\n  return children;\n}\nexport function getMenuChild(child, props) {\n  let {\n    root,\n    parent\n  } = props;\n\n  if (!child) {\n    return false;\n  }\n\n  let {\n    type\n  } = child; // url based on type\n\n  if (type === \"search\") {\n    child = getMenuSearch({ ...child\n    });\n  } else if (type === \"documents\") {\n    child = getMenuDocuments({ ...child\n    });\n  } else if (type === \"media\") {\n    child = getMenuMedia({ ...child,\n      pathname: \"media\",\n      mediaTypes: [\"*\"]\n    });\n  } else if (type === \"media/image\") {\n    child = getMenuMedia({\n      pathname: \"image\",\n      ...child,\n      mediaTypes: [\"image\"]\n    });\n  } else if (type === \"media/video\") {\n    child = getMenuMedia({\n      pathname: \"video\",\n      ...child,\n      mediaTypes: [\"video\"]\n    });\n  } else if (type === \"media/audio\") {\n    child = getMenuMedia({\n      pathname: \"audio\",\n      ...child,\n      mediaTypes: [\"audio\"]\n    });\n  } else if (type === \"media/misc\") {\n    child = getMenuMedia({\n      pathname: \"misc\",\n      ...child,\n      mediaTypes: [\"misc\"]\n    });\n  } else if (type === \"media/application\") {\n    child = getMenuMedia({\n      pathname: \"apps\",\n      ...child,\n      mediaTypes: [\"application\"]\n    });\n  } else if (type === \"media/upload\") {\n    child = getMenuMedia({\n      pathname: \"upload\",\n      ...child,\n      mediaTypes: [\"*\"],\n      template: \"upload\",\n      layout: \"uploads\"\n    });\n  } else if (type === \"ekultur\") {\n    child = getMenuEkultur({ ...child\n    });\n  } else if (type === \"latest\") {\n    child = getMenuLatest({ ...child\n    });\n  } else if (type === \"trash\") {\n    child = getMenuTrash({ ...child\n    });\n  } // child props\n\n\n  let {\n    role,\n    url,\n    pathname,\n    children,\n    hidden,\n    query\n  } = child; // query\n\n  if (query && !query.collectionId) {\n    query.collectionId = props.collectionId;\n  } // parent & role\n\n\n  if (!parent && role) {\n    role = role;\n  } else {\n    role = undefined;\n  } // url based on pathname\n\n\n  if (!url && pathname && pathname.startsWith('/')) {\n    url = pathname;\n  }\n\n  if (!url && root && pathname) {\n    url = root + '/' + pathname;\n  }\n\n  if (!url && root) {\n    url = root;\n  } // icon\n\n\n  let {\n    icon\n  } = child;\n\n  if (parent && !parent.hidden) {\n    icon = undefined;\n  } // hidden\n\n\n  if (hidden) {\n    url = undefined;\n  } // rootUrl\n\n\n  const rootUrl = url || root;\n  child = { ...child,\n    icon: icon,\n    url: url,\n    role: role,\n    query: query,\n    children: children && children.length && getMenuChildren({ ...props,\n      children: children,\n      root: rootUrl,\n      parent: child\n    }) || null\n  };\n  return child;\n}\nexport default getMenuChildren;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/utils/getMenuChildren.js"],"names":["getMenuMedia","getMenuDocuments","getMenuEkultur","getMenuLatest","getMenuTrash","getMenuSearch","getMenuChildren","props","children","forEach","child","getMenuChild","push","root","parent","type","pathname","mediaTypes","template","layout","role","url","hidden","query","collectionId","undefined","startsWith","icon","rootUrl","length"],"mappings":"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","sourcesContent":["import getMenuMedia from \"./getMenuMedia\"\nimport getMenuDocuments from \"./getMenuDocuments\"\nimport getMenuEkultur from \"./getMenuDocuments\"\nimport getMenuLatest from \"./getMenuLatest\"\nimport getMenuTrash from \"./getMenuTrash\"\nimport getMenuSearch from \"./getMenuSearch\"\n\nexport function getMenuChildren(props) {\n    let children = []\n  \n    props.children.forEach((child) => {\n        child = getMenuChild(child, props);\n        children.push(child);\n    });\n    \n    return children\n    \n}\n\nexport function getMenuChild(child, props) {\n    let { root, parent } = props;\n\n    if (!child) {\n        return false;\n    }\n    \n    let { type } = child;\n\n    // url based on type\n\n    if (type === \"search\") {\n        child = getMenuSearch({...child})\n\n    } else if (type === \"documents\") {\n        child = getMenuDocuments({...child})\n\n    } else if (type === \"media\") {\n        child = getMenuMedia({...child, pathname: \"media\", mediaTypes: [\"*\"]})\n\n    } else if (type === \"media/image\") {\n        child = getMenuMedia({pathname: \"image\", ...child, mediaTypes: [\"image\"]})\n\n    } else if (type === \"media/video\") {\n        child = getMenuMedia({pathname: \"video\", ...child, mediaTypes: [\"video\"]})\n\n    } else if (type === \"media/audio\") {\n        child = getMenuMedia({pathname: \"audio\", ...child, mediaTypes: [\"audio\"]})\n\n    } else if (type === \"media/misc\") {\n        child = getMenuMedia({pathname: \"misc\", ...child, mediaTypes: [\"misc\"]})\n\n    } else if (type === \"media/application\") {\n        child = getMenuMedia({pathname: \"apps\", ...child, mediaTypes: [\"application\"]})\n\n    } else if (type === \"media/upload\") {\n        child = getMenuMedia({pathname: \"upload\", ...child, mediaTypes: [\"*\"], template: \"upload\", layout: \"uploads\"})\n\n    } else if (type === \"ekultur\") {\n        child = getMenuEkultur({...child})\n\n    } else if (type === \"latest\") {\n        child = getMenuLatest({...child})\n\n    } else if (type === \"trash\") {\n        child = getMenuTrash({...child})\n\n    }\n    \n    // child props\n\n    let { role, url, pathname, children, hidden, query } = child\n\n    // query\n\n    if (query && !query.collectionId) {\n        query.collectionId = props.collectionId\n    }\n\n    // parent & role\n\n    if (!parent && role) {\n        role = role\n    } else {\n        role = undefined\n    }\n\n    // url based on pathname\n    \n    if (!url && pathname && pathname.startsWith('/')) {\n        url = pathname;\n    }\n\n    if (!url && root && pathname) {\n        url = root + '/' + pathname;\n    }\n  \n    if (!url && root) {\n        url = root;\n    }\n\n    // icon\n\n    let { icon } = child\n\n    if (parent && !parent.hidden) {\n        icon = undefined\n    }\n\n    // hidden\n\n    if (hidden) {\n        url = undefined\n    }\n\n    // rootUrl\n\n    const rootUrl = url || root\n\n    child = {\n        ...child,\n        icon: icon,\n        url: url,\n        role: role,\n        query: query,\n        children: children && children.length && getMenuChildren({...props, children: children, root: rootUrl, parent: child}) || null\n    }\n      \n    return child;\n    \n  }\n\n  export default getMenuChildren"]},"metadata":{},"sourceType":"module"}