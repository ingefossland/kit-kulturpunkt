{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Dialog/ResultsHeader.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    fontFamily: \"Akkurat, sans-serif\",\n    fontSize: \"14px\",\n    color: theme.palette.text.primary,\n    \"& * + *\": {\n      marginLeft: theme.spacing(.5)\n    },\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    borderTop: \"1px solid\",\n    borderColor: theme.palette.divider,\n    paddingTop: theme.spacing(1)\n  },\n  title: {\n    fontFamily: \"Akkurat, sans-serif\",\n    fontSize: \"14px\",\n    fontWeight: \"bold\"\n  },\n  description: {\n    fontFamily: \"Akkurat, sans-serif\",\n    fontSize: \"14px\"\n  }\n}));\n\nconst ResultsHeader = ({\n  resultsLoaded = [],\n  count,\n  start,\n  rows,\n  pages,\n  page,\n  onPage\n}) => {\n  const {\n    t,\n    i18n\n  } = useTranslation('search');\n  rows = resultsLoaded.length;\n  let title;\n\n  if (count > rows) {\n    title = t('{{rows}} of {{count}} hits', {\n      pages,\n      page,\n      count,\n      rows\n    });\n  } else {\n    title = t('{{count}} hits', {\n      pages,\n      page,\n      count,\n      rows\n    });\n  }\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, title));\n};\n\nexport default ResultsHeader;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Dialog/ResultsHeader.js"],"names":["React","Typography","makeStyles","useTranslation","useStyles","theme","root","display","alignItems","fontFamily","fontSize","color","palette","text","primary","marginLeft","spacing","marginRight","borderTop","borderColor","divider","paddingTop","title","fontWeight","description","ResultsHeader","resultsLoaded","count","start","rows","pages","page","onPage","t","i18n","length","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,UAAU,EAAE,UAFV;AAGFC,IAAAA,UAAU,EAAE,qBAHV;AAIFC,IAAAA,QAAQ,EAAE,MAJR;AAKFC,IAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBC,OALxB;AAMF,eAAW;AACPC,MAAAA,UAAU,EAAEV,KAAK,CAACW,OAAN,CAAc,EAAd;AADL,KANT;AASFD,IAAAA,UAAU,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,CATV;AAUFC,IAAAA,WAAW,EAAEZ,KAAK,CAACW,OAAN,CAAc,CAAd,CAVX;AAWFE,IAAAA,SAAS,EAAE,WAXT;AAYFC,IAAAA,WAAW,EAAEd,KAAK,CAACO,OAAN,CAAcQ,OAZzB;AAaFC,IAAAA,UAAU,EAAEhB,KAAK,CAACW,OAAN,CAAc,CAAd;AAbV,GAD6B;AAgBnCM,EAAAA,KAAK,EAAE;AACHb,IAAAA,UAAU,EAAE,qBADT;AAEHC,IAAAA,QAAQ,EAAE,MAFP;AAGHa,IAAAA,UAAU,EAAE;AAHT,GAhB4B;AAqBnCC,EAAAA,WAAW,EAAE;AACTf,IAAAA,UAAU,EAAE,qBADH;AAETC,IAAAA,QAAQ,EAAE;AAFD;AArBsB,CAAL,CAAN,CAA5B;;AA2BA,MAAMe,aAAa,GAAG,CAAC;AAACC,EAAAA,aAAa,GAAG,EAAjB;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA,KAA5B;AAAmCC,EAAAA,IAAnC;AAAyCC,EAAAA,KAAzC;AAAgDC,EAAAA,IAAhD;AAAsDC,EAAAA;AAAtD,CAAD,KAAmE;AACrF,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAc/B,cAAc,CAAC,QAAD,CAAlC;AAEA0B,EAAAA,IAAI,GAAGH,aAAa,CAACS,MAArB;AAEA,MAAIb,KAAJ;;AAEA,MAAIK,KAAK,GAAGE,IAAZ,EAAkB;AACdP,IAAAA,KAAK,GAAGW,CAAC,CAAC,4BAAD,EAA+B;AAAEH,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeJ,MAAAA,KAAf;AAAqBE,MAAAA;AAArB,KAA/B,CAAT;AACH,GAFD,MAEO;AACHP,IAAAA,KAAK,GAAGW,CAAC,CAAC,gBAAD,EAAmB;AAAEH,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeJ,MAAAA,KAAf;AAAsBE,MAAAA;AAAtB,KAAnB,CAAT;AACH;;AAED,QAAMO,OAAO,GAAGhC,SAAS,EAAzB;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAEgC,OAAO,CAAC9B,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE8B,OAAO,CAACd,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,KAAvC,CADJ,CADJ;AAMH,CArBD;;AAuBA,eAAeG,aAAf","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"baseline\",\n        fontFamily: \"Akkurat, sans-serif\",\n        fontSize: \"14px\",\n        color: theme.palette.text.primary,\n        \"& * + *\": {\n            marginLeft: theme.spacing(.5)\n        },\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        borderTop: \"1px solid\",\n        borderColor: theme.palette.divider,\n        paddingTop: theme.spacing(1)\n    },\n    title: {\n        fontFamily: \"Akkurat, sans-serif\",\n        fontSize: \"14px\",\n        fontWeight: \"bold\"\n    },\n    description: {\n        fontFamily: \"Akkurat, sans-serif\",\n        fontSize: \"14px\",\n    }\n}));\n\nconst ResultsHeader = ({resultsLoaded = [], count, start, rows, pages, page, onPage}) => {\n    const { t, i18n } = useTranslation('search');\n\n    rows = resultsLoaded.length;\n\n    let title;\n\n    if (count > rows) {\n        title = t('{{rows}} of {{count}} hits', { pages, page, count,rows });\n    } else {\n        title = t('{{count}} hits', { pages, page, count, rows });\n    }\n    \n    const classes = useStyles()\n\n    return (\n        <header className={classes.root}>\n            <Typography className={classes.title}>{title}</Typography>\n        </header>\n    )\n\n}\n\nexport default ResultsHeader"]},"metadata":{},"sourceType":"module"}