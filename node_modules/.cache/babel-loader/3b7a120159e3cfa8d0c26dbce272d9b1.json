{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Admin/MediaUpload.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getApp, getAppLayout, getParents } from '../redux/app';\nimport { getUpload } from '../redux/uploadById';\nimport FinderLayout from \"../Finder/FinderLayout\";\nimport ListLayout from \"../Finder/ListLayout\";\nimport UploadDropzone from \"../Upload/UploadDropzone\";\n\nconst MediaUpload = props => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAppLayout(\"finder\"));\n  }, []);\n  const app = useSelector(state => state.app);\n  const menuByUrl = app && app.menuByUrl;\n  const {\n    pathname\n  } = props.location;\n  useEffect(() => {\n    menuByUrl && dispatch(getParents({\n      menuByUrl,\n      pathname: pathname\n    }));\n  }, [menuByUrl, pathname]);\n\n  const _onUpload = (acceptedFiles = []) => {\n    const uploadData = {\n      collectionId: app.collectionId,\n      status: \"upload\"\n    };\n    dispatch(getUpload({\n      id: pathname,\n      acceptedFiles,\n      uploadData\n    }));\n  };\n\n  const uploadById = useSelector(state => state.uploadById);\n  const currentUpload = uploadById && uploadById[pathname] || {};\n  return /*#__PURE__*/React.createElement(FinderLayout, {\n    parents: app && app.parents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListLayout, Object.assign({}, currentUpload, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(UploadDropzone, {\n    onUpload: _onUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }));\n};\n\nMediaUpload.defaultProps = {};\nexport default MediaUpload;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Admin/MediaUpload.js"],"names":["React","useEffect","useState","useSelector","useDispatch","getApp","getAppLayout","getParents","getUpload","FinderLayout","ListLayout","UploadDropzone","MediaUpload","props","dispatch","app","state","menuByUrl","pathname","location","_onUpload","acceptedFiles","uploadData","collectionId","status","id","uploadById","currentUpload","parents","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,UAA/B,QAAiD,cAAjD;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACR,YAAY,CAAC,QAAD,CAAb,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMS,GAAG,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,GAAhB,CAAvB;AACA,QAAME,SAAS,GAAGF,GAAG,IAAIA,GAAG,CAACE,SAA7B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeL,KAAK,CAACM,QAA3B;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,SAAS,IAAIH,QAAQ,CAACP,UAAU,CAAC;AAACU,MAAAA,SAAD;AAAYC,MAAAA,QAAQ,EAAEA;AAAtB,KAAD,CAAX,CAArB;AACH,GAFQ,EAEN,CAACD,SAAD,EAAYC,QAAZ,CAFM,CAAT;;AAKA,QAAME,SAAS,GAAG,CAACC,aAAa,GAAG,EAAjB,KAAwB;AAEtC,UAAMC,UAAU,GAAG;AACfC,MAAAA,YAAY,EAAER,GAAG,CAACQ,YADH;AAEfC,MAAAA,MAAM,EAAE;AAFO,KAAnB;AAKAV,IAAAA,QAAQ,CAACN,SAAS,CAAC;AACfiB,MAAAA,EAAE,EAAEP,QADW;AAEfG,MAAAA,aAFe;AAGfC,MAAAA;AAHe,KAAD,CAAV,CAAR;AAMH,GAbD;;AAgBA,QAAMI,UAAU,GAAGvB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACU,UAAhB,CAA9B;AAEA,QAAMC,aAAa,GAAGD,UAAU,IAAIA,UAAU,CAACR,QAAD,CAAxB,IAAsC,EAA5D;AAGA,sBACI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAEH,GAAG,IAAIA,GAAG,CAACa,OADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEQ,oBAAC,UAAD,oBAAgBD,aAAhB,EAAmCd,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFR,eAGQ,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEO,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CADJ;AAQH,CA9CD;;AAgDAR,WAAW,CAACiB,YAAZ,GAA2B,EAA3B;AAGA,eAAejB,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getApp, getAppLayout, getParents } from '../redux/app';\nimport { getUpload } from '../redux/uploadById';\n\nimport FinderLayout from \"../Finder/FinderLayout\"\nimport ListLayout from \"../Finder/ListLayout\"\nimport UploadDropzone from \"../Upload/UploadDropzone\"\n\nconst MediaUpload = (props) => {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getAppLayout(\"finder\"))\n    }, [])\n\n    const app = useSelector(state => state.app)\n    const menuByUrl = app && app.menuByUrl\n\n    const { pathname } = props.location\n\n    useEffect(() => {\n        menuByUrl && dispatch(getParents({menuByUrl, pathname: pathname}))\n    }, [menuByUrl, pathname])\n\n\n    const _onUpload = (acceptedFiles = []) => {\n\n        const uploadData = {\n            collectionId: app.collectionId,\n            status: \"upload\"\n        }\n\n        dispatch(getUpload({\n            id: pathname,\n            acceptedFiles,\n            uploadData\n        }))\n\n    }\n\n\n    const uploadById = useSelector(state => state.uploadById)\n\n    const currentUpload = uploadById && uploadById[pathname] || {}\n\n\n    return (\n        <FinderLayout\n            parents={app && app.parents}>\n                <ListLayout {...currentUpload} {...props} />\n                <UploadDropzone onUpload={_onUpload} />\n        </FinderLayout>\n    )\n\n}\n\nMediaUpload.defaultProps = {\n}\n\nexport default MediaUpload"]},"metadata":{},"sourceType":"module"}