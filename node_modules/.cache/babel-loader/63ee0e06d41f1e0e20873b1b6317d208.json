{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/KpLink/KpLinkMediaField.js\";\nimport React, { Component } from 'react';\nimport { ImagePreview } from \"@kit-ui/admin\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"block\",\n    position: \"relative\",\n    backgroundColor: \"#333\",\n    color: \"white\",\n    \"&:hover $preview\": {\n      opacity: .5\n    }\n  },\n  action: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"& > [role=group]\": {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n  },\n  preview: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n}));\n\nconst LayoutButtons = () => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 38\n    }\n  }, \"x\");\n};\n\nconst KpLinkMediaField = props => {\n  const {\n    mediaId,\n    media,\n    referenceId,\n    reference\n  } = props;\n  const classes = useStyles(); //    const onUpload = formContext && formContext.onUpload\n\n  const onDialog = formContext && formContext.onMediaDialog;\n  const onChange = formContext && formContext.onMediaChange;\n  const mediaButtons = [{\n    icon: \"remove_circle\",\n    label: \"Remove\",\n    variant: \"text\",\n    size: \"small\",\n    onClick: () => onChange({\n      mediaId: undefined,\n      media: {}\n    })\n  }];\n  const buttons = [{\n    icon: \"search\",\n    label: \"Finn media\",\n    color: \"inherit\",\n    size: \"small\",\n    onClick: () => onDialog(sidebar.query)\n  }];\n  const buttonGroupProps = {\n    \"alignItems\": \"center\",\n    \"flexDirection\": \"column\"\n  };\n  const imageUrl = mediaId && media && media.imageUrl || referenceId && reference && reference.imageUrl;\n\n  if (media && media.imageUrl) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      className: classes.root,\n      \"data-name\": \"media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ImagePreview, {\n      className: classes.preview,\n      imageUrl: media.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(LayoutButtons, {\n      className: classes.action,\n      buttonGroupProps: buttonGroupProps,\n      buttons: mediaButtons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (referenceId && reference && reference.imageUrl) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      className: classes.root,\n      \"data-name\": \"media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ImagePreview, {\n      className: classes.preview,\n      imageUrl: reference.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(LayoutButtons, {\n      className: classes.action,\n      buttonGroupProps: buttonGroupProps,\n      buttons: buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.root,\n    \"data-name\": \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LayoutButtons, {\n    className: classes.action,\n    buttonGroupProps: buttonGroupProps,\n    buttons: buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default KpLinkMediaField;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/KpLink/KpLinkMediaField.js"],"names":["React","Component","ImagePreview","makeStyles","Grid","useStyles","theme","root","display","position","backgroundColor","color","opacity","action","zIndex","top","right","bottom","left","alignItems","justifyContent","flexDirection","preview","LayoutButtons","KpLinkMediaField","props","mediaId","media","referenceId","reference","classes","onDialog","formContext","onMediaDialog","onChange","onMediaChange","mediaButtons","icon","label","variant","size","onClick","undefined","buttons","sidebar","query","buttonGroupProps","imageUrl"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ImagePreview } from \"@kit-ui/admin\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"block\",\n        position: \"relative\",\n        backgroundColor: \"#333\",\n        color: \"white\",\n\n        \"&:hover $preview\": {\n            opacity: .5,\n        }\n\n    },\n    action: {\n        zIndex: 2,\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n\n        \"& > [role=group]\": {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n        }\n\n    },\n    preview: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    }\n}));\n\nconst LayoutButtons = () => { return <p>x</p>}\n\nconst KpLinkMediaField = (props) => {\n\n    const {Â mediaId, media, referenceId, reference } = props;\n\n    const classes = useStyles()\n\n//    const onUpload = formContext && formContext.onUpload\n    const onDialog = formContext && formContext.onMediaDialog\n    const onChange = formContext && formContext.onMediaChange\n\n    const mediaButtons = [\n        {\n            icon: \"remove_circle\",\n            label: \"Remove\",\n            variant: \"text\",\n            size: \"small\",\n            onClick: () => onChange({mediaId: undefined, media: {}})\n        }\n    ]\n\n    const buttons = [\n        {\n            icon: \"search\",\n            label: \"Finn media\",\n            color: \"inherit\",\n            size: \"small\",\n            onClick: () => onDialog(sidebar.query)\n        }\n    ]\n\n    const buttonGroupProps = {\n        \"alignItems\": \"center\",\n        \"flexDirection\": \"column\"\n    }\n\n    const imageUrl = mediaId && media && media.imageUrl || referenceId && reference && reference.imageUrl;\n\n    if (media && media.imageUrl) {\n        return (\n            <Grid item className={classes.root} data-name=\"media\">\n                <ImagePreview className={classes.preview} imageUrl={media.imageUrl} />\n                <LayoutButtons className={classes.action} buttonGroupProps={buttonGroupProps} buttons={mediaButtons} />\n            </Grid>\n        )\n    }\n\n    if (referenceId && reference && reference.imageUrl) {\n        return (\n            <Grid item className={classes.root} data-name=\"media\">\n                <ImagePreview className={classes.preview} imageUrl={reference.imageUrl} />\n                <LayoutButtons className={classes.action} buttonGroupProps={buttonGroupProps} buttons={buttons} />\n            </Grid>\n        )\n    }\n\n    return (\n        <Grid item className={classes.root} data-name=\"media\">\n            <LayoutButtons className={classes.action} buttonGroupProps={buttonGroupProps} buttons={buttons} />\n        </Grid>\n    )\n\n}\n\nexport default KpLinkMediaField"]},"metadata":{},"sourceType":"module"}