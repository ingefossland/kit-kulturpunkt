{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { getDefaultFormState, getUiOptions } from \"../utils\";\nimport { getCropdataSchema } from \"./cropdata\";\nimport { getFocalpointSchema } from \"./focalpoint\";\nimport { getFiltersSchema } from \"./filters\";\nimport { getAnnotationsSchema } from \"./annotations\";\n\nvar getMediaField = function getMediaField(_ref) {\n  var schema = _ref.schema,\n      _ref$uiSchema = _ref.uiSchema,\n      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema,\n      props = _objectWithoutPropertiesLoose(_ref, [\"schema\", \"uiSchema\"]);\n\n  var _schema = schema,\n      mediaType = _schema.mediaType;\n  var uiOptions = getUiOptions(uiSchema);\n  var imageCropdata = schema.cropdata || schema.imageCropdata || uiOptions.imageCropdata || undefined;\n  var imageFocalpoint = schema.focalpoint || schema.imageFocalpoint || uiOptions.imageFocalpoint || undefined;\n  var imageAnnotations = schema.annotations || schema.imageAnnotations || uiOptions.imageAnnotations || undefined;\n  var imageFilters = schema.filters || schema.imageFilters || uiOptions.imageFilters || undefined;\n  schema = {\n    \"type\": \"object\",\n    \"properties\": {\n      \"mediaId\": {\n        \"type\": \"string\",\n        \"readonly\": true\n      },\n      \"media\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mediaType\": {\n            \"type\": \"string\",\n            \"default\": mediaType,\n            \"readonly\": true\n          }\n        }\n      }\n    }\n  };\n\n  if (mediaType === \"image\" && imageCropdata) {\n    schema = _extends({}, schema, {\n      properties: _extends({}, schema.properties, {\n        \"imageCropdata\": getCropdataSchema()\n      })\n    });\n  }\n\n  if (mediaType === \"image\" && imageFocalpoint) {\n    schema = _extends({}, schema, {\n      properties: _extends({}, schema.properties, {\n        \"imageFocalpoint\": getFocalpointSchema()\n      })\n    });\n  }\n\n  if (mediaType === \"image\" && imageAnnotations) {\n    schema = _extends({}, schema, {\n      properties: _extends({}, schema.properties, {\n        \"imageAnnotations\": getAnnotationsSchema()\n      })\n    });\n  }\n\n  if (mediaType === \"image\" && imageFilters) {\n    schema = _extends({}, schema, {\n      properties: _extends({}, schema.properties, {\n        \"imageFilters\": getFiltersSchema({\n          filters: imageFilters\n        })\n      })\n    });\n  }\n\n  var formData = getDefaultFormState(schema, _extends({}, props.formData));\n  return _extends({}, props, {\n    formData: formData,\n    schema: schema,\n    uiSchema: _extends({\n      \"ui:field\": \"media\"\n    }, uiSchema)\n  });\n};\n\nexport default getMediaField;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/es/fieldTypes/media.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","getDefaultFormState","getUiOptions","getCropdataSchema","getFocalpointSchema","getFiltersSchema","getAnnotationsSchema","getMediaField","_ref","schema","_ref$uiSchema","uiSchema","props","_schema","mediaType","uiOptions","imageCropdata","cropdata","undefined","imageFocalpoint","focalpoint","imageAnnotations","annotations","imageFilters","filters","properties","formData"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { getDefaultFormState, getUiOptions } from \"../utils\";\nimport { getCropdataSchema } from \"./cropdata\";\nimport { getFocalpointSchema } from \"./focalpoint\";\nimport { getFiltersSchema } from \"./filters\";\nimport { getAnnotationsSchema } from \"./annotations\";\n\nvar getMediaField = function getMediaField(_ref) {\n  var schema = _ref.schema,\n      _ref$uiSchema = _ref.uiSchema,\n      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema,\n      props = _objectWithoutPropertiesLoose(_ref, [\"schema\", \"uiSchema\"]);\n\n  var _schema = schema,\n      mediaType = _schema.mediaType;\n  var uiOptions = getUiOptions(uiSchema);\n  var imageCropdata = schema.cropdata || schema.imageCropdata || uiOptions.imageCropdata || undefined;\n  var imageFocalpoint = schema.focalpoint || schema.imageFocalpoint || uiOptions.imageFocalpoint || undefined;\n  var imageAnnotations = schema.annotations || schema.imageAnnotations || uiOptions.imageAnnotations || undefined;\n  var imageFilters = schema.filters || schema.imageFilters || uiOptions.imageFilters || undefined;\n  schema = {\n    \"type\": \"object\",\n    \"properties\": {\n      \"mediaId\": {\n        \"type\": \"string\",\n        \"readonly\": true\n      },\n      \"media\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mediaType\": {\n            \"type\": \"string\",\n            \"default\": mediaType,\n            \"readonly\": true\n          }\n        }\n      }\n    }\n  };\n\n  if (mediaType === \"image\" && imageCropdata) {\n    schema = _extends({}, schema, {\n      properties: _extends({}, schema.properties, {\n        \"imageCropdata\": getCropdataSchema()\n      })\n    });\n  }\n\n  if (mediaType === \"image\" && imageFocalpoint) {\n    schema = _extends({}, schema, {\n      properties: _extends({}, schema.properties, {\n        \"imageFocalpoint\": getFocalpointSchema()\n      })\n    });\n  }\n\n  if (mediaType === \"image\" && imageAnnotations) {\n    schema = _extends({}, schema, {\n      properties: _extends({}, schema.properties, {\n        \"imageAnnotations\": getAnnotationsSchema()\n      })\n    });\n  }\n\n  if (mediaType === \"image\" && imageFilters) {\n    schema = _extends({}, schema, {\n      properties: _extends({}, schema.properties, {\n        \"imageFilters\": getFiltersSchema({\n          filters: imageFilters\n        })\n      })\n    });\n  }\n\n  var formData = getDefaultFormState(schema, _extends({}, props.formData));\n  return _extends({}, props, {\n    formData: formData,\n    schema: schema,\n    uiSchema: _extends({\n      \"ui:field\": \"media\"\n    }, uiSchema)\n  });\n};\n\nexport default getMediaField;"]},"metadata":{},"sourceType":"module"}