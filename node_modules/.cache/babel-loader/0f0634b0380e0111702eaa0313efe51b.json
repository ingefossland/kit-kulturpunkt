{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Dialog/DialogSection.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { withResizeDetector } from 'react-resize-detector';\nimport { makeStyles } from '@material-ui/core/styles';\nimport _ from \"lodash\";\nconst useStyles = makeStyles(theme => ({\n  section: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflowY: \"scroll\"\n  }\n}));\n\nconst DialogSection = ({\n  height,\n  onScroll,\n  children\n}) => {\n  const classes = useStyles();\n  const parentRef = useRef();\n\n  const handleScroll = _.debounce(event => {\n    onScroll && onScroll(event);\n  }, 500);\n\n  useEffect(() => {\n    const ph = parentRef.current && parentRef.current.offsetHeight;\n    const ch = parentRef.current && parentRef.current.children && parentRef.current.children[0] && parentRef.current.children[0].offsetHeight;\n    parentRef.current.addEventListener(\"scroll\", handleScroll);\n\n    if (ph < ch) {//            setOverflow(true)\n    }\n\n    return () => {\n      parentRef.current.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [children, height]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.section,\n    ref: parentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default withResizeDetector(DialogSection);","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Dialog/DialogSection.js"],"names":["React","useRef","useState","useEffect","withResizeDetector","makeStyles","_","useStyles","theme","section","position","zIndex","top","right","bottom","left","overflowY","DialogSection","height","onScroll","children","classes","parentRef","handleScroll","debounce","event","ph","current","offsetHeight","ch","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACnCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,MAAM,EAAE,CAFH;AAGLC,IAAAA,GAAG,EAAE,CAHA;AAILC,IAAAA,KAAK,EAAE,CAJF;AAKLC,IAAAA,MAAM,EAAE,CALH;AAMLC,IAAAA,IAAI,EAAE,CAND;AAOLC,IAAAA,SAAS,EAAE;AAPN;AAD0B,CAAL,CAAN,CAA5B;;AAYA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AACpD,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AAEA,QAAMe,SAAS,GAAGrB,MAAM,EAAxB;;AAEA,QAAMsB,YAAY,GAAGjB,CAAC,CAACkB,QAAF,CAAYC,KAAD,IAAW;AACvCN,IAAAA,QAAQ,IAAIA,QAAQ,CAACM,KAAD,CAApB;AACH,GAFoB,EAElB,GAFkB,CAArB;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,EAAE,GAAGJ,SAAS,CAACK,OAAV,IAAqBL,SAAS,CAACK,OAAV,CAAkBC,YAAlD;AACA,UAAMC,EAAE,GAAGP,SAAS,CAACK,OAAV,IAAqBL,SAAS,CAACK,OAAV,CAAkBP,QAAvC,IAAmDE,SAAS,CAACK,OAAV,CAAkBP,QAAlB,CAA2B,CAA3B,CAAnD,IAAoFE,SAAS,CAACK,OAAV,CAAkBP,QAAlB,CAA2B,CAA3B,EAA8BQ,YAA7H;AAEAN,IAAAA,SAAS,CAACK,OAAV,CAAkBG,gBAAlB,CAAmC,QAAnC,EAA6CP,YAA7C;;AAEA,QAAIG,EAAE,GAAGG,EAAT,EAAa,CACrB;AACS;;AAED,WAAO,MAAM;AACTP,MAAAA,SAAS,CAACK,OAAV,CAAkBI,mBAAlB,CAAsC,QAAtC,EAAgDR,YAAhD;AACH,KAFD;AAIH,GAdQ,EAcN,CAACH,QAAD,EAAWF,MAAX,CAdM,CAAT;AAiBA,sBACI;AAAS,IAAA,SAAS,EAAEG,OAAO,CAACZ,OAA5B;AAAqC,IAAA,GAAG,EAAEa,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QADL,CADJ;AAKH,CA/BD;;AAiCA,eAAehB,kBAAkB,CAACa,aAAD,CAAjC","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { withResizeDetector } from 'react-resize-detector';\nimport { makeStyles } from '@material-ui/core/styles';\nimport _ from \"lodash\"\n\nconst useStyles = makeStyles(theme => ({\n    section: {\n        position: \"absolute\",\n        zIndex: 1,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        overflowY: \"scroll\",\n    }\n}));\n\nconst DialogSection = ({height, onScroll, children}) => {\n    const classes = useStyles()\n\n    const parentRef = useRef()\n\n    const handleScroll = _.debounce((event) => {\n        onScroll && onScroll(event)\n    }, 500)\n\n    useEffect(() => {\n        const ph = parentRef.current && parentRef.current.offsetHeight\n        const ch = parentRef.current && parentRef.current.children && parentRef.current.children[0] && parentRef.current.children[0].offsetHeight\n\n        parentRef.current.addEventListener(\"scroll\", handleScroll);\n\n        if (ph < ch) {\n//            setOverflow(true)\n        }\n\n        return () => {\n            parentRef.current.removeEventListener(\"scroll\", handleScroll);\n        };\n\n    }, [children, height]);\n\n\n    return (\n        <section className={classes.section} ref={parentRef}>\n            {children}\n        </section>\n    )\n}\n\nexport default withResizeDetector(DialogSection)"]},"metadata":{},"sourceType":"module"}