{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Finder/FinderQuery.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuery } from '../redux/searchById';\nimport qs from 'query-string';\nimport List from \"./ListLayout\";\nimport Masonry from \"./MasonryLayout\";\nimport Gallery from \"./GalleryLayout\";\nconst templates = {\n  \"list\": List,\n  \"masonry\": Masonry,\n  \"gallery\": Gallery,\n  \"media\": Gallery\n};\n\nconst FinderQuery = ({\n  query,\n  layout = \"list\",\n  ...props\n}) => {\n  const dispatch = useDispatch();\n  const {\n    pathname,\n    search\n  } = props.location; // query\n\n  useEffect(() => {\n    query && dispatch(getQuery(query));\n  }, [pathname, query.q]); // search\n\n  const searchById = useSelector(state => state.searchById);\n  const currentSearch = searchById && searchById[query.id] || {};\n\n  const _onPage = page => {\n    const sq = props.location.search && qs.parse(props.location.search);\n    const url = props.location.pathname + \"?\" + qs.stringify({ ...sq,\n      page: page\n    });\n    props.history.replace(url);\n    dispatch(getQuery({ ...query,\n      page: page\n    }));\n  };\n\n  const _onCreate = () => {\n    props.history.push(props.location.pathname + '/' + query.documentType + \"/new\");\n  }; // template\n\n\n  const Template = templates && templates[layout] || templates[\"list\"];\n\n  if (Template) {\n    return /*#__PURE__*/React.createElement(Template, Object.assign({}, props, currentSearch, {\n      onPage: _onPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }));\n  }\n};\n\nFinderQuery.defaultProps = {};\nexport default FinderQuery;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Finder/FinderQuery.js"],"names":["React","useEffect","useState","useSelector","useDispatch","getQuery","qs","List","Masonry","Gallery","templates","FinderQuery","query","layout","props","dispatch","pathname","search","location","q","searchById","state","currentSearch","id","_onPage","page","sq","parse","url","stringify","history","replace","_onCreate","push","documentType","Template","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,EAAP,MAAe,cAAf;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,MAAMC,SAAS,GAAG;AACd,UAAQH,IADM;AAEd,aAAWC,OAFG;AAGd,aAAWC,OAHG;AAId,WAASA;AAJK,CAAlB;;AAOA,MAAME,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,MAAM,GAAG,MAAjB;AAAyB,KAAGC;AAA5B,CAAD,KAAwC;AACxD,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBH,KAAK,CAACI,QAAnC,CAHwD,CAKxD;;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,IAAIG,QAAQ,CAACV,QAAQ,CAACO,KAAD,CAAT,CAAjB;AACH,GAFQ,EAEN,CAACI,QAAD,EAAWJ,KAAK,CAACO,CAAjB,CAFM,CAAT,CAPwD,CAWxD;;AAEA,QAAMC,UAAU,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAME,aAAa,GAAGF,UAAU,IAAIA,UAAU,CAACR,KAAK,CAACW,EAAP,CAAxB,IAAsC,EAA5D;;AAEA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACtB,UAAMC,EAAE,GAAGZ,KAAK,CAACI,QAAN,CAAeD,MAAf,IAAyBX,EAAE,CAACqB,KAAH,CAASb,KAAK,CAACI,QAAN,CAAeD,MAAxB,CAApC;AACA,UAAMW,GAAG,GAAGd,KAAK,CAACI,QAAN,CAAeF,QAAf,GAA0B,GAA1B,GAAgCV,EAAE,CAACuB,SAAH,CAAa,EAAC,GAAGH,EAAJ;AAAQD,MAAAA,IAAI,EAAEA;AAAd,KAAb,CAA5C;AACAX,IAAAA,KAAK,CAACgB,OAAN,CAAcC,OAAd,CAAsBH,GAAtB;AAEAb,IAAAA,QAAQ,CAACV,QAAQ,CAAC,EACd,GAAGO,KADW;AAEda,MAAAA,IAAI,EAAEA;AAFQ,KAAD,CAAT,CAAR;AAIH,GATD;;AAWA,QAAMO,SAAS,GAAG,MAAM;AACpBlB,IAAAA,KAAK,CAACgB,OAAN,CAAcG,IAAd,CAAmBnB,KAAK,CAACI,QAAN,CAAeF,QAAf,GAA0B,GAA1B,GAAgCJ,KAAK,CAACsB,YAAtC,GAAqD,MAAxE;AACH,GAFD,CA3BwD,CA+BxD;;;AAEA,QAAMC,QAAQ,GAAGzB,SAAS,IAAIA,SAAS,CAACG,MAAD,CAAtB,IAAkCH,SAAS,CAAC,MAAD,CAA5D;;AAEA,MAAIyB,QAAJ,EAAc;AACV,wBAAO,oBAAC,QAAD,oBAAcrB,KAAd,EAAyBQ,aAAzB;AAAwC,MAAA,MAAM,EAAEE,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH;AAGJ,CAxCD;;AA0CAb,WAAW,CAACyB,YAAZ,GAA2B,EAA3B;AAGA,eAAezB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuery } from '../redux/searchById';\nimport qs from 'query-string';\n\nimport List from \"./ListLayout\"\nimport Masonry from \"./MasonryLayout\"\nimport Gallery from \"./GalleryLayout\"\n\nconst templates = {\n    \"list\": List,\n    \"masonry\": Masonry,\n    \"gallery\": Gallery,\n    \"media\": Gallery,\n}\n\nconst FinderQuery = ({query, layout = \"list\", ...props}) => {\n    const dispatch = useDispatch()\n\n    const { pathname, search } = props.location\n\n    // query\n\n    useEffect(() => {\n        query && dispatch(getQuery(query))\n    }, [pathname, query.q])\n\n    // search\n\n    const searchById = useSelector(state => state.searchById)\n    const currentSearch = searchById && searchById[query.id] ||Â {}\n    \n    const _onPage = (page) => {\n        const sq = props.location.search && qs.parse(props.location.search)\n        const url = props.location.pathname + \"?\" + qs.stringify({...sq, page: page});\n        props.history.replace(url)\n\n        dispatch(getQuery({\n            ...query,\n            page: page\n        }))\n    }\n\n    const _onCreate = () => {\n        props.history.push(props.location.pathname + '/' + query.documentType + \"/new\")\n    }\n\n    // template\n\n    const Template = templates && templates[layout] || templates[\"list\"]\n\n    if (Template) {\n        return <Template {...props} {...currentSearch} onPage={_onPage} />\n    }\n\n\n}\n\nFinderQuery.defaultProps = {\n}\n\nexport default FinderQuery"]},"metadata":{},"sourceType":"module"}