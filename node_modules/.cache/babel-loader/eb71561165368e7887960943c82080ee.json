{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nexport var getReferenceSchema = function getReferenceSchema(props) {\n  var schema = props.schema;\n  var documentType = schema.documentType,\n      referenceType = schema.referenceType,\n      _reverseReferenceType = schema._reverseReferenceType,\n      _reverseReference = schema._reverseReference,\n      content = schema.content; // default schema\n\n  var defaultSchema = {\n    \"type\": \"object\",\n    \"properties\": {\n      \"referenceId\": {\n        \"type\": \"string\",\n        \"readonly\": true\n      },\n      \"referenceType\": {\n        \"type\": \"string\",\n        \"default\": undefined,\n        \"readonly\": true\n      },\n      \"reference\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"uniqueId\": {\n            \"type\": \"string\",\n            \"default\": undefined,\n            \"readonly\": true\n          },\n          \"documentType\": {\n            \"type\": \"string\",\n            \"default\": undefined,\n            \"readonly\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"default\": \"Untitled\"\n          },\n          \"_action\": {\n            \"type\": \"string\",\n            \"readonly\": true,\n            \"default\": \"update\"\n          }\n        }\n      },\n      \"_action\": {\n        \"type\": \"string\",\n        \"readonly\": true,\n        \"default\": \"update\"\n      }\n    }\n  }; // referenceType\n\n  if (referenceType) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        referenceType: _extends({}, defaultSchema.properties.referenceType, {\n          default: referenceType\n        })\n      })\n    });\n  } // reference\n\n\n  if (documentType) {\n    var defaultType, defaultEnum;\n\n    if (Array.isArray(documentType)) {\n      defaultType = documentType[0];\n      defaultEnum = documentType;\n    } else {\n      defaultType = documentType;\n    }\n\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        reference: _extends({}, defaultSchema.properties.reference, {\n          properties: _extends({}, defaultSchema.properties.reference.properties, {\n            documentType: _extends({}, defaultSchema.properties.reference.properties.documentType, {\n              default: defaultType,\n              enum: defaultEnum\n            }),\n            title: _extends({}, defaultSchema.properties.reference.properties.title, {\n              default: \"Untitled \" + defaultType\n            })\n          })\n        })\n      })\n    });\n  } // _reverseReferenceType\n\n\n  if (_reverseReferenceType) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        _reverseReferenceType: {\n          \"type\": \"string\",\n          \"default\": _reverseReferenceType,\n          \"readonly\": true\n        }\n      })\n    });\n  } // _reverseReference\n\n\n  if (_reverseReference) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        _reverseReference: {\n          \"type\": \"string\",\n          \"default\": _reverseReference,\n          \"readonly\": true\n        }\n      })\n    });\n  } // content\n\n\n  if (content && content.properties) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        content: {\n          \"type\": \"object\",\n          \"properties\": content.properties\n        }\n      })\n    });\n  } // properties\n\n\n  if (schema.properties) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, schema.properties)\n    });\n  }\n\n  return defaultSchema;\n};\nexport var getReferenceField = function getReferenceField(props) {\n  var schema = getReferenceSchema(props);\n  return _extends({}, props, {\n    schema: schema,\n    uiSchema: _extends({\n      \"ui:field\": \"reference\"\n    }, props.uiSchema)\n  });\n};\nexport default getReferenceField;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/es/fieldTypes/reference.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","getReferenceSchema","props","schema","documentType","referenceType","_reverseReferenceType","_reverseReference","content","defaultSchema","undefined","properties","default","defaultType","defaultEnum","Array","isArray","reference","enum","title","getReferenceField","uiSchema"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nexport var getReferenceSchema = function getReferenceSchema(props) {\n  var schema = props.schema;\n  var documentType = schema.documentType,\n      referenceType = schema.referenceType,\n      _reverseReferenceType = schema._reverseReferenceType,\n      _reverseReference = schema._reverseReference,\n      content = schema.content; // default schema\n\n  var defaultSchema = {\n    \"type\": \"object\",\n    \"properties\": {\n      \"referenceId\": {\n        \"type\": \"string\",\n        \"readonly\": true\n      },\n      \"referenceType\": {\n        \"type\": \"string\",\n        \"default\": undefined,\n        \"readonly\": true\n      },\n      \"reference\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"uniqueId\": {\n            \"type\": \"string\",\n            \"default\": undefined,\n            \"readonly\": true\n          },\n          \"documentType\": {\n            \"type\": \"string\",\n            \"default\": undefined,\n            \"readonly\": true\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"default\": \"Untitled\"\n          },\n          \"_action\": {\n            \"type\": \"string\",\n            \"readonly\": true,\n            \"default\": \"update\"\n          }\n        }\n      },\n      \"_action\": {\n        \"type\": \"string\",\n        \"readonly\": true,\n        \"default\": \"update\"\n      }\n    }\n  }; // referenceType\n\n  if (referenceType) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        referenceType: _extends({}, defaultSchema.properties.referenceType, {\n          default: referenceType\n        })\n      })\n    });\n  } // reference\n\n\n  if (documentType) {\n    var defaultType, defaultEnum;\n\n    if (Array.isArray(documentType)) {\n      defaultType = documentType[0];\n      defaultEnum = documentType;\n    } else {\n      defaultType = documentType;\n    }\n\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        reference: _extends({}, defaultSchema.properties.reference, {\n          properties: _extends({}, defaultSchema.properties.reference.properties, {\n            documentType: _extends({}, defaultSchema.properties.reference.properties.documentType, {\n              default: defaultType,\n              enum: defaultEnum\n            }),\n            title: _extends({}, defaultSchema.properties.reference.properties.title, {\n              default: \"Untitled \" + defaultType\n            })\n          })\n        })\n      })\n    });\n  } // _reverseReferenceType\n\n\n  if (_reverseReferenceType) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        _reverseReferenceType: {\n          \"type\": \"string\",\n          \"default\": _reverseReferenceType,\n          \"readonly\": true\n        }\n      })\n    });\n  } // _reverseReference\n\n\n  if (_reverseReference) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        _reverseReference: {\n          \"type\": \"string\",\n          \"default\": _reverseReference,\n          \"readonly\": true\n        }\n      })\n    });\n  } // content\n\n\n  if (content && content.properties) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, {\n        content: {\n          \"type\": \"object\",\n          \"properties\": content.properties\n        }\n      })\n    });\n  } // properties\n\n\n  if (schema.properties) {\n    defaultSchema = _extends({}, defaultSchema, {\n      properties: _extends({}, defaultSchema.properties, schema.properties)\n    });\n  }\n\n  return defaultSchema;\n};\nexport var getReferenceField = function getReferenceField(props) {\n  var schema = getReferenceSchema(props);\n  return _extends({}, props, {\n    schema: schema,\n    uiSchema: _extends({\n      \"ui:field\": \"reference\"\n    }, props.uiSchema)\n  });\n};\nexport default getReferenceField;"]},"metadata":{},"sourceType":"module"}