{"ast":null,"code":"import React, { useState } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  var _button;\n\n  return {\n    button: (_button = {\n      backgroundColor: \"transparent\",\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n      marginLeft: theme.spacing(.5),\n      marginRight: theme.spacing(.5),\n      borderRadius: \"100%\"\n    }, _button[\"backgroundColor\"] = function backgroundColor(props) {\n      return props.selected && theme.palette.primary.main || \"transparent\";\n    }, _button.color = function color(props) {\n      return props.selected && theme.palette.primary.contrastText || props.value && theme.palette.primary.main || \"currentColor\";\n    }, _button[\"&:hover\"] = {\n      backgroundColor: function backgroundColor(props) {\n        return props.selected && theme.palette.primary.main || \"transparent\";\n      },\n      opacity: 1\n    }, _button),\n    label: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"16px\",\n      position: \"absolute\",\n      top: 0,\n      height: \"1em\",\n      marginTop: \"-2em\",\n      width: \"100%\",\n      overflow: \"visible\"\n    },\n    value: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"16px\"\n    },\n    circle: {\n      transition: \"stroke-dashoffset 0.35s\",\n      transform: \"rotate(-90deg)\",\n      transformOrigin: \"50% 50%\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    circleBackground: {\n      fill: \"transparent\",\n      stroke: \"currentColor\",\n      opacity: .25\n    },\n    circleProgress: {\n      stroke: \"currentColor\"\n    }\n  };\n});\n\nvar FilterButton = function FilterButton(_ref) {\n  var min = _ref.min,\n      max = _ref.max,\n      icon = _ref.icon,\n      label = _ref.label,\n      name = _ref.name,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? 0 : _ref$value,\n      selected = _ref.selected,\n      onClick = _ref.onClick;\n  var progress = value;\n  var classes = useStyles({\n    progress: progress,\n    selected: selected,\n    value: value\n  });\n\n  var ProgressCircle = function ProgressCircle(_ref2) {\n    var _ref2$radius = _ref2.radius,\n        radius = _ref2$radius === void 0 ? 24 : _ref2$radius,\n        _ref2$stroke = _ref2.stroke,\n        stroke = _ref2$stroke === void 0 ? 2 : _ref2$stroke,\n        progress = _ref2.progress;\n    var normalizedRadius = radius - stroke / 2 * 2;\n    var circumference = normalizedRadius * 2 * Math.PI;\n    var strokeDashoffset = circumference - progress / 100 * circumference;\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      className: classes.circle,\n      width: radius * 2,\n      height: radius * 2\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      className: classes.circleBackground,\n      stroke: \"black\",\n      fill: \"transparent\",\n      strokeWidth: stroke,\n      r: normalizedRadius,\n      cx: radius,\n      cy: radius\n    }), /*#__PURE__*/React.createElement(\"circle\", {\n      className: classes.circleProgress,\n      stroke: \"black\",\n      fill: \"transparent\",\n      strokeWidth: stroke,\n      strokeDasharray: circumference + ' ' + circumference,\n      style: {\n        strokeDashoffset: strokeDashoffset\n      },\n      \"stroke-width\": stroke,\n      r: normalizedRadius,\n      cx: radius,\n      cy: radius\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.button,\n    \"aria-selected\": selected,\n    onClick: onClick\n  }, /*#__PURE__*/React.createElement(ProgressCircle, {\n    progress: value\n  }), selected && value && /*#__PURE__*/React.createElement(\"b\", {\n    className: classes.value\n  }, value) || /*#__PURE__*/React.createElement(Icon, {\n    className: classes.icon\n  }, icon));\n};\n\nexport default FilterButton;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/node_modules/@kit-ui/admin/es/SvgFilters/SvgFilterButton.js"],"names":["React","useState","IconButton","Icon","makeStyles","useStyles","theme","_button","button","backgroundColor","width","spacing","height","marginLeft","marginRight","borderRadius","props","selected","palette","primary","main","color","contrastText","value","opacity","label","fontFamily","fontSize","position","top","marginTop","overflow","circle","transition","transform","transformOrigin","right","bottom","left","circleBackground","fill","stroke","circleProgress","FilterButton","_ref","min","max","icon","name","_ref$value","onClick","progress","classes","ProgressCircle","_ref2","_ref2$radius","radius","_ref2$stroke","normalizedRadius","circumference","Math","PI","strokeDashoffset","createElement","className","strokeWidth","r","cx","cy","strokeDasharray","style"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  var _button;\n\n  return {\n    button: (_button = {\n      backgroundColor: \"transparent\",\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n      marginLeft: theme.spacing(.5),\n      marginRight: theme.spacing(.5),\n      borderRadius: \"100%\"\n    }, _button[\"backgroundColor\"] = function backgroundColor(props) {\n      return props.selected && theme.palette.primary.main || \"transparent\";\n    }, _button.color = function color(props) {\n      return props.selected && theme.palette.primary.contrastText || props.value && theme.palette.primary.main || \"currentColor\";\n    }, _button[\"&:hover\"] = {\n      backgroundColor: function backgroundColor(props) {\n        return props.selected && theme.palette.primary.main || \"transparent\";\n      },\n      opacity: 1\n    }, _button),\n    label: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"16px\",\n      position: \"absolute\",\n      top: 0,\n      height: \"1em\",\n      marginTop: \"-2em\",\n      width: \"100%\",\n      overflow: \"visible\"\n    },\n    value: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"16px\"\n    },\n    circle: {\n      transition: \"stroke-dashoffset 0.35s\",\n      transform: \"rotate(-90deg)\",\n      transformOrigin: \"50% 50%\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    circleBackground: {\n      fill: \"transparent\",\n      stroke: \"currentColor\",\n      opacity: .25\n    },\n    circleProgress: {\n      stroke: \"currentColor\"\n    }\n  };\n});\n\nvar FilterButton = function FilterButton(_ref) {\n  var min = _ref.min,\n      max = _ref.max,\n      icon = _ref.icon,\n      label = _ref.label,\n      name = _ref.name,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? 0 : _ref$value,\n      selected = _ref.selected,\n      onClick = _ref.onClick;\n  var progress = value;\n  var classes = useStyles({\n    progress: progress,\n    selected: selected,\n    value: value\n  });\n\n  var ProgressCircle = function ProgressCircle(_ref2) {\n    var _ref2$radius = _ref2.radius,\n        radius = _ref2$radius === void 0 ? 24 : _ref2$radius,\n        _ref2$stroke = _ref2.stroke,\n        stroke = _ref2$stroke === void 0 ? 2 : _ref2$stroke,\n        progress = _ref2.progress;\n    var normalizedRadius = radius - stroke / 2 * 2;\n    var circumference = normalizedRadius * 2 * Math.PI;\n    var strokeDashoffset = circumference - progress / 100 * circumference;\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      className: classes.circle,\n      width: radius * 2,\n      height: radius * 2\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      className: classes.circleBackground,\n      stroke: \"black\",\n      fill: \"transparent\",\n      strokeWidth: stroke,\n      r: normalizedRadius,\n      cx: radius,\n      cy: radius\n    }), /*#__PURE__*/React.createElement(\"circle\", {\n      className: classes.circleProgress,\n      stroke: \"black\",\n      fill: \"transparent\",\n      strokeWidth: stroke,\n      strokeDasharray: circumference + ' ' + circumference,\n      style: {\n        strokeDashoffset: strokeDashoffset\n      },\n      \"stroke-width\": stroke,\n      r: normalizedRadius,\n      cx: radius,\n      cy: radius\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.button,\n    \"aria-selected\": selected,\n    onClick: onClick\n  }, /*#__PURE__*/React.createElement(ProgressCircle, {\n    progress: value\n  }), selected && value && /*#__PURE__*/React.createElement(\"b\", {\n    className: classes.value\n  }, value) || /*#__PURE__*/React.createElement(Icon, {\n    className: classes.icon\n  }, icon));\n};\n\nexport default FilterButton;"]},"metadata":{},"sourceType":"module"}