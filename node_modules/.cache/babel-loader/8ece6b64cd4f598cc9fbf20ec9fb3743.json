{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeexParser = void 0;\n\nconst initDebug = require(\"debug\");\n\nconst Speex = require(\"./Speex\");\n\nconst VorbisParser_1 = require(\"../vorbis/VorbisParser\");\n\nconst debug = initDebug('music-metadata:parser:ogg:speex');\n/**\n * Speex, RFC 5574\n * Ref:\n *   https://www.speex.org/docs/manual/speex-manual/\n *   https://tools.ietf.org/html/rfc5574\n */\n\nclass SpeexParser extends VorbisParser_1.VorbisParser {\n  constructor(metadata, options, tokenizer) {\n    super(metadata, options);\n    this.tokenizer = tokenizer;\n  }\n  /**\n   * Parse first Speex Ogg page\n   * @param {IPageHeader} header\n   * @param {Buffer} pageData\n   */\n\n\n  parseFirstPage(header, pageData) {\n    debug('First Ogg/Speex page');\n    const speexHeader = Speex.Header.get(pageData, 0);\n    this.metadata.setFormat('codec', `Speex ${speexHeader.version}`);\n    this.metadata.setFormat('numberOfChannels', speexHeader.nb_channels);\n    this.metadata.setFormat('sampleRate', speexHeader.rate);\n\n    if (speexHeader.bitrate !== -1) {\n      this.metadata.setFormat('bitrate', speexHeader.bitrate);\n    }\n  }\n\n}\n\nexports.SpeexParser = SpeexParser;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/music-metadata/lib/ogg/speex/SpeexParser.js"],"names":["Object","defineProperty","exports","value","SpeexParser","initDebug","require","Speex","VorbisParser_1","debug","VorbisParser","constructor","metadata","options","tokenizer","parseFirstPage","header","pageData","speexHeader","Header","get","setFormat","version","nb_channels","rate","bitrate"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,wBAAD,CAA9B;;AACA,MAAMG,KAAK,GAAGJ,SAAS,CAAC,iCAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMD,WAAN,SAA0BI,cAAc,CAACE,YAAzC,CAAsD;AAClDC,EAAAA,WAAW,CAACC,QAAD,EAAWC,OAAX,EAAoBC,SAApB,EAA+B;AACtC,UAAMF,QAAN,EAAgBC,OAAhB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,cAAc,CAACC,MAAD,EAASC,QAAT,EAAmB;AAC7BR,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACA,UAAMS,WAAW,GAAGX,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAiBH,QAAjB,EAA2B,CAA3B,CAApB;AACA,SAAKL,QAAL,CAAcS,SAAd,CAAwB,OAAxB,EAAkC,SAAQH,WAAW,CAACI,OAAQ,EAA9D;AACA,SAAKV,QAAL,CAAcS,SAAd,CAAwB,kBAAxB,EAA4CH,WAAW,CAACK,WAAxD;AACA,SAAKX,QAAL,CAAcS,SAAd,CAAwB,YAAxB,EAAsCH,WAAW,CAACM,IAAlD;;AACA,QAAIN,WAAW,CAACO,OAAZ,KAAwB,CAAC,CAA7B,EAAgC;AAC5B,WAAKb,QAAL,CAAcS,SAAd,CAAwB,SAAxB,EAAmCH,WAAW,CAACO,OAA/C;AACH;AACJ;;AAnBiD;;AAqBtDvB,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeexParser = void 0;\nconst initDebug = require(\"debug\");\nconst Speex = require(\"./Speex\");\nconst VorbisParser_1 = require(\"../vorbis/VorbisParser\");\nconst debug = initDebug('music-metadata:parser:ogg:speex');\n/**\n * Speex, RFC 5574\n * Ref:\n *   https://www.speex.org/docs/manual/speex-manual/\n *   https://tools.ietf.org/html/rfc5574\n */\nclass SpeexParser extends VorbisParser_1.VorbisParser {\n    constructor(metadata, options, tokenizer) {\n        super(metadata, options);\n        this.tokenizer = tokenizer;\n    }\n    /**\n     * Parse first Speex Ogg page\n     * @param {IPageHeader} header\n     * @param {Buffer} pageData\n     */\n    parseFirstPage(header, pageData) {\n        debug('First Ogg/Speex page');\n        const speexHeader = Speex.Header.get(pageData, 0);\n        this.metadata.setFormat('codec', `Speex ${speexHeader.version}`);\n        this.metadata.setFormat('numberOfChannels', speexHeader.nb_channels);\n        this.metadata.setFormat('sampleRate', speexHeader.rate);\n        if (speexHeader.bitrate !== -1) {\n            this.metadata.setFormat('bitrate', speexHeader.bitrate);\n        }\n    }\n}\nexports.SpeexParser = SpeexParser;\n//# sourceMappingURL=SpeexParser.js.map"]},"metadata":{},"sourceType":"script"}