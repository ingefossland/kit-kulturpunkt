{"ast":null,"code":"import React from \"react\";\nimport Color from 'color';\n\nvar DuotoneFilter = function DuotoneFilter(_ref) {\n  var id = _ref.id,\n      values = _ref.values,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? [\"blue\", \"red\"] : _ref$colors;\n  var color1 = colors && colors[0] && Color(colors[0]).color;\n  var color2 = colors && colors[0] && Color(colors[1]).color;\n  console.log(color1);\n  values = [color2[0] / 256 - color1[0] / 256, 0, 0, 0, color1[0] / 256, color2[1] / 256 - color1[1] / 256, 0, 0, 0, color1[1] / 256, color2[2] / 256 - color1[2] / 256, 0, 0, 0, color1[2] / 256, 0, 0, 0, 1, 0];\n  /*\n  \n  const getMatrix = (color1, color2) => {\n      return [\n        (color2[0] / 256) - (color1[0] / 256), 0, 0, 0, color1[0] / 256,\n        (color2[1] / 256) - (color1[1] / 256), 0, 0, 0, color1[1] / 256,\n        (color2[2] / 256) - (color1[2] / 256), 0, 0, 0, color1[2] / 256,\n        0, 0, 0, 1, 0,\n      ];\n    }\n  \n   */\n\n  return /*#__PURE__*/React.createElement(\"filter\", {\n    id: id,\n    x: \"-20%\",\n    y: \"-20%\",\n    width: \"140%\",\n    height: \"140%\",\n    filterUnits: \"objectBoundingBox\",\n    primitiveUnits: \"userSpaceOnUse\",\n    \"color-interpolation-filters\": \"linearRGB\"\n  }, /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: values,\n    result: \"duotone\"\n  }));\n};\n\nDuotoneFilter.defaultProps = {\n  values: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]\n};\nexport default DuotoneFilter;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/node_modules/@kit-ui/admin/es/SvgFilters/DuotoneFilter.js"],"names":["React","Color","DuotoneFilter","_ref","id","values","_ref$colors","colors","color1","color","color2","console","log","createElement","x","y","width","height","filterUnits","primitiveUnits","type","result","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,EAAE,GAAGD,IAAI,CAACC,EAAd;AAAA,MACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;AAAA,MAEIC,WAAW,GAAGH,IAAI,CAACI,MAFvB;AAAA,MAGIA,MAAM,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyB,CAAC,MAAD,EAAS,KAAT,CAAzB,GAA2CA,WAHxD;AAIA,MAAIE,MAAM,GAAGD,MAAM,IAAIA,MAAM,CAAC,CAAD,CAAhB,IAAuBN,KAAK,CAACM,MAAM,CAAC,CAAD,CAAP,CAAL,CAAiBE,KAArD;AACA,MAAIC,MAAM,GAAGH,MAAM,IAAIA,MAAM,CAAC,CAAD,CAAhB,IAAuBN,KAAK,CAACM,MAAM,CAAC,CAAD,CAAP,CAAL,CAAiBE,KAArD;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAH,EAAAA,MAAM,GAAG,CAACK,MAAM,CAAC,CAAD,CAAN,GAAY,GAAZ,GAAkBF,MAAM,CAAC,CAAD,CAAN,GAAY,GAA/B,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6CA,MAAM,CAAC,CAAD,CAAN,GAAY,GAAzD,EAA8DE,MAAM,CAAC,CAAD,CAAN,GAAY,GAAZ,GAAkBF,MAAM,CAAC,CAAD,CAAN,GAAY,GAA5F,EAAiG,CAAjG,EAAoG,CAApG,EAAuG,CAAvG,EAA0GA,MAAM,CAAC,CAAD,CAAN,GAAY,GAAtH,EAA2HE,MAAM,CAAC,CAAD,CAAN,GAAY,GAAZ,GAAkBF,MAAM,CAAC,CAAD,CAAN,GAAY,GAAzJ,EAA8J,CAA9J,EAAiK,CAAjK,EAAoK,CAApK,EAAuKA,MAAM,CAAC,CAAD,CAAN,GAAY,GAAnL,EAAwL,CAAxL,EAA2L,CAA3L,EAA8L,CAA9L,EAAiM,CAAjM,EAAoM,CAApM,CAAT;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,SAAO,aAAaR,KAAK,CAACa,aAAN,CAAoB,QAApB,EAA8B;AAChDT,IAAAA,EAAE,EAAEA,EAD4C;AAEhDU,IAAAA,CAAC,EAAE,MAF6C;AAGhDC,IAAAA,CAAC,EAAE,MAH6C;AAIhDC,IAAAA,KAAK,EAAE,MAJyC;AAKhDC,IAAAA,MAAM,EAAE,MALwC;AAMhDC,IAAAA,WAAW,EAAE,mBANmC;AAOhDC,IAAAA,cAAc,EAAE,gBAPgC;AAQhD,mCAA+B;AARiB,GAA9B,EASjB,aAAanB,KAAK,CAACa,aAAN,CAAoB,eAApB,EAAqC;AACnDO,IAAAA,IAAI,EAAE,QAD6C;AAEnDf,IAAAA,MAAM,EAAEA,MAF2C;AAGnDgB,IAAAA,MAAM,EAAE;AAH2C,GAArC,CATI,CAApB;AAcD,CApCD;;AAsCAnB,aAAa,CAACoB,YAAd,GAA6B;AAC3BjB,EAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D;AADmB,CAA7B;AAGA,eAAeH,aAAf","sourcesContent":["import React from \"react\";\nimport Color from 'color';\n\nvar DuotoneFilter = function DuotoneFilter(_ref) {\n  var id = _ref.id,\n      values = _ref.values,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? [\"blue\", \"red\"] : _ref$colors;\n  var color1 = colors && colors[0] && Color(colors[0]).color;\n  var color2 = colors && colors[0] && Color(colors[1]).color;\n  console.log(color1);\n  values = [color2[0] / 256 - color1[0] / 256, 0, 0, 0, color1[0] / 256, color2[1] / 256 - color1[1] / 256, 0, 0, 0, color1[1] / 256, color2[2] / 256 - color1[2] / 256, 0, 0, 0, color1[2] / 256, 0, 0, 0, 1, 0];\n  /*\n  \n  const getMatrix = (color1, color2) => {\n      return [\n        (color2[0] / 256) - (color1[0] / 256), 0, 0, 0, color1[0] / 256,\n        (color2[1] / 256) - (color1[1] / 256), 0, 0, 0, color1[1] / 256,\n        (color2[2] / 256) - (color1[2] / 256), 0, 0, 0, color1[2] / 256,\n        0, 0, 0, 1, 0,\n      ];\n    }\n  \n   */\n\n  return /*#__PURE__*/React.createElement(\"filter\", {\n    id: id,\n    x: \"-20%\",\n    y: \"-20%\",\n    width: \"140%\",\n    height: \"140%\",\n    filterUnits: \"objectBoundingBox\",\n    primitiveUnits: \"userSpaceOnUse\",\n    \"color-interpolation-filters\": \"linearRGB\"\n  }, /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: values,\n    result: \"duotone\"\n  }));\n};\n\nDuotoneFilter.defaultProps = {\n  values: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]\n};\nexport default DuotoneFilter;"]},"metadata":{},"sourceType":"module"}