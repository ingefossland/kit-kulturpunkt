{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/Section/SectionButtons.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  buttongroup: {\n    margin: props => {\n      return theme.spacing(props.spacing / 2 * -1);\n    },\n    \"& > *\": {\n      margin: props => {\n        return theme.spacing(props.spacing / 2);\n      }\n    }\n  },\n  button: {\n    fontFamily: \"Akkurat, sans-serif\",\n    fontSize: \"14px\",\n    fontWeight: \"bold\",\n    textTransform: \"none\",\n    letterSpacing: 0,\n    borderRadius: 1,\n    minWidth: theme.spacing(12),\n    minHeight: theme.spacing(7)\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    \"& + $label\": {\n      marginRight: theme.spacing(1)\n    }\n  },\n  label: {}\n}));\n\nconst SectionButton = ({\n  icon,\n  title,\n  color = \"primary\",\n  variant = \"outlined\",\n  size = \"large\",\n  ...props\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Button, Object.assign({}, props, {\n    type: \"button\",\n    \"data-size\": size,\n    \"data-variant\": variant,\n    disableElevation: true,\n    color: color,\n    variant: variant,\n    size: size,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), icon && /*#__PURE__*/React.createElement(Icon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, icon), /*#__PURE__*/React.createElement(\"b\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, title));\n};\n\nconst SectionButtons = ({\n  className,\n  spacing = 1,\n  buttons = []\n}) => {\n  const classes = useStyles({\n    spacing\n  });\n\n  if (!buttons.length) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonGroup, {\n    color: \"primary\",\n    className: className || classes.buttongroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, buttons && buttons.map((button, index) => {\n    return /*#__PURE__*/React.createElement(SectionButton, Object.assign({}, button, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }));\n  }));\n};\n\nSectionButtons.defaultProps = {\n  \"spacing\": 1\n};\nSectionButtons.propTypes = {\n  buttons: PropTypes.array,\n  buttonGroupProps: PropTypes.object,\n  buttonProps: PropTypes.object\n};\nexport default SectionButtons;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/Section/SectionButtons.js"],"names":["React","PropTypes","ButtonGroup","Button","Icon","makeStyles","useStyles","theme","buttongroup","margin","props","spacing","button","fontFamily","fontSize","fontWeight","textTransform","letterSpacing","borderRadius","minWidth","minHeight","icon","marginRight","label","SectionButton","title","color","variant","size","classes","SectionButtons","className","buttons","length","map","index","defaultProps","propTypes","array","buttonGroupProps","object","buttonProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\"\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\"\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    buttongroup: {\n        margin: props => { return theme.spacing(props.spacing/2 * -1) },\n        \"& > *\": {\n            margin: props => { return theme.spacing(props.spacing/2) },\n        }\n    },\n    button: {\n        fontFamily: \"Akkurat, sans-serif\",\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        textTransform: \"none\",\n        letterSpacing: 0,\n        borderRadius: 1,\n        minWidth: theme.spacing(12),\n        minHeight: theme.spacing(7),\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        \"& + $label\": {\n            marginRight: theme.spacing(1)\n        }\n    },\n    label: {\n\n    }\n}));\n\nconst SectionButton = ({icon, title, color=\"primary\", variant=\"outlined\", size=\"large\", ...props}) => {\n    const classes = useStyles()\n    \n    return (\n        <Button {...props} type=\"button\" data-size={size} data-variant={variant} disableElevation={true} color={color} variant={variant} size={size} className={classes.button}>\n            { icon && <Icon className={classes.icon}>{icon}</Icon>}\n            <b className={classes.label}>{title}</b>\n        </Button>\n    )\n\n}\n\n\nconst SectionButtons = ({className, spacing = 1, buttons = []}) => {\n\n    const classes = useStyles({spacing})\n\n    if (!buttons.length) {\n        return null\n    }\n\n    return (\n        <ButtonGroup color=\"primary\" className={className ||Â classes.buttongroup}>\n            { buttons && buttons.map((button, index) => {\n                return (\n                    <SectionButton {...button} key={index} />\n                )\n            })}\n        </ButtonGroup>\n    )\n    \n}\n\nSectionButtons.defaultProps = {\n    \"spacing\": 1\n}\n\nSectionButtons.propTypes = {\n    buttons: PropTypes.array,\n    buttonGroupProps: PropTypes.object,\n    buttonProps: PropTypes.object\n}\n\nexport default SectionButtons;"]},"metadata":{},"sourceType":"module"}