{"ast":null,"code":"import moment from 'moment';\nimport \"moment/locale/nb\";\nimport \"moment/locale/nn\";\nimport \"moment/locale/sv\";\nexport const getCalendarMonth = ({\n  date,\n  format = 'YYYY-MM-DD'\n}) => {\n  const dt = moment(date).format(format);\n  const monthStart = moment(dt).startOf('month').format(format);\n  const monthEnd = moment(dt).endOf('month').format(format);\n  const dtStart = moment(dt).startOf('month').startOf('isoWeek').format(format);\n  const dtEnd = moment(dt).endOf('month').endOf('isoWeek').format(format);\n  const weeks = moment(dtEnd).diff(dtStart, 'week');\n  const today = moment().format(format);\n  let rows = [];\n\n  for (let w = 0; w <= weeks; w++) {\n    let datetime = moment(dtStart).add(w, 'weeks');\n    datetime = moment(datetime).set('hour', 0);\n    datetime = moment(datetime).set('minute', 0);\n    datetime = moment(datetime).set('second', 0);\n    let cols = [];\n    let week = datetime;\n\n    for (let d = 0; d <= 6; d++) {\n      datetime = moment(week).add(d, 'days');\n      const isToday = moment(datetime).isSame(today, 'day');\n      const isCurrentMonth = moment(datetime).isBetween(monthStart, monthEnd, undefined, '[]');\n      cols.push({\n        isToday: isToday,\n        isCurrentMonth: isCurrentMonth,\n        date: moment(datetime).format(format)\n      });\n    }\n\n    rows.push(cols);\n  }\n\n  return {\n    dt: dt,\n    dtStart: dtStart,\n    dtEnd: dtEnd,\n    rows: rows\n  };\n};\nexport default getCalendarMonth;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/utils/getCalendar.js"],"names":["moment","getCalendarMonth","date","format","dt","monthStart","startOf","monthEnd","endOf","dtStart","dtEnd","weeks","diff","today","rows","w","datetime","add","set","cols","week","d","isToday","isSame","isCurrentMonth","isBetween","undefined","push"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport \"moment/locale/nb\";\nimport \"moment/locale/nn\";\nimport \"moment/locale/sv\";\n\nexport const getCalendarMonth = ({date, format = 'YYYY-MM-DD'}) => {\n\n    const dt = moment(date).format(format);\n\n    const monthStart = moment(dt).startOf('month').format(format);\n    const monthEnd = moment(dt).endOf('month').format(format);\n\n    const dtStart = moment(dt).startOf('month').startOf('isoWeek').format(format);\n    const dtEnd = moment(dt).endOf('month').endOf('isoWeek').format(format);\n    const weeks = moment(dtEnd).diff(dtStart, 'week');\n\n\n    const today =  moment().format(format)\n\n\n    let rows = [];\n\n    for (let w = 0; w <= weeks; w++) {\n        let datetime = moment(dtStart).add(w, 'weeks');\n\n        datetime = moment(datetime).set('hour', 0);\n        datetime = moment(datetime).set('minute', 0);\n        datetime = moment(datetime).set('second', 0);\n        \n        let cols = [];\n\n        let week = datetime\n\n        for (let d = 0; d <= 6; d++) {\n            datetime = moment(week).add(d, 'days');\n\n            const isToday = moment(datetime).isSame(today, 'day')\n            const isCurrentMonth = moment(datetime).isBetween(monthStart, monthEnd, undefined, '[]')\n\n    \t    cols.push({\n                isToday: isToday,\n                isCurrentMonth: isCurrentMonth,\n                date: moment(datetime).format(format),\n            })\n        }\n\n\t    rows.push(cols)\n    }\n    \n    return {\n        dt: dt,\n        dtStart: dtStart,\n        dtEnd: dtEnd,\n        rows: rows,\n    }\n    \n}\n\nexport default getCalendarMonth"]},"metadata":{},"sourceType":"module"}