{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    subview: {\n      backgroundColor: theme.palette.background.default,\n      color: \"black\"\n    },\n    section: {\n      height: theme.spacing(8),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    },\n    button: {\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n      color: \"inherit\",\n      \"& + $content\": {\n        paddingRight: theme.spacing(8)\n      }\n    },\n    content: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    title: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      marginLeft: theme.spacing(1)\n    },\n    description: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"18px\",\n      fontWeight: \"normal\",\n      marginLeft: \"0.25em\"\n    }\n  };\n});\n\nvar AppSubview = function AppSubview(_ref) {\n  var className = _ref.className,\n      expanded = _ref.expanded,\n      title = _ref.title,\n      description = _ref.description,\n      onToggle = _ref.onToggle;\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className || classes.subview,\n    \"aria-expanded\": expanded\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.button,\n    onClick: onToggle\n  }, /*#__PURE__*/React.createElement(BackIcon, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    className: classes.title\n  }, title && description && title + \":\" || title), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    className: classes.description\n  }, description))));\n};\n\nAppSubview.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  className: PropTypes.string,\n  expanded: PropTypes.bool,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  onBack: PropTypes.func\n} : {};\nexport default AppSubview;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/admin/es/AppHeader/AppHeaderSubview.js"],"names":["React","PropTypes","Typography","IconButton","BackIcon","makeStyles","useStyles","theme","subview","backgroundColor","palette","background","default","color","section","height","spacing","display","alignItems","justifyContent","paddingLeft","paddingRight","button","width","content","title","fontFamily","fontSize","fontWeight","marginLeft","description","AppSubview","_ref","className","expanded","onToggle","classes","createElement","onClick","component","propTypes","process","env","NODE_ENV","string","bool","onBack","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    subview: {\n      backgroundColor: theme.palette.background.default,\n      color: \"black\"\n    },\n    section: {\n      height: theme.spacing(8),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    },\n    button: {\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n      color: \"inherit\",\n      \"& + $content\": {\n        paddingRight: theme.spacing(8)\n      }\n    },\n    content: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    title: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      marginLeft: theme.spacing(1)\n    },\n    description: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"18px\",\n      fontWeight: \"normal\",\n      marginLeft: \"0.25em\"\n    }\n  };\n});\n\nvar AppSubview = function AppSubview(_ref) {\n  var className = _ref.className,\n      expanded = _ref.expanded,\n      title = _ref.title,\n      description = _ref.description,\n      onToggle = _ref.onToggle;\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className || classes.subview,\n    \"aria-expanded\": expanded\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.button,\n    onClick: onToggle\n  }, /*#__PURE__*/React.createElement(BackIcon, null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    className: classes.title\n  }, title && description && title + \":\" || title), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    className: classes.description\n  }, description))));\n};\n\nAppSubview.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  className: PropTypes.string,\n  expanded: PropTypes.bool,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  onBack: PropTypes.func\n} : {};\nexport default AppSubview;"]},"metadata":{},"sourceType":"module"}