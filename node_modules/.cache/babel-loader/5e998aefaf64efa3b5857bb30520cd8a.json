{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Finder/FinderModel.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getModel, deleteModel, restoreModel, eraseModel, selectModel } from '../redux/modelsById';\nimport { ListModule, TableModule, GridModule, GalleryModule } from '@kit-ui/admin';\nimport MasonryModule from \"../components/Masonry/MasonryModule\";\nimport schemasByName from \"../schemas/schemasByName\";\nimport { utils } from '@kit-ui/schema';\nconst {\n  getUiPreview\n} = utils;\nconst layouts = {\n  \"table\": TableModule,\n  \"list\": ListModule,\n  \"grid\": GridModule,\n  \"masonry\": MasonryModule,\n  \"gallery\": GalleryModule\n};\n\nconst FinderModel = ({\n  model,\n  layout = \"list\",\n  ...props\n}) => {\n  const {\n    modelName,\n    uniqueId,\n    documentType,\n    mediaType,\n    source,\n    sourceId\n  } = model;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (modelName && uniqueId && !modelsById[uniqueId]) {\n      dispatch(getModel({\n        modelName: modelName,\n        uniqueId: uniqueId\n      }));\n    }\n  }, [uniqueId]);\n\n  const _onLink = () => {\n    props.history.push('/checkout/' + uniqueId);\n  };\n\n  const _onEdit = () => {\n    props.history.push(props.location.pathname + '/' + uniqueId + \"/edit\");\n  };\n\n  const _onDelete = () => {\n    dispatch(deleteModel({\n      modelName: modelName,\n      uniqueId: uniqueId\n    }));\n  };\n\n  const _onRestore = () => {\n    dispatch(restoreModel({\n      modelName: modelName,\n      uniqueId: uniqueId\n    }));\n  };\n\n  const _onErase = () => {\n    dispatch(eraseModel({\n      modelName: modelName,\n      uniqueId: uniqueId\n    }));\n  };\n\n  const _onSelect = () => {\n    dispatch(selectModel({\n      modelName: modelName,\n      uniqueId: uniqueId\n    }));\n  }; // uniqueModel\n\n\n  const modelsById = useSelector(state => state.modelsById);\n  const uniqueModel = modelsById && modelsById[uniqueId] || {}; // uiPreview\n\n  const documentModel = documentType && schemasByName && schemasByName[\"documents/\" + documentType];\n  const uiPreview = documentModel && uniqueModel.uniqueId && getUiPreview({ ...documentModel,\n    formData: uniqueModel\n  }) || {}; // model\n\n  model = { ...uniqueModel,\n    ...model,\n    ...uiPreview\n  };\n  const {\n    selected,\n    status\n  } = model;\n\n  const getToolbar = () => {\n    if (selected) {\n      return false;\n    }\n\n    if (status === \"erased\") {\n      return false;\n    }\n\n    if (status === \"trash\") {\n      return [{\n        icon: \"restore\",\n        onClick: _onRestore\n      }, {\n        icon: \"delete_forever\",\n        onClick: _onErase\n      }];\n    }\n\n    return [{\n      icon: \"edit\",\n      onClick: _onEdit\n    }, {\n      icon: \"delete\",\n      onClick: _onDelete\n    }, {\n      icon: \"links\",\n      onClick: _onLink\n    }];\n  };\n\n  const toolbar = getToolbar();\n  const ModuleTemplate = layout && layouts[layout];\n  return /*#__PURE__*/React.createElement(ModuleTemplate, Object.assign({}, model, {\n    description: false,\n    selectable: true,\n    onEdit: _onEdit,\n    onSelect: _onSelect,\n    toolbar: toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default FinderModel;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Finder/FinderModel.js"],"names":["React","useEffect","useState","useSelector","useDispatch","getModel","deleteModel","restoreModel","eraseModel","selectModel","ListModule","TableModule","GridModule","GalleryModule","MasonryModule","schemasByName","utils","getUiPreview","layouts","FinderModel","model","layout","props","modelName","uniqueId","documentType","mediaType","source","sourceId","dispatch","modelsById","_onLink","history","push","_onEdit","location","pathname","_onDelete","_onRestore","_onErase","_onSelect","state","uniqueModel","documentModel","uiPreview","formData","selected","status","getToolbar","icon","onClick","toolbar","ModuleTemplate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getModel, deleteModel, restoreModel, eraseModel, selectModel } from '../redux/modelsById';\n\nimport { ListModule, TableModule, GridModule, GalleryModule } from '@kit-ui/admin';\n\nimport MasonryModule from \"../components/Masonry/MasonryModule\"\n\nimport schemasByName from \"../schemas/schemasByName\"\n\nimport { utils } from '@kit-ui/schema';\nconst { getUiPreview } = utils;\n\nconst layouts = {\n    \"table\": TableModule,\n    \"list\": ListModule,\n    \"grid\": GridModule,\n    \"masonry\": MasonryModule,\n    \"gallery\": GalleryModule,\n}\n\n\nconst FinderModel = ({model, layout = \"list\", ...props}) => {\n    const { modelName, uniqueId, documentType, mediaType, source, sourceId, } = model;\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (modelName && uniqueId && !modelsById[uniqueId]) {\n            dispatch(getModel({modelName: modelName, uniqueId: uniqueId}))\n        }\n    }, [uniqueId])\n\n    const _onLink = () => {\n        props.history.push('/checkout/' + uniqueId)\n    }\n\n    const _onEdit = () => {\n        props.history.push(props.location.pathname + '/' + uniqueId + \"/edit\")\n    }\n\n    const _onDelete = () => {\n        dispatch(deleteModel({modelName: modelName, uniqueId: uniqueId}))\n    }\n\n    const _onRestore = () => {\n        dispatch(restoreModel({modelName: modelName, uniqueId: uniqueId}))\n    }\n\n    const _onErase = () => {\n        dispatch(eraseModel({modelName: modelName, uniqueId: uniqueId}))\n    }\n\n    const _onSelect = () => {\n        dispatch(selectModel({modelName: modelName, uniqueId: uniqueId}))\n    }\n\n    // uniqueModel\n\n    const modelsById = useSelector(state => state.modelsById)\n    const uniqueModel = modelsById && modelsById[uniqueId] || {}\n\n    // uiPreview\n   \n    const documentModel = documentType && schemasByName && schemasByName[\"documents/\" + documentType]\n    const uiPreview = documentModel && uniqueModel.uniqueId && getUiPreview({...documentModel, formData: uniqueModel}) || {}\n\n    // model\n\n    model = {\n        ...uniqueModel,\n        ...model,\n        ...uiPreview\n    }\n\n\n    const { selected, status } = model\n\n    const getToolbar = () => {\n\n        if (selected) {\n            return false\n        }\n\n        if (status === \"erased\") {\n            return false\n        }\n\n        if (status === \"trash\") {\n            return [\n                {\n                    icon: \"restore\",\n                    onClick: _onRestore\n                },\n                {\n                    icon: \"delete_forever\",\n                    onClick: _onErase\n                },\n                \n            ]\n        }\n\n        return [\n            {\n                icon: \"edit\",\n                onClick: _onEdit\n            },\n            {\n                icon: \"delete\",\n                onClick: _onDelete\n            },\n            {\n                icon: \"links\",\n                onClick: _onLink\n            }\n        ]\n\n    }\n\n    const toolbar = getToolbar()\n\n    const ModuleTemplate = layout && layouts[layout]\n\n    return (\n        <ModuleTemplate {...model} \n            description={false}\n            selectable={true}\n            onEdit={_onEdit}\n            onSelect={_onSelect}\n            toolbar={toolbar} />\n    )\n\n}\n\nexport default FinderModel"]},"metadata":{},"sourceType":"module"}