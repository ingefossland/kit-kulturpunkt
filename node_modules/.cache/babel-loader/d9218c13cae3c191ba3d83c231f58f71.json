{"ast":null,"code":"import React from 'react';\nimport moment from 'moment';\nimport \"moment/locale/nb\";\nimport \"moment/locale/nn\";\nimport \"moment/locale/sv\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"14px\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\n/** Module date, uses moment.js */\n\nvar ModuleDate = function ModuleDate(_ref) {\n  var className = _ref.className,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? \"nb\" : _ref$locale,\n      datetime = _ref.datetime,\n      _ref$format = _ref.format,\n      format = _ref$format === void 0 ? \"relative\" : _ref$format;\n  var classes = useStyles();\n\n  if (!datetime) {\n    return false;\n  } // format value\n\n\n  moment.locale(locale);\n  var date;\n\n  if (format === \"relative\") {\n    date = moment(datetime).fromNow();\n  } else if (format) {\n    date = moment(datetime).format(format);\n  } else {\n    date = moment(datetime).format();\n  }\n\n  return /*#__PURE__*/React.createElement(\"time\", {\n    dateTime: datetime,\n    className: className || classes.root\n  }, date);\n};\n\nModuleDate.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Locale string */\n  locale: PropTypes.string,\n\n  /** Datetime as YYYY-MM-DD */\n  datetime: PropTypes.string,\n\n  /** Moment.js format */\n  format: PropTypes.string\n} : {};\nexport default ModuleDate;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/admin/es/Module/ModuleDate.js"],"names":["React","moment","PropTypes","makeStyles","useStyles","theme","root","fontFamily","fontSize","color","palette","text","secondary","ModuleDate","_ref","className","_ref$locale","locale","datetime","_ref$format","format","classes","date","fromNow","createElement","dateTime","propTypes","process","env","NODE_ENV","string"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AACA,OAAO,kBAAP;AACA,OAAO,kBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,IAAIC,SAAS,GAAGD,UAAU,CAAC,UAAUE,KAAV,EAAiB;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE,qBADR;AAEJC,MAAAA,QAAQ,EAAE,MAFN;AAGJC,MAAAA,KAAK,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBC;AAHtB;AADD,GAAP;AAOD,CARyB,CAA1B;AASA;;AAEA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACzC,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,WAAW,GAAGF,IAAI,CAACG,MADvB;AAAA,MAEIA,MAAM,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyB,IAAzB,GAAgCA,WAF7C;AAAA,MAGIE,QAAQ,GAAGJ,IAAI,CAACI,QAHpB;AAAA,MAIIC,WAAW,GAAGL,IAAI,CAACM,MAJvB;AAAA,MAKIA,MAAM,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyB,UAAzB,GAAsCA,WALnD;AAMA,MAAIE,OAAO,GAAGjB,SAAS,EAAvB;;AAEA,MAAI,CAACc,QAAL,EAAe;AACb,WAAO,KAAP;AACD,GAXwC,CAWvC;;;AAGFjB,EAAAA,MAAM,CAACgB,MAAP,CAAcA,MAAd;AACA,MAAIK,IAAJ;;AAEA,MAAIF,MAAM,KAAK,UAAf,EAA2B;AACzBE,IAAAA,IAAI,GAAGrB,MAAM,CAACiB,QAAD,CAAN,CAAiBK,OAAjB,EAAP;AACD,GAFD,MAEO,IAAIH,MAAJ,EAAY;AACjBE,IAAAA,IAAI,GAAGrB,MAAM,CAACiB,QAAD,CAAN,CAAiBE,MAAjB,CAAwBA,MAAxB,CAAP;AACD,GAFM,MAEA;AACLE,IAAAA,IAAI,GAAGrB,MAAM,CAACiB,QAAD,CAAN,CAAiBE,MAAjB,EAAP;AACD;;AAED,SAAO,aAAapB,KAAK,CAACwB,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,IAAAA,QAAQ,EAAEP,QADoC;AAE9CH,IAAAA,SAAS,EAAEA,SAAS,IAAIM,OAAO,CAACf;AAFc,GAA5B,EAGjBgB,IAHiB,CAApB;AAID,CA7BD;;AA+BAT,UAAU,CAACa,SAAX,GAAuBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC7D;AACAZ,EAAAA,MAAM,EAAEf,SAAS,CAAC4B,MAF2C;;AAI7D;AACAZ,EAAAA,QAAQ,EAAEhB,SAAS,CAAC4B,MALyC;;AAO7D;AACAV,EAAAA,MAAM,EAAElB,SAAS,CAAC4B;AAR2C,CAAxC,GASnB,EATJ;AAUA,eAAejB,UAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport \"moment/locale/nb\";\nimport \"moment/locale/nn\";\nimport \"moment/locale/sv\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"14px\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\n/** Module date, uses moment.js */\n\nvar ModuleDate = function ModuleDate(_ref) {\n  var className = _ref.className,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? \"nb\" : _ref$locale,\n      datetime = _ref.datetime,\n      _ref$format = _ref.format,\n      format = _ref$format === void 0 ? \"relative\" : _ref$format;\n  var classes = useStyles();\n\n  if (!datetime) {\n    return false;\n  } // format value\n\n\n  moment.locale(locale);\n  var date;\n\n  if (format === \"relative\") {\n    date = moment(datetime).fromNow();\n  } else if (format) {\n    date = moment(datetime).format(format);\n  } else {\n    date = moment(datetime).format();\n  }\n\n  return /*#__PURE__*/React.createElement(\"time\", {\n    dateTime: datetime,\n    className: className || classes.root\n  }, date);\n};\n\nModuleDate.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Locale string */\n  locale: PropTypes.string,\n\n  /** Datetime as YYYY-MM-DD */\n  datetime: PropTypes.string,\n\n  /** Moment.js format */\n  format: PropTypes.string\n} : {};\nexport default ModuleDate;"]},"metadata":{},"sourceType":"module"}