{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Editor/Editor.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { SchemaBase } from \"@kit-ui/schema\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { receiveEdit, receiveCurrentId, requestDialog, receiveDialog } from '../redux/editor';\nimport registry from \"../components/registry\";\nimport EditorDialog from \"./EditorDialog\";\nimport EditorPreview from \"./EditorPreview\";\n\nconst Editor = ({\n  schema,\n  uiSchema,\n  onSubmit,\n  ...props\n}) => {\n  const editorRef = useRef(null);\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.editor.formData);\n  const dialog = useSelector(state => state.editor.dialog);\n  const currentId = useSelector(state => state.editor.currentId);\n\n  const onChange = ({\n    formData\n  }) => {\n    console.log('onChange', formData);\n    dispatch(receiveEdit(formData)); //        setFormData(formData)\n  };\n\n  const [languages, setLanguages] = useState([\"en\"]);\n  const [currentLocale, setCurrentLocale] = useState(null);\n\n  const _onLocale = locale => {}; // hashId toggling\n\n\n  const hashId = props.location.hash && props.location.hash.replace('#', '') || null;\n  useEffect(() => {\n    dispatch(receiveCurrentId({\n      currentId: hashId\n    }));\n  }, [hashId]);\n\n  const _onCurrentId = currentId => {\n    console.log('editor:onCurrentId', currentId);\n    const hashUrl = props.location.pathname + \"#\" + currentId;\n    props.history.replace(hashUrl);\n  };\n\n  const _onToggle = ({\n    id,\n    ...props\n  }) => {\n    console.log('onToggle', props);\n    let parentId = id.split('_');\n    parentId.pop();\n    parentId = parentId.join('_');\n    let expandId = undefined;\n\n    if (id && currentId && currentId.startsWith(id)) {\n      expandId = parentId;\n    } else {\n      expandId = id;\n    }\n\n    _onCurrentId(expandId);\n  };\n\n  const _onSelect = props => {\n    console.log(\"select\", props);\n  };\n\n  const _onExpand = ({\n    id\n  }) => {\n    console.log('onExpand', props);\n\n    _onCurrentId(id);\n  };\n\n  const _onCollapse = ({\n    id\n  }) => {\n    console.log('onCollapse', props);\n\n    _onToggle({\n      id\n    });\n  };\n\n  const _onDialog = ({\n    id,\n    formData,\n    schema,\n    uiSchema,\n    onChange\n  }) => {\n    if (dialog && dialog.id) {\n      dispatch(requestDialog());\n    } else {\n      dispatch(receiveDialog({\n        id: id,\n        expanded: true,\n        formData: formData,\n        schema: schema,\n        uiSchema: uiSchema,\n        onChange: onChange\n      }));\n    }\n  }; // formContext\n\n\n  const formContext = {\n    languages: languages,\n    currentLocale: currentLocale,\n    onLocale: _onLocale,\n    currentId: currentId,\n    onToggle: _onToggle,\n    onExpand: _onExpand,\n    onCollapse: _onCollapse,\n    onEdit: _onExpand,\n    onSave: _onCollapse,\n    onSubmit: status => onSubmit && onSubmit({\n      formData: { ...formData,\n        status: status || formData.status\n      }\n    }),\n    // (e) => editorRef && editorRef.current && editorRef.current.onSubmit(e),\n    preview: {\n      template: props.preview && props.preview.template || EditorPreview,\n      formData: formData,\n      formContext: {\n        currentId,\n        onToggle: _onToggle\n      }\n    },\n    ...props.formContext,\n    onDialog: _onDialog,\n    dialog: { ...dialog,\n      onClose: () => _onDialog({}),\n      template: EditorDialog\n    }\n  };\n  return /*#__PURE__*/React.createElement(SchemaBase, Object.assign({}, registry, {\n    ref: editorRef,\n    schema: schema,\n    uiSchema: uiSchema,\n    formData: formData,\n    formContext: formContext,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }));\n};\n\nEditor.defaultProps = {\n  schema: {},\n  formData: {},\n  formContext: {}\n};\nexport default Editor;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Editor/Editor.js"],"names":["React","useRef","useState","useEffect","SchemaBase","useSelector","useDispatch","receiveEdit","receiveCurrentId","requestDialog","receiveDialog","registry","EditorDialog","EditorPreview","Editor","schema","uiSchema","onSubmit","props","editorRef","dispatch","formData","state","editor","dialog","currentId","onChange","console","log","languages","setLanguages","currentLocale","setCurrentLocale","_onLocale","locale","hashId","location","hash","replace","_onCurrentId","hashUrl","pathname","history","_onToggle","id","parentId","split","pop","join","expandId","undefined","startsWith","_onSelect","_onExpand","_onCollapse","_onDialog","expanded","formContext","onLocale","onToggle","onExpand","onCollapse","onEdit","onSave","status","preview","template","onDialog","onClose","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\"\nimport { SchemaBase } from \"@kit-ui/schema\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { receiveEdit, receiveCurrentId, requestDialog, receiveDialog } from '../redux/editor';\n\nimport registry from \"../components/registry\"\n\nimport EditorDialog from \"./EditorDialog\"\nimport EditorPreview from \"./EditorPreview\"\n\nconst Editor = ({schema, uiSchema, onSubmit, ...props}) => {\n\n    const editorRef = useRef(null)\n\n    const dispatch = useDispatch()\n\n    const formData = useSelector(state => state.editor.formData)\n    const dialog = useSelector(state => state.editor.dialog)\n    const currentId = useSelector(state => state.editor.currentId)\n\n    const onChange = ({formData}) => {\n        console.log('onChange', formData)\n        dispatch(receiveEdit(formData))\n\n        //        setFormData(formData)\n    }\n\n    const [languages, setLanguages] = useState([\"en\"])\n    const [currentLocale, setCurrentLocale] = useState(null)\n\n    const _onLocale = (locale) => {\n\n    }\n\n    // hashId toggling\n\n    const hashId = props.location.hash && props.location.hash.replace('#','') || null\n\n    useEffect(() => {\n        dispatch(receiveCurrentId({currentId: hashId}))\n    }, [hashId])\n\n    const _onCurrentId = (currentId) => {\n        console.log('editor:onCurrentId', currentId);\n        const hashUrl = props.location.pathname + \"#\" + currentId; \n        props.history.replace(hashUrl);\n    }\n\n    const _onToggle = ({id, ...props}) => {\n        console.log('onToggle', props)\n\n        let parentId = id.split('_');\n        parentId.pop();\n        parentId = parentId.join('_');\n        \n        let expandId = undefined\n\n        if (id && currentId && currentId.startsWith(id)) {\n            expandId = parentId;            \n        } else {\n            expandId = id;\n        }\n\n        _onCurrentId(expandId)\n\n    }\n    \n    const _onSelect = (props) => {\n        console.log(\"select\", props)\n    }\n\n    const _onExpand = ({id}) => {\n        console.log('onExpand', props)\n        _onCurrentId(id)\n    }\n\n    const _onCollapse = ({id}) => {\n        console.log('onCollapse', props)\n        _onToggle({id})\n    }\n\n    const _onDialog = ({id, formData, schema, uiSchema, onChange}) => {\n\n        if (dialog && dialog.id) {\n            dispatch(requestDialog())\n        } else {\n            dispatch(receiveDialog({\n                id: id,\n                expanded: true,\n                formData: formData,\n                schema: schema,\n                uiSchema: uiSchema,\n                onChange: onChange\n            }))\n        }\n\n    }\n\n    // formContext\n\n    const formContext = {\n        languages: languages,\n        currentLocale: currentLocale,\n        onLocale: _onLocale,\n\n        currentId: currentId,\n        onToggle: _onToggle,\n\n        onExpand: _onExpand,\n        onCollapse: _onCollapse,\n\n        onEdit: _onExpand,\n        onSave: _onCollapse,\n\n        onSubmit: (status) => onSubmit && onSubmit({formData: {...formData, status: status || formData.status}}), // (e) => editorRef && editorRef.current && editorRef.current.onSubmit(e),\n\n        preview: {\n            template: props.preview && props.preview.template || EditorPreview,\n            formData: formData,\n            formContext: {\n                currentId,\n                onToggle: _onToggle\n            }\n        },\n\n\n        ...props.formContext,\n\n        onDialog: _onDialog,\n\n        dialog: {\n            ...dialog,\n            onClose: () => _onDialog({}),\n            template: EditorDialog\n        },\n\n    }    \n\n    return (\n        <SchemaBase\n            {...registry}\n            ref={editorRef}\n            schema={schema}\n            uiSchema={uiSchema}\n            formData={formData}\n            formContext={formContext}\n            onChange={onChange}\n            onSubmit={onSubmit}\n            />\n    )\n\n\n}\n\nEditor.defaultProps = {\n    schema: {},\n    formData: {},\n    formContext: {}\n}\n\nexport default Editor"]},"metadata":{},"sourceType":"module"}