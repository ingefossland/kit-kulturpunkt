{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Editor/Editor.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { SchemaBase } from \"@kit-ui/schema\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { receiveEdit } from '../redux/editor';\nimport registry from \"../components/registry\";\nimport EditorDialog from \"./EditorDialog\";\nimport EditorPreview from \"./EditorPreview\";\n\nconst Editor = ({\n  schema,\n  uiSchema,\n  onSubmit,\n  ...props\n}) => {\n  const editorRef = useRef(null);\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.editor.formData); // formData\n  //    const [formData, setFormData] = useState(props.formData)\n\n  /*\n   useEffect(() => {\n      setFormData(props.formData)\n  }, [props.formData])\n   */\n\n  const onChange = ({\n    formData\n  }) => {\n    console.log('onChange', formData);\n    dispatch(receiveEdit(formData)); //        setFormData(formData)\n  };\n\n  const [languages, setLanguages] = useState([\"en\"]);\n  const [currentLocale, setCurrentLocale] = useState(null);\n\n  const _onLocale = locale => {}; // defaultId + currentId\n\n\n  const defaultId = props.location.hash && props.location.hash.replace('#', '') || null;\n  const [currentId, setCurrentId] = useState(defaultId);\n\n  const _onCurrentId = currentId => {\n    console.log('editor:onCurrentId', currentId);\n    const hashUrl = props.location.pathname + \"#\" + currentId;\n    setCurrentId(currentId);\n    props.history.replace(hashUrl);\n  };\n\n  const _onToggle = ({\n    id,\n    ...props\n  }) => {\n    console.log('onToggle', props);\n    let parentId = id.split('_');\n    parentId.pop();\n    parentId = parentId.join('_');\n    let expandId = undefined;\n\n    if (id && currentId && currentId.startsWith(id)) {\n      expandId = parentId;\n    } else {\n      expandId = id;\n    }\n\n    _onCurrentId(expandId);\n  };\n\n  const _onSelect = props => {\n    console.log(\"select\", props);\n  };\n\n  const _onExpand = ({\n    id\n  }) => {\n    console.log('onExpand', props);\n\n    _onCurrentId(id);\n  };\n\n  const _onCollapse = ({\n    id\n  }) => {\n    console.log('onCollapse', props);\n\n    _onToggle({\n      id\n    });\n  };\n\n  const [dialog, setDialog] = useState({});\n\n  const _onDialog = ({\n    id,\n    formData,\n    schema,\n    uiSchema,\n    onChange\n  }) => {\n    if (dialog && dialog.id) {\n      setDialog({});\n    } else {\n      setDialog({\n        id: id,\n        expanded: true,\n        formData: formData,\n        schema: schema,\n        uiSchema: uiSchema,\n        onChange: onChange\n      });\n    }\n  }; // formContext\n\n\n  const formContext = {\n    languages: languages,\n    currentLocale: currentLocale,\n    onLocale: _onLocale,\n    currentId: currentId,\n    onToggle: _onToggle,\n    onExpand: _onExpand,\n    onCollapse: _onCollapse,\n    onEdit: _onExpand,\n    onSave: _onCollapse,\n    onSubmit: status => onSubmit && onSubmit({\n      formData: { ...formData,\n        status: status || formData.status\n      }\n    }),\n    // (e) => editorRef && editorRef.current && editorRef.current.onSubmit(e),\n    preview: {\n      template: props.preview && props.preview.template || EditorPreview,\n      formData: formData,\n      formContext: {\n        currentId,\n        onToggle: _onToggle\n      }\n    },\n    ...props.formContext,\n    onDialog: _onDialog,\n    dialog: { ...dialog,\n      onClose: () => _onDialog({}),\n      template: EditorDialog\n    }\n  };\n  return /*#__PURE__*/React.createElement(SchemaBase, Object.assign({}, registry, {\n    ref: editorRef,\n    schema: schema,\n    uiSchema: uiSchema,\n    formData: formData,\n    formContext: formContext,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }));\n};\n\nEditor.defaultProps = {\n  schema: {},\n  formData: {},\n  formContext: {}\n};\nexport default Editor;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Editor/Editor.js"],"names":["React","useRef","useState","useEffect","SchemaBase","useSelector","useDispatch","receiveEdit","registry","EditorDialog","EditorPreview","Editor","schema","uiSchema","onSubmit","props","editorRef","dispatch","formData","state","editor","onChange","console","log","languages","setLanguages","currentLocale","setCurrentLocale","_onLocale","locale","defaultId","location","hash","replace","currentId","setCurrentId","_onCurrentId","hashUrl","pathname","history","_onToggle","id","parentId","split","pop","join","expandId","undefined","startsWith","_onSelect","_onExpand","_onCollapse","dialog","setDialog","_onDialog","expanded","formContext","onLocale","onToggle","onExpand","onCollapse","onEdit","onSave","status","preview","template","onDialog","onClose","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\"\nimport { SchemaBase } from \"@kit-ui/schema\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { receiveEdit } from '../redux/editor';\n\nimport registry from \"../components/registry\"\n\nimport EditorDialog from \"./EditorDialog\"\nimport EditorPreview from \"./EditorPreview\"\n\nconst Editor = ({schema, uiSchema, onSubmit, ...props}) => {\n\n    const editorRef = useRef(null)\n\n    const dispatch = useDispatch()\n    const formData = useSelector(state => state.editor.formData)\n\n    // formData\n\n//    const [formData, setFormData] = useState(props.formData)\n\n    /*\n\n    useEffect(() => {\n        setFormData(props.formData)\n    }, [props.formData])\n\n    */\n\n    const onChange = ({formData}) => {\n        console.log('onChange', formData)\n        dispatch(receiveEdit(formData))\n\n        //        setFormData(formData)\n    }\n\n    const [languages, setLanguages] = useState([\"en\"])\n    const [currentLocale, setCurrentLocale] = useState(null)\n\n    const _onLocale = (locale) => {\n\n    }\n\n    // defaultId + currentId\n\n    const defaultId = props.location.hash && props.location.hash.replace('#','') || null\n\n    const [currentId, setCurrentId] = useState(defaultId)\n\n    const _onCurrentId = (currentId) => {\n        console.log('editor:onCurrentId', currentId);\n        const hashUrl = props.location.pathname + \"#\" + currentId; \n        setCurrentId(currentId)\n        props.history.replace(hashUrl);\n    }\n\n    const _onToggle = ({id, ...props}) => {\n        console.log('onToggle', props)\n\n        let parentId = id.split('_');\n        parentId.pop();\n        parentId = parentId.join('_');\n        \n        let expandId = undefined\n\n        if (id && currentId && currentId.startsWith(id)) {\n            expandId = parentId;            \n        } else {\n            expandId = id;\n        }\n\n        _onCurrentId(expandId)\n\n    }\n    \n    const _onSelect = (props) => {\n        console.log(\"select\", props)\n    }\n\n    const _onExpand = ({id}) => {\n        console.log('onExpand', props)\n        _onCurrentId(id)\n    }\n\n    const _onCollapse = ({id}) => {\n        console.log('onCollapse', props)\n        _onToggle({id})\n    }\n\n    const [dialog, setDialog] = useState({})\n\n    const _onDialog = ({id, formData, schema, uiSchema, onChange}) => {\n\n        if (dialog && dialog.id) {\n            setDialog({})\n        } else {\n            setDialog({\n                id: id,\n                expanded: true,\n                formData: formData,\n                schema: schema,\n                uiSchema: uiSchema,\n                onChange: onChange\n            })\n        }\n\n    }\n\n    // formContext\n\n    const formContext = {\n        languages: languages,\n        currentLocale: currentLocale,\n        onLocale: _onLocale,\n\n        currentId: currentId,\n        onToggle: _onToggle,\n\n        onExpand: _onExpand,\n        onCollapse: _onCollapse,\n\n        onEdit: _onExpand,\n        onSave: _onCollapse,\n\n        onSubmit: (status) => onSubmit && onSubmit({formData: {...formData, status: status || formData.status}}), // (e) => editorRef && editorRef.current && editorRef.current.onSubmit(e),\n\n        preview: {\n            template: props.preview && props.preview.template || EditorPreview,\n            formData: formData,\n            formContext: {\n                currentId,\n                onToggle: _onToggle\n            }\n        },\n\n\n        ...props.formContext,\n\n        onDialog: _onDialog,\n\n        dialog: {\n            ...dialog,\n            onClose: () => _onDialog({}),\n            template: EditorDialog\n        },\n\n    }    \n\n    return (\n        <SchemaBase\n            {...registry}\n            ref={editorRef}\n            schema={schema}\n            uiSchema={uiSchema}\n            formData={formData}\n            formContext={formContext}\n            onChange={onChange}\n            onSubmit={onSubmit}\n            />\n    )\n\n\n}\n\nEditor.defaultProps = {\n    schema: {},\n    formData: {},\n    formContext: {}\n}\n\nexport default Editor"]},"metadata":{},"sourceType":"module"}