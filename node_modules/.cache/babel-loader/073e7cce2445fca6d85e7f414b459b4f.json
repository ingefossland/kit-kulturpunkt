{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { schemaRequiresTrueValue } from \"../../utils\";\n\nfunction CheckboxWidget(props) {\n  var schema = props.schema,\n      id = props.id,\n      value = props.value,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      label = props.label,\n      autofocus = props.autofocus,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      _onChange = props.onChange,\n      DescriptionField = props.DescriptionField; // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n\n  var required = schemaRequiresTrueValue(schema);\n  return React.createElement(\"div\", {\n    className: \"checkbox \".concat(disabled || readonly ? \"disabled\" : \"\")\n  }, schema.description && React.createElement(DescriptionField, {\n    description: schema.description\n  }), React.createElement(\"label\", null, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: id,\n    checked: typeof value === \"undefined\" ? false : value,\n    required: required,\n    disabled: disabled || readonly,\n    autoFocus: autofocus,\n    onChange: function onChange(event) {\n      return _onChange(event.target.checked);\n    },\n    onBlur: onBlur && function (event) {\n      return onBlur(id, event.target.checked);\n    },\n    onFocus: onFocus && function (event) {\n      return onFocus(id, event.target.checked);\n    }\n  }), React.createElement(\"span\", null, label)));\n}\n\nCheckboxWidget.defaultProps = {\n  autofocus: false\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  CheckboxWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    value: PropTypes.bool,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func\n  };\n}\n\nexport default CheckboxWidget;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@rjsf/core/lib/components/widgets/CheckboxWidget.js"],"names":["React","PropTypes","schemaRequiresTrueValue","CheckboxWidget","props","schema","id","value","disabled","readonly","label","autofocus","onBlur","onFocus","_onChange","onChange","DescriptionField","required","createElement","className","concat","description","type","checked","autoFocus","event","target","defaultProps","process","env","NODE_ENV","propTypes","object","isRequired","string","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { schemaRequiresTrueValue } from \"../../utils\";\n\nfunction CheckboxWidget(props) {\n  var schema = props.schema,\n      id = props.id,\n      value = props.value,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      label = props.label,\n      autofocus = props.autofocus,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      _onChange = props.onChange,\n      DescriptionField = props.DescriptionField; // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n\n  var required = schemaRequiresTrueValue(schema);\n  return React.createElement(\"div\", {\n    className: \"checkbox \".concat(disabled || readonly ? \"disabled\" : \"\")\n  }, schema.description && React.createElement(DescriptionField, {\n    description: schema.description\n  }), React.createElement(\"label\", null, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: id,\n    checked: typeof value === \"undefined\" ? false : value,\n    required: required,\n    disabled: disabled || readonly,\n    autoFocus: autofocus,\n    onChange: function onChange(event) {\n      return _onChange(event.target.checked);\n    },\n    onBlur: onBlur && function (event) {\n      return onBlur(id, event.target.checked);\n    },\n    onFocus: onFocus && function (event) {\n      return onFocus(id, event.target.checked);\n    }\n  }), React.createElement(\"span\", null, label)));\n}\n\nCheckboxWidget.defaultProps = {\n  autofocus: false\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  CheckboxWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    value: PropTypes.bool,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func\n  };\n}\n\nexport default CheckboxWidget;"]},"metadata":{},"sourceType":"module"}