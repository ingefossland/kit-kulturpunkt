{"ast":null,"code":"import React from 'react';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  var _$label;\n\n  return {\n    root: {\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      width: \"100%\",\n      paddingRight: theme.spacing(3),\n      alignItems: \"center\",\n      justifyContent: \"start\",\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"14px\",\n      lineHeight: \"24px\",\n      color: theme.palette.text.secondary,\n      \"&[aria-selected=true]\": {\n        \"& $label\": (_$label = {\n          color: theme.palette.text.primary\n        }, _$label[\"color\"] = theme.palette.type === \"dark\" && theme.palette.primary.light || theme.palette.primary.dark, _$label)\n      }\n    },\n    icon: {\n      \"&[aria-selected=true]\": {\n        color: theme.palette.text.primary\n      }\n    },\n    label: {\n      display: \"block\",\n      width: \"100%\",\n      flexBasis: \"100%\",\n      fontFamily: \"inherit\",\n      fontSize: \"inherit\",\n      lineHeight: \"inherit\",\n      paddingLeft: \"12px\",\n      paddingRight: \"6px\"\n    },\n    count: {\n      position: \"absolute\",\n      right: 0,\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"12px\",\n      fontStyle: \"normal\",\n      lineHeight: \"24px\",\n      textAlign: \"right\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\n\nvar MenuLink = function MenuLink(_ref) {\n  var className = _ref.className,\n      selected = _ref.selected,\n      icon = _ref.icon,\n      label = _ref.label,\n      title = _ref.title,\n      count = _ref.count,\n      onClick = _ref.onClick,\n      children = _ref.children;\n  var classes = useStyles();\n\n  if (!label && title) {\n    label = title;\n  }\n\n  var color;\n\n  if (selected) {\n    color = \"primary\";\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonBase, {\n    color: color,\n    className: className || classes.root,\n    \"aria-selected\": selected,\n    onClick: onClick\n  }, icon && /*#__PURE__*/React.createElement(Icon, {\n    className: classes.icon,\n    \"aria-selected\": selected\n  }, icon), label && /*#__PURE__*/React.createElement(Typography, {\n    component: \"b\",\n    align: \"left\",\n    noWrap: true,\n    className: classes.label\n  }, label), count && /*#__PURE__*/React.createElement(Typography, {\n    component: \"i\",\n    align: \"right\",\n    nowrap: \"true\",\n    className: classes.count\n  }, count), children);\n};\n\nexport default MenuLink;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/node_modules/@kit-ui/admin/es/NavMenu/NavMenuLink.js"],"names":["React","ButtonBase","Icon","Typography","makeStyles","useStyles","theme","_$label","root","boxSizing","display","width","paddingRight","spacing","alignItems","justifyContent","fontFamily","fontSize","lineHeight","color","palette","text","secondary","primary","type","light","dark","icon","label","flexBasis","paddingLeft","count","position","right","fontStyle","textAlign","MenuLink","_ref","className","selected","title","onClick","children","classes","createElement","component","align","noWrap","nowrap"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  var _$label;\n\n  return {\n    root: {\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      width: \"100%\",\n      paddingRight: theme.spacing(3),\n      alignItems: \"center\",\n      justifyContent: \"start\",\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"14px\",\n      lineHeight: \"24px\",\n      color: theme.palette.text.secondary,\n      \"&[aria-selected=true]\": {\n        \"& $label\": (_$label = {\n          color: theme.palette.text.primary\n        }, _$label[\"color\"] = theme.palette.type === \"dark\" && theme.palette.primary.light || theme.palette.primary.dark, _$label)\n      }\n    },\n    icon: {\n      \"&[aria-selected=true]\": {\n        color: theme.palette.text.primary\n      }\n    },\n    label: {\n      display: \"block\",\n      width: \"100%\",\n      flexBasis: \"100%\",\n      fontFamily: \"inherit\",\n      fontSize: \"inherit\",\n      lineHeight: \"inherit\",\n      paddingLeft: \"12px\",\n      paddingRight: \"6px\"\n    },\n    count: {\n      position: \"absolute\",\n      right: 0,\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: \"12px\",\n      fontStyle: \"normal\",\n      lineHeight: \"24px\",\n      textAlign: \"right\",\n      color: theme.palette.text.secondary\n    }\n  };\n});\n\nvar MenuLink = function MenuLink(_ref) {\n  var className = _ref.className,\n      selected = _ref.selected,\n      icon = _ref.icon,\n      label = _ref.label,\n      title = _ref.title,\n      count = _ref.count,\n      onClick = _ref.onClick,\n      children = _ref.children;\n  var classes = useStyles();\n\n  if (!label && title) {\n    label = title;\n  }\n\n  var color;\n\n  if (selected) {\n    color = \"primary\";\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonBase, {\n    color: color,\n    className: className || classes.root,\n    \"aria-selected\": selected,\n    onClick: onClick\n  }, icon && /*#__PURE__*/React.createElement(Icon, {\n    className: classes.icon,\n    \"aria-selected\": selected\n  }, icon), label && /*#__PURE__*/React.createElement(Typography, {\n    component: \"b\",\n    align: \"left\",\n    noWrap: true,\n    className: classes.label\n  }, label), count && /*#__PURE__*/React.createElement(Typography, {\n    component: \"i\",\n    align: \"right\",\n    nowrap: \"true\",\n    className: classes.count\n  }, count), children);\n};\n\nexport default MenuLink;"]},"metadata":{},"sourceType":"module"}