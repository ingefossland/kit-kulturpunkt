{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Atom = void 0;\n\nconst initDebug = require(\"debug\");\n\nconst AtomToken = require(\"./AtomToken\");\n\nconst debug = initDebug('music-metadata:parser:MP4:Atom');\n\nclass Atom {\n  constructor(header, extended, parent) {\n    this.header = header;\n    this.extended = extended;\n    this.parent = parent;\n    this.children = [];\n    this.atomPath = (this.parent ? this.parent.atomPath + '.' : '') + this.header.name;\n  }\n\n  static async readAtom(tokenizer, dataHandler, parent) {\n    // Parse atom header\n    const offset = tokenizer.position; // debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\n\n    const header = await tokenizer.readToken(AtomToken.Header);\n    const extended = header.length === 1;\n\n    if (extended) {\n      header.length = await tokenizer.readToken(AtomToken.ExtendedSize);\n    }\n\n    const extendToEOF = header.length === 0 && header.name === 'mdat' && !parent;\n\n    if (extendToEOF) {\n      header.length = tokenizer.fileInfo.size - tokenizer.position + 8;\n    }\n\n    const atomBean = new Atom(header, extended, parent);\n    debug(`parse atom name=${atomBean.atomPath}, extended=${atomBean.extended}, offset=${offset}, len=${atomBean.header.length}`); //  buf.toString('ascii')\n\n    await atomBean.readData(tokenizer, dataHandler);\n    return atomBean;\n  }\n\n  getHeaderLength() {\n    return this.extended ? 16 : 8;\n  }\n\n  getPayloadLength() {\n    return this.header.length - this.getHeaderLength();\n  }\n\n  async readAtoms(tokenizer, dataHandler, size) {\n    while (size > 0) {\n      const atomBean = await Atom.readAtom(tokenizer, dataHandler, this);\n      this.children.push(atomBean);\n      size -= atomBean.header.length;\n    }\n  }\n\n  async readData(tokenizer, dataHandler) {\n    switch (this.header.name) {\n      // \"Container\" atoms, contains nested atoms\n      case 'moov': // The Movie Atom: contains other atoms\n\n      case 'udta': // User defined atom\n\n      case 'trak':\n      case 'mdia': // Media atom\n\n      case 'minf': // Media Information Atom\n\n      case 'stbl': // The Sample Table Atom\n\n      case '<id>':\n      case 'ilst':\n      case 'tref':\n        return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength());\n\n      case 'meta':\n        // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n        // meta has 4 bytes of padding, ignore\n        await tokenizer.ignore(4);\n        return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength() - 4);\n\n      case 'mdhd': // Media header atom\n\n      case 'mvhd': // 'movie' => 'mvhd': movie header atom; child of Movie Atom\n\n      case 'tkhd':\n      case 'stsz':\n      case 'mdat':\n      default:\n        return dataHandler(this);\n    }\n  }\n\n}\n\nexports.Atom = Atom;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/music-metadata/lib/mp4/Atom.js"],"names":["Object","defineProperty","exports","value","Atom","initDebug","require","AtomToken","debug","constructor","header","extended","parent","children","atomPath","name","readAtom","tokenizer","dataHandler","offset","position","readToken","Header","length","ExtendedSize","extendToEOF","fileInfo","size","atomBean","readData","getHeaderLength","getPayloadLength","readAtoms","push","ignore"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Atom = void 0;\nconst initDebug = require(\"debug\");\nconst AtomToken = require(\"./AtomToken\");\nconst debug = initDebug('music-metadata:parser:MP4:Atom');\nclass Atom {\n    constructor(header, extended, parent) {\n        this.header = header;\n        this.extended = extended;\n        this.parent = parent;\n        this.children = [];\n        this.atomPath = (this.parent ? this.parent.atomPath + '.' : '') + this.header.name;\n    }\n    static async readAtom(tokenizer, dataHandler, parent) {\n        // Parse atom header\n        const offset = tokenizer.position;\n        // debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\n        const header = await tokenizer.readToken(AtomToken.Header);\n        const extended = header.length === 1;\n        if (extended) {\n            header.length = await tokenizer.readToken(AtomToken.ExtendedSize);\n        }\n        const extendToEOF = ((header.length === 0) && (header.name === 'mdat') && !parent);\n        if (extendToEOF) {\n            header.length = tokenizer.fileInfo.size - tokenizer.position + 8;\n        }\n        const atomBean = new Atom(header, extended, parent);\n        debug(`parse atom name=${atomBean.atomPath}, extended=${atomBean.extended}, offset=${offset}, len=${atomBean.header.length}`); //  buf.toString('ascii')\n        await atomBean.readData(tokenizer, dataHandler);\n        return atomBean;\n    }\n    getHeaderLength() {\n        return this.extended ? 16 : 8;\n    }\n    getPayloadLength() {\n        return this.header.length - this.getHeaderLength();\n    }\n    async readAtoms(tokenizer, dataHandler, size) {\n        while (size > 0) {\n            const atomBean = await Atom.readAtom(tokenizer, dataHandler, this);\n            this.children.push(atomBean);\n            size -= atomBean.header.length;\n        }\n    }\n    async readData(tokenizer, dataHandler) {\n        switch (this.header.name) {\n            // \"Container\" atoms, contains nested atoms\n            case 'moov': // The Movie Atom: contains other atoms\n            case 'udta': // User defined atom\n            case 'trak':\n            case 'mdia': // Media atom\n            case 'minf': // Media Information Atom\n            case 'stbl': // The Sample Table Atom\n            case '<id>':\n            case 'ilst':\n            case 'tref':\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength());\n            case 'meta': // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n                // meta has 4 bytes of padding, ignore\n                await tokenizer.ignore(4);\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength() - 4);\n            case 'mdhd': // Media header atom\n            case 'mvhd': // 'movie' => 'mvhd': movie header atom; child of Movie Atom\n            case 'tkhd':\n            case 'stsz':\n            case 'mdat':\n            default:\n                return dataHandler(this);\n        }\n    }\n}\nexports.Atom = Atom;\n//# sourceMappingURL=Atom.js.map"]},"metadata":{},"sourceType":"script"}