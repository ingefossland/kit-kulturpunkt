{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/ParentIdField/ParentIdField.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuery } from '../../redux/searchById';\nimport { utils } from '@kit-ui/schema';\nconst {\n  getUiOptions\n} = utils;\n\nconst ParentIdField = props => {\n  const {\n    formContext,\n    schema,\n    uiSchema\n  } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const uiQuery = uiOptions.query || {};\n  const collectionId = formContext && formContext.collectionId;\n  const uniqueId = formContext && formContext.uniqueId;\n  const query = {\n    id: \"/editor/\" + uniqueId + \"/parentId\",\n    models: \"documents\",\n    collectionId: collectionId,\n    fl: \"id,parentId,uniqueId,title\",\n    q: \"uniqueId:NOT \" + uniqueId,\n    ...uiQuery\n  };\n  const dispatch = useDispatch();\n  useEffect(() => {\n    uniqueId && dispatch(getQuery(query));\n  }, [uniqueId]);\n  const [enumOptions, setEnumOptions] = useState([]);\n  const [enumNames, setEnumNames] = useState([]);\n  const searchById = useSelector(state => state.searchById);\n  const currentSearch = searchById && searchById[query.id];\n\n  const getOptions = () => {\n    const resultsLoaded = currentSearch && currentSearch.resultsLoaded || []; // const options = models.length && getOptionsTree(models) || []\n\n    let optionsEnum = [undefined],\n        optionsNames = [\"No parentId\"];\n    resultsLoaded && resultsLoaded.map(model => {\n      const label = model.title + \" (\" + model.id + \")\";\n      optionsEnum.push(model.id);\n      optionsNames.push(label);\n    });\n    setEnumOptions(optionsEnum);\n    setEnumNames(optionsNames);\n  };\n\n  useEffect(() => {\n    getOptions();\n  }, [currentSearch]);\n  const {\n    StringField\n  } = props.registry.fields;\n  const newSchema = { ...schema,\n    enum: enumOptions,\n    enumNames: enumNames\n  };\n  return /*#__PURE__*/React.createElement(StringField, Object.assign({}, props, {\n    schema: newSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ParentIdField;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/ParentIdField/ParentIdField.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getQuery","utils","getUiOptions","ParentIdField","props","formContext","schema","uiSchema","uiOptions","uiQuery","query","collectionId","uniqueId","id","models","fl","q","dispatch","enumOptions","setEnumOptions","enumNames","setEnumNames","searchById","state","currentSearch","getOptions","resultsLoaded","optionsEnum","undefined","optionsNames","map","model","label","title","push","StringField","registry","fields","newSchema","enum"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuery } from '../../redux/searchById';\nimport { utils } from '@kit-ui/schema';\nconst { getUiOptions } = utils\n\nconst ParentIdField = (props) => {\n    const { formContext, schema, uiSchema } = props;\n\n    const uiOptions = getUiOptions(uiSchema)\n    const uiQuery = uiOptions.query || {}\n\n    const collectionId = formContext && formContext.collectionId\n    const uniqueId = formContext && formContext.uniqueId\n\n    const query = {\n        id: \"/editor/\" + uniqueId + \"/parentId\",\n        models: \"documents\",\n        collectionId: collectionId,\n        fl: \"id,parentId,uniqueId,title\",\n        q: \"uniqueId:NOT \" + uniqueId,\n        ...uiQuery\n    }\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        uniqueId && dispatch(getQuery(query))\n    }, [uniqueId])\n\n    const [enumOptions, setEnumOptions] = useState([])\n    const [enumNames, setEnumNames] = useState([])\n\n    const searchById = useSelector(state => state.searchById)\n    const currentSearch = searchById && searchById[query.id]\n\n    const getOptions = () => {\n        const resultsLoaded = currentSearch && currentSearch.resultsLoaded || []\n        // const options = models.length && getOptionsTree(models) || []\n\n        let optionsEnum = [\n            undefined\n        ], optionsNames = [\n            \"No parentId\"\n        ]\n\n\n        resultsLoaded && resultsLoaded.map(model => {\n            const label = model.title + \" (\"+model.id+\")\"\n            optionsEnum.push(model.id)\n            optionsNames.push(label)\n        })\n\n        setEnumOptions(optionsEnum)\n        setEnumNames(optionsNames)\n\n    }\n\n    useEffect(() => {\n        getOptions()\n    }, [currentSearch])\n\n    const { StringField } = props.registry.fields;\n\n    const newSchema = {\n        ...schema,\n        enum: enumOptions,\n        enumNames: enumNames\n    }\n\n    return (\n        <StringField {...props} schema={newSchema} />\n    )\n\n}\n\nexport default ParentIdField"]},"metadata":{},"sourceType":"module"}