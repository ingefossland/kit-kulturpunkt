{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport { utils } from \"@rjsf/core\";\nvar getDisplayLabel = utils.getDisplayLabel,\n    asNumber = utils.asNumber,\n    guessType = utils.guessType;\nvar nums = new Set([\"number\", \"integer\"]);\n/**\n * This is a silly limitation in the DOM where option change event values are\n * always retrieved as strings.\n */\n\nvar processValue = function processValue(schema, value) {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  var type = schema.type,\n      items = schema.items;\n\n  if (value === \"\") {\n    return undefined;\n  } else if (type === \"array\" && items && nums.has(items.type)) {\n    return value.map(asNumber);\n  } else if (type === \"boolean\") {\n    return value === \"true\";\n  } else if (type === \"number\") {\n    return asNumber(value);\n  } // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n\n\n  if (schema.enum) {\n    if (schema.enum.every(function (x) {\n      return guessType(x) === \"number\";\n    })) {\n      return asNumber(value);\n    } else if (schema.enum.every(function (x) {\n      return guessType(x) === \"boolean\";\n    })) {\n      return value === \"true\";\n    }\n  }\n\n  return value;\n};\n\nvar SelectWidget = function SelectWidget(_ref) {\n  var schema = _ref.schema,\n      _ref$uiSchema = _ref.uiSchema,\n      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema,\n      id = _ref.id,\n      options = _ref.options,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      readonly = _ref.readonly,\n      value = _ref.value,\n      multiple = _ref.multiple,\n      autofocus = _ref.autofocus,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors,\n      props = _objectWithoutPropertiesLoose(_ref, [\"schema\", \"uiSchema\", \"id\", \"options\", \"required\", \"disabled\", \"readonly\", \"value\", \"multiple\", \"autofocus\", \"onChange\", \"onBlur\", \"onFocus\", \"rawErrors\"]);\n\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n  var emptyValue = multiple ? [] : \"\";\n  var displayLabel = getDisplayLabel(schema, uiSchema\n  /* TODO: , rootSchema */\n  );\n  var label = options.title || props.title || props.label || schema.title;\n  var variant = options.variant || \"filled\";\n  var size = options.size;\n  var helperText = options.help || null;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(processValue(schema, value));\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, processValue(schema, value));\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, processValue(schema, value));\n  };\n\n  return /*#__PURE__*/React.createElement(TextField, {\n    variant: variant,\n    size: size,\n    fullWidth: true,\n    id: id,\n    label: displayLabel && label,\n    helperText: helperText,\n    select: true,\n    value: typeof value === \"undefined\" ? emptyValue : value,\n    required: required,\n    disabled: disabled || readonly,\n    autoFocus: autofocus,\n    error: rawErrors.length > 0,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus,\n    InputLabelProps: {\n      shrink: true\n    },\n    SelectProps: {\n      multiple: typeof multiple === \"undefined\" ? false : multiple\n    }\n  }, enumOptions.map(function (_ref5, i) {\n    var value = _ref5.value,\n        label = _ref5.label;\n    var disabled = enumDisabled && enumDisabled.indexOf(value) != -1;\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: i,\n      value: value,\n      disabled: disabled\n    }, label);\n  }));\n};\n\nexport default SelectWidget;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/es/SelectWidget/SelectWidget.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","React","MenuItem","TextField","WidgetProps","utils","getDisplayLabel","asNumber","guessType","nums","Set","processValue","schema","value","type","items","undefined","has","map","enum","every","x","SelectWidget","_ref","_ref$uiSchema","uiSchema","id","options","required","disabled","readonly","multiple","autofocus","onChange","onBlur","onFocus","_ref$rawErrors","rawErrors","props","enumOptions","enumDisabled","emptyValue","displayLabel","label","title","variant","size","helperText","help","_onChange","_ref2","_onBlur","_ref3","_onFocus","_ref4","createElement","fullWidth","select","autoFocus","error","InputLabelProps","shrink","SelectProps","_ref5"],"mappings":"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","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport { utils } from \"@rjsf/core\";\nvar getDisplayLabel = utils.getDisplayLabel,\n    asNumber = utils.asNumber,\n    guessType = utils.guessType;\nvar nums = new Set([\"number\", \"integer\"]);\n/**\n * This is a silly limitation in the DOM where option change event values are\n * always retrieved as strings.\n */\n\nvar processValue = function processValue(schema, value) {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  var type = schema.type,\n      items = schema.items;\n\n  if (value === \"\") {\n    return undefined;\n  } else if (type === \"array\" && items && nums.has(items.type)) {\n    return value.map(asNumber);\n  } else if (type === \"boolean\") {\n    return value === \"true\";\n  } else if (type === \"number\") {\n    return asNumber(value);\n  } // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n\n\n  if (schema.enum) {\n    if (schema.enum.every(function (x) {\n      return guessType(x) === \"number\";\n    })) {\n      return asNumber(value);\n    } else if (schema.enum.every(function (x) {\n      return guessType(x) === \"boolean\";\n    })) {\n      return value === \"true\";\n    }\n  }\n\n  return value;\n};\n\nvar SelectWidget = function SelectWidget(_ref) {\n  var schema = _ref.schema,\n      _ref$uiSchema = _ref.uiSchema,\n      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema,\n      id = _ref.id,\n      options = _ref.options,\n      required = _ref.required,\n      disabled = _ref.disabled,\n      readonly = _ref.readonly,\n      value = _ref.value,\n      multiple = _ref.multiple,\n      autofocus = _ref.autofocus,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      _ref$rawErrors = _ref.rawErrors,\n      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors,\n      props = _objectWithoutPropertiesLoose(_ref, [\"schema\", \"uiSchema\", \"id\", \"options\", \"required\", \"disabled\", \"readonly\", \"value\", \"multiple\", \"autofocus\", \"onChange\", \"onBlur\", \"onFocus\", \"rawErrors\"]);\n\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n  var emptyValue = multiple ? [] : \"\";\n  var displayLabel = getDisplayLabel(schema, uiSchema\n  /* TODO: , rootSchema */\n  );\n  var label = options.title || props.title || props.label || schema.title;\n  var variant = options.variant || \"filled\";\n  var size = options.size;\n  var helperText = options.help || null;\n\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(processValue(schema, value));\n  };\n\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, processValue(schema, value));\n  };\n\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, processValue(schema, value));\n  };\n\n  return /*#__PURE__*/React.createElement(TextField, {\n    variant: variant,\n    size: size,\n    fullWidth: true,\n    id: id,\n    label: displayLabel && label,\n    helperText: helperText,\n    select: true,\n    value: typeof value === \"undefined\" ? emptyValue : value,\n    required: required,\n    disabled: disabled || readonly,\n    autoFocus: autofocus,\n    error: rawErrors.length > 0,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus,\n    InputLabelProps: {\n      shrink: true\n    },\n    SelectProps: {\n      multiple: typeof multiple === \"undefined\" ? false : multiple\n    }\n  }, enumOptions.map(function (_ref5, i) {\n    var value = _ref5.value,\n        label = _ref5.label;\n    var disabled = enumDisabled && enumDisabled.indexOf(value) != -1;\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: i,\n      value: value,\n      disabled: disabled\n    }, label);\n  }));\n};\n\nexport default SelectWidget;"]},"metadata":{},"sourceType":"module"}