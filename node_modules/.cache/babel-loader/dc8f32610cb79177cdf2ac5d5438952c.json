{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/Module/ModuleActionbar.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\"; //import NavSettings from \"../NavSettings/NavSettings\"\n//import NavToolbar from \"../NavToolbar/NavToolbar\"\n\nconst NavSettings = () => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 28\n  }\n}, \"settings\");\n\nconst NavToolbar = () => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 27\n  }\n}, \"toolbar\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  settings: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nconst getToolbar = ({\n  editable,\n  onEdit,\n  removable,\n  onRemove,\n  deletable,\n  onDelete,\n  restorable,\n  onRestore\n}) => {\n  let toolbar = [];\n\n  if (editable || deletable || removable) {\n    if (editable && onEdit) {\n      toolbar.push({\n        icon: \"edit\",\n        onClick: onEdit\n      });\n    }\n\n    if (removable && onRemove) {\n      toolbar.push({\n        icon: \"remove_circle\",\n        onClick: onRemove\n      });\n    } else if (deletable && onDelete) {\n      toolbar.push({\n        icon: \"delete\",\n        onClick: onDelete\n      });\n    } else if (restorable && onRestore) {\n      toolbar.push({\n        icon: \"restore\",\n        onClick: onRestore\n      });\n    }\n  }\n\n  return toolbar;\n};\n\nconst ModuleActionbar = ({\n  className,\n  settings,\n  toolbar,\n  children,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  if (children) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className || classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, children);\n  }\n\n  if (!toolbar) {\n    toolbar = getToolbar(props);\n  }\n\n  if (settings || toolbar) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className || classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, settings && /*#__PURE__*/React.createElement(NavSettings, {\n      className: classes.settings,\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 31\n      }\n    }), toolbar && /*#__PURE__*/React.createElement(NavToolbar, {\n      className: classes.toolbar,\n      toolbar: toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 30\n      }\n    }));\n  }\n\n  return false;\n};\n\nModuleActionbar.propTypes = {\n  settings: PropTypes.array,\n  toolbar: PropTypes.array\n};\nModuleActionbar.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ModuleActionbar\",\n  \"props\": {\n    \"settings\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"toolbar\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default ModuleActionbar;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Module/ModuleActionbar.js\"] = {\n    name: \"ModuleActionbar\",\n    docgenInfo: ModuleActionbar.__docgenInfo,\n    path: \"src/components/Module/ModuleActionbar.js\"\n  };\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/Module/ModuleActionbar.js"],"names":["React","makeStyles","PropTypes","NavSettings","NavToolbar","useStyles","theme","root","display","alignItems","justifyContent","settings","toolbar","getToolbar","editable","onEdit","removable","onRemove","deletable","onDelete","restorable","onRestore","push","icon","onClick","ModuleActionbar","className","children","props","classes","propTypes","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\"\n\n//import NavSettings from \"../NavSettings/NavSettings\"\n//import NavToolbar from \"../NavToolbar/NavToolbar\"\n\nconst NavSettings = () => (<p>settings</p>)\nconst NavToolbar = () => (<p>toolbar</p>)\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    settings: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n}));\n\nconst getToolbar = ({editable, onEdit, removable, onRemove, deletable, onDelete, restorable, onRestore}) => {\n\n    let toolbar = []\n\n    if (editable || deletable || removable) {\n\n        if (editable && onEdit) {\n            toolbar.push({\n                icon: \"edit\",\n                onClick: onEdit\n            })\n        }\n\n        if (removable && onRemove) {\n            toolbar.push({\n                icon: \"remove_circle\",\n                onClick: onRemove\n            })\n        } else if (deletable && onDelete) {\n            toolbar.push({\n                icon: \"delete\",\n                onClick: onDelete\n            })\n        } else if (restorable && onRestore) {\n            toolbar.push({\n                icon: \"restore\",\n                onClick: onRestore\n            })\n        }\n\n    }\n\n    return toolbar;\n\n}\n\nconst ModuleActionbar = ({ className, settings, toolbar, children, ...props }) => {\n    const classes = useStyles()\n\n    if (children) {\n        return (\n            <div className={className || classes.root}>\n                {children}\n            </div>\n        )    \n    }\n\n    if (!toolbar) {\n        toolbar = getToolbar(props)\n    }\n\n    if (settings || toolbar) {\n        return (\n            <div className={className || classes.root}>\n                { settings && <NavSettings className={classes.settings} settings={settings} /> }\n                { toolbar && <NavToolbar className={classes.toolbar} toolbar={toolbar} /> }\n            </div>\n        )    \n    }\n\n    return false\n\n}\n\nModuleActionbar.propTypes = {\n    settings: PropTypes.array,\n    toolbar: PropTypes.array\n}\n\nexport default ModuleActionbar;\n"]},"metadata":{},"sourceType":"module"}