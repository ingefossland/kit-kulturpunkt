{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Upload/UploadDropzone.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport Dropzone from 'react-dropzone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\nconst useStyles = makeStyles(theme => ({\n  upload: {\n    position: \"sticky\",\n    zIndex: 2,\n    bottom: 0,\n    color: \"inherit\",\n    minHeight: theme.spacing(16),\n    \"&[aria-expanded=true]\": {\n      top: 0,\n      height: \"100%\",\n      \"& $dropzone\": {\n        margin: 0\n      },\n      \"& $dropButton\": {\n        border: 0\n      }\n    },\n    \"& + *\": {\n      marginTop: theme.spacing(8)\n    }\n  },\n  closeButton: {\n    position: \"absolute\",\n    zIndex: \"2\",\n    top: \"0\",\n    right: \"0\",\n    margin: theme.spacing(1)\n  },\n  dropzone: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"inherit\",\n    //        overflow: \"hidden\",\n    margin: theme.spacing(2)\n  },\n  dropButton: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    flexGrow: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"1px solid\",\n    borderColor: theme.palette.divider,\n    backgroundColor: theme.palette.background.default,\n    backgroundColor: \"#eee\",\n    color: theme.palette.text.secondary,\n    \"&:hover\": {\n      cursor: \"pointer\"\n    },\n    \"& > *\": {\n      margin: theme.spacing(.5)\n    }\n  },\n  label: {\n    fontFamily: \"Akkurat, sans-serif\",\n    fontSize: \"14px\",\n    fontWeight: \"normal\"\n  }\n}));\n\nconst UploadDropzone = ({\n  className,\n  accept,\n  multiple,\n  onUpload,\n  onCancel,\n  currentUpload = {},\n  children,\n  expanded = false,\n  ...props\n}) => {\n  const {\n    t,\n    i18n\n  } = useTranslation('dialog');\n  const classes = useStyles();\n\n  const handleDrop = (acceptedFiles, rejectedFiles) => {\n    onUpload && onUpload(acceptedFiles);\n    console.log('acceptedFiles', acceptedFiles);\n    console.log('rejectedFiles', rejectedFiles);\n  };\n\n  const {\n    requested,\n    received\n  } = currentUpload;\n  let label;\n\n  if (!expanded) {\n    label = t('Upload more');\n  } else if (received > 0 && requested < received) {\n    label = t('Uploading {{requested}} of {{received}}', {\n      requested,\n      received\n    }) + \"...\";\n  } else {\n    label = t('Click or drop files to upload');\n  }\n\n  const ButtonClose = ({\n    className,\n    onClick\n  }) => {\n    return /*#__PURE__*/React.createElement(IconButton, {\n      className: className,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.upload,\n    \"aria-expanded\": expanded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    multiple: multiple,\n    accept: accept,\n    onDrop: handleDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classes.dropzone\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.dropButton,\n    elevation: 1,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CloudUploadIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, label)))), expanded && /*#__PURE__*/React.createElement(ButtonClose, {\n    className: classes.closeButton,\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 26\n    }\n  }));\n};\n\nUploadDropzone.propTypes = {\n  onUpload: PropTypes.func\n};\nUploadDropzone.defaultProps = {\n  multiple: true,\n  accept: \"image/*, video/*, audio/*\"\n};\nexport default UploadDropzone;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Upload/UploadDropzone.js"],"names":["React","PropTypes","Dropzone","makeStyles","Paper","IconButton","CloseIcon","CloudUploadIcon","CloudDoneIcon","Typography","useTranslation","useStyles","theme","upload","position","zIndex","bottom","color","minHeight","spacing","top","height","margin","border","marginTop","closeButton","right","dropzone","left","flexGrow","display","alignItems","justifyContent","dropButton","borderColor","palette","divider","backgroundColor","background","default","text","secondary","cursor","label","fontFamily","fontSize","fontWeight","UploadDropzone","className","accept","multiple","onUpload","onCancel","currentUpload","children","expanded","props","t","i18n","classes","handleDrop","acceptedFiles","rejectedFiles","console","log","requested","received","ButtonClose","onClick","getRootProps","getInputProps","icon","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\"\nimport Dropzone from 'react-dropzone'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\n\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(theme => ({\n    upload: {\n        position: \"sticky\",\n        zIndex: 2,\n        bottom: 0,\n        color: \"inherit\",\n\n        minHeight: theme.spacing(16),\n\n        \"&[aria-expanded=true]\": {\n            top: 0,\n            height: \"100%\",\n\n            \"& $dropzone\": {\n                margin: 0\n            },\n\n            \"& $dropButton\": {\n                border: 0\n            }\n\n        },\n\n       \"& + *\": {\n            marginTop: theme.spacing(8),\n        }\n   \n    },\n    closeButton: {\n        position: \"absolute\",\n        zIndex: \"2\",\n        top: \"0\",\n        right: \"0\",\n        margin: theme.spacing(1),\n    },\n    dropzone: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        flexGrow: 1,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        color: \"inherit\",\n//        overflow: \"hidden\",\n        margin: theme.spacing(2),\n    },\n    dropButton: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        flexGrow: 1,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        border: \"1px solid\",\n        borderColor: theme.palette.divider,\n        backgroundColor: theme.palette.background.default,\n        backgroundColor: \"#eee\",\n        color: theme.palette.text.secondary,\n\n        \"&:hover\": {\n            cursor: \"pointer\"\n        },\n\n        \"& > *\": {\n            margin: theme.spacing(.5)\n        },\n\n    },\n    label: {\n        fontFamily: \"Akkurat, sans-serif\",\n        fontSize: \"14px\",\n        fontWeight: \"normal\"\n    },\n\n}));\n\nconst UploadDropzone = ({className, accept, multiple, onUpload, onCancel, currentUpload = {}, children, expanded = false, ...props}) => {\n    const { t, i18n } = useTranslation('dialog');\n    const classes = useStyles()\n\n    const handleDrop = (acceptedFiles, rejectedFiles) => {\n        onUpload && onUpload(acceptedFiles)\n        console.log('acceptedFiles', acceptedFiles)\n        console.log('rejectedFiles', rejectedFiles)\n    }\n\n    const { requested, received } = currentUpload;\n\n    let label\n\n    if (!expanded) {\n        label = t('Upload more');\n    } else if (received > 0 && requested < received) {\n        label = t('Uploading {{requested}} of {{received}}', { requested, received }) + \"...\";\n    } else {\n        label = t('Click or drop files to upload');\n    }\n\n    const ButtonClose = ({className, onClick}) => {\n        return (\n            <IconButton className={className} onClick={onClick}>\n                <CloseIcon />\n            </IconButton>\n        )\n    }\n\n    return (\n        <div className={classes.upload} aria-expanded={expanded}>\n            <Dropzone multiple={multiple} accept={accept} onDrop={handleDrop}>\n                {({getRootProps, getInputProps}) => (\n                    <div className={classes.dropzone} {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <Paper className={classes.dropButton} elevation={1} square={true}>\n                            <CloudUploadIcon className={classes.icon} />\n                            <Typography className={classes.label}>{label}</Typography>\n                        </Paper>\n                    </div>\n                )}\n            </Dropzone>\n            {expanded && <ButtonClose className={classes.closeButton} onClick={onCancel} /> }\n        </div>\n    )\n    \n}\n\nUploadDropzone.propTypes = {\n    onUpload: PropTypes.func\n}\n\nUploadDropzone.defaultProps = {\n    multiple: true,\n    accept: \"image/*, video/*, audio/*\",\n}\n\nexport default UploadDropzone"]},"metadata":{},"sourceType":"module"}