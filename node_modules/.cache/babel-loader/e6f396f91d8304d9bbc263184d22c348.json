{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/Module/ButtonSelect.js\";\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport SelectIcon from '@material-ui/icons/Check';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    \"& svg\": {\n      width: theme.spacing(2.5),\n      height: theme.spacing(2.5),\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%,-50%)\",\n      color: \"currentColor\"\n    }\n  },\n  select: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    borderRadius: \"100%\",\n    border: \"1px dotted\",\n    margin: 1,\n    borderColor: \"currentColor\",\n    opacity: .5,\n    \"&:hover\": {\n      opacity: 1\n    }\n  },\n  selected: {\n    display: \"block\",\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    borderRadius: \"100%\",\n    border: \"2px solid\",\n    borderColor: theme.palette.primary.main,\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    boxShadow: theme.shadows[2]\n  }\n}));\n\nconst ButtonSelectable = ({\n  className,\n  selected = false,\n  onClick\n}) => {\n  const classes = useStyles();\n\n  if (selected) {\n    return /*#__PURE__*/React.createElement(IconButton, {\n      className: className || classes.button,\n      \"aria-selected\": selected,\n      color: \"inherit\",\n      \"aria-label\": \"select\",\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SelectIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(IconButton, {\n    className: className || classes.button,\n    \"aria-selected\": selected,\n    color: \"inherit\",\n    \"aria-label\": \"select\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })));\n};\n\nButtonSelectable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ButtonSelectable\",\n  \"props\": {\n    \"selected\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default ButtonSelectable;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Module/ButtonSelect.js\"] = {\n    name: \"ButtonSelectable\",\n    docgenInfo: ButtonSelectable.__docgenInfo,\n    path: \"src/components/Module/ButtonSelect.js\"\n  };\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/Module/ButtonSelect.js"],"names":["React","IconButton","SelectIcon","makeStyles","useStyles","theme","button","width","spacing","height","position","top","left","transform","color","select","borderRadius","border","margin","borderColor","opacity","selected","display","palette","primary","main","backgroundColor","contrastText","boxShadow","shadows","ButtonSelectable","className","onClick","classes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport SelectIcon from '@material-ui/icons/Check';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        \"& svg\": {\n            width: theme.spacing(2.5),\n            height: theme.spacing(2.5),\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n            color: \"currentColor\"\n        }        \n    },\n    select: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        borderRadius: \"100%\",\n        border: \"1px dotted\",\n        margin: 1,\n        borderColor: \"currentColor\",\n\n        opacity: .5,\n\n        \"&:hover\": {\n            opacity: 1\n        }\n\n    },\n    selected: {\n        display: \"block\",\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n        borderRadius: \"100%\",\n        border: \"2px solid\",\n        borderColor: theme.palette.primary.main,\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        boxShadow: theme.shadows[2],\n    }\n}));\n\nconst ButtonSelectable = ({className, selected = false, onClick}) => {\n    const classes = useStyles();\n\n    if (selected) {\n\n        return (\n            <IconButton className={className || classes.button} aria-selected={selected} color=\"inherit\" aria-label=\"select\" onClick={onClick}>\n                <div className={classes.selected}>\n                    <SelectIcon />\n                </div>\n            </IconButton>\n        )\n\n    }\n\n    return (\n        <IconButton className={className || classes.button} aria-selected={selected} color=\"inherit\" aria-label=\"select\" onClick={onClick}>\n            <div className={classes.select}>\n                <SelectIcon />\n            </div>\n        </IconButton>\n    )\n\n}\n\nexport default ButtonSelectable;"]},"metadata":{},"sourceType":"module"}