{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/KpLink/KpLinkContentField.js\";\nimport React, { Component } from 'react';\nimport { ImagePreview } from \"@kit-ui/admin\";\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"block\",\n    position: \"relative\",\n    backgroundColor: \"#333\",\n    color: \"white\",\n    \"&:hover $preview\": {\n      opacity: .5\n    }\n  },\n  action: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \"& > [role=group]\": {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n  },\n  preview: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n}));\n\nconst LayoutButtons = () => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }\n  }, \"x\");\n};\n\nconst KpLinKContentField = props => {\n  const {\n    formData,\n    formContext,\n    schema,\n    uiSchema,\n    registry\n  } = props;\n  const mediaId = formData && formData.mediaId;\n  const media = formData && formData.media;\n  const mediaType = media && media.mediaType;\n  const referenceId = formData && formData.referenceId;\n  const reference = formData && formData.reference;\n  const referenceTitle = reference && reference.title;\n  const imageUrl = media.imageUrl || reference.imageUrl;\n  const imageFocalpoint = formData && formData.imageFocalpoint;\n  const imageCropdata = formData && formData.imageCropdata;\n  const imageFilters = formData && formData.imageFilters;\n  const backgroundColor = formData && formData.backgroundColor;\n  const color = formData && formData.color;\n  const newUiSchema = {\n    \"ui:fieldset\": [\"linkMedia\", \"linkContent\", \"linkReference\"],\n    \"ui:options\": {\n      \"padding\": 2,\n      \"spacing\": 2\n    },\n    \"linkMedia\": {\n      \"ui:media\": media,\n      \"ui:mediaType\": \"image\",\n      \"ui:fieldset\": [\"mediaId\", \"media\"],\n      \"ui:sidebar\": {\n        \"query\": {\n          \"models\": \"media\",\n          \"mediaType\": \"image\"\n        }\n      },\n      \"ui:layout\": \"mediaPreview\",\n      \"ui:buttons\": [\"sidebar\"]\n    },\n    \"linkReference\": {\n      \"ui:fieldset\": [\"referenceId\", \"reference\"],\n      \"ui:sidebar\": {\n        \"query\": {\n          \"models\": \"documents\",\n          \"documentType\": [\"page*\", \"article\"]\n        }\n      },\n      \"ui:layout\": \"kioskLinkReference\",\n      \"ui:options\": {\n        \"editable\": true,\n        \"deletable\": true,\n        \"restorable\": true\n      }\n    },\n    \"linkContent\": {\n      \"ui:layout\": \"kioskLinkContent\",\n      \"ui:grid\": true,\n      \"ui:padding\": 2,\n      \"ui:spacing\": 2,\n      \"ui:fieldset\": [\"runningHead\", \"title\", \"description\"],\n      \"runningHead\": {\n        \"ui:title\": \"Stikktittel\"\n      },\n      \"title\": {\n        \"ui:title\": \"Tittel\"\n      },\n      \"description\": {\n        \"ui:title\": \"Beskrivelse\"\n      }\n    }\n  };\n  const {\n    ObjectField\n  } = registry.fields;\n  return /*#__PURE__*/React.createElement(ObjectField, Object.assign({}, props, {\n    uiSchema: newUiSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, JSON.stringify(uiSchema));\n};\n\nexport default KpLinKContentField;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/KpLink/KpLinkContentField.js"],"names":["React","Component","ImagePreview","makeStyles","useStyles","theme","root","display","position","backgroundColor","color","opacity","action","zIndex","top","right","bottom","left","alignItems","justifyContent","flexDirection","preview","LayoutButtons","KpLinKContentField","props","formData","formContext","schema","uiSchema","registry","mediaId","media","mediaType","referenceId","reference","referenceTitle","title","imageUrl","imageFocalpoint","imageCropdata","imageFilters","newUiSchema","ObjectField","fields","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ImagePreview } from \"@kit-ui/admin\"\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"block\",\n        position: \"relative\",\n        backgroundColor: \"#333\",\n        color: \"white\",\n\n        \"&:hover $preview\": {\n            opacity: .5,\n        }\n\n    },\n    action: {\n        zIndex: 2,\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n\n        \"& > [role=group]\": {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n        }\n\n    },\n    preview: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    }\n}));\n\nconst LayoutButtons = () => { return <p>x</p>}\n\nconst KpLinKContentField = (props) => {\n\n    const { formData, formContext, schema, uiSchema, registry} = props\n\n    const mediaId = formData && formData.mediaId\n    const media = formData && formData.media\n    const mediaType = media && media.mediaType\n\n    const referenceId = formData && formData.referenceId\n    const reference = formData && formData.reference\n    const referenceTitle = reference && reference.title\n\n    const imageUrl = media.imageUrl || reference.imageUrl;\n    const imageFocalpoint = formData && formData.imageFocalpoint\n    const imageCropdata = formData && formData.imageCropdata\n    const imageFilters = formData && formData.imageFilters\n\n    const backgroundColor = formData && formData.backgroundColor;\n    const color = formData && formData.color;\n\n\n\n\n    const newUiSchema = {\n        \"ui:fieldset\": [\n            \"linkMedia\",\n            \"linkContent\",\n            \"linkReference\",\n        ],\n        \"ui:options\": {\n            \"padding\": 2,\n            \"spacing\": 2\n        },\n        \"linkMedia\": {\n            \"ui:media\": media,\n            \"ui:mediaType\": \"image\",\n            \"ui:fieldset\": [\n                \"mediaId\",\n                \"media\"\n            ],\n            \"ui:sidebar\": {\n                \"query\": {\n                    \"models\": \"media\",\n                    \"mediaType\": \"image\"\n                }\n            },\n            \"ui:layout\": \"mediaPreview\",\n            \"ui:buttons\": [\n                \"sidebar\"\n            ],\n        },\n        \"linkReference\": {\n            \"ui:fieldset\": [\n                \"referenceId\",\n                \"reference\"\n            ],\n            \"ui:sidebar\": {\n                \"query\": {\n                    \"models\": \"documents\",\n                    \"documentType\": [\"page*\",\"article\"]\n                }\n            },\n            \"ui:layout\": \"kioskLinkReference\",\n            \"ui:options\": {\n                \"editable\": true,\n                \"deletable\": true,\n                \"restorable\": true\n            }\n        },\n        \"linkContent\": {\n            \"ui:layout\": \"kioskLinkContent\",\n            \"ui:grid\": true,\n            \"ui:padding\": 2,\n            \"ui:spacing\": 2,\n            \"ui:fieldset\": [\n                \"runningHead\",\n                \"title\",\n                \"description\",\n            ],\n            \"runningHead\": {\n                \"ui:title\": \"Stikktittel\"\n            },\n            \"title\": {\n                \"ui:title\": \"Tittel\"\n            },\n            \"description\": {\n                \"ui:title\": \"Beskrivelse\",\n            },\n        },\n    }\n\n    const { ObjectField } = registry.fields\n\n\n    return <ObjectField {...props} uiSchema={newUiSchema} />\n\n    return (\n        <p>{JSON.stringify(uiSchema)}</p>\n    )\n\n}\n\nexport default KpLinKContentField"]},"metadata":{},"sourceType":"module"}