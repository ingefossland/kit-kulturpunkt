{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Header = void 0;\n\nconst Token = require(\"token-types\");\n\nconst Util_1 = require(\"../../common/Util\");\n/**\n * BASIC STRUCTURE\n */\n\n\nexports.Header = {\n  len: 6 * 4,\n  get: (buf, off) => {\n    const header = {\n      // word 0\n      signature: buf.toString(\"binary\", off, off + 3),\n      // versionIndex number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)\n      streamMinorVersion: Util_1.default.getBitAllignedNumber(buf, off + 3, 0, 4),\n      streamMajorVersion: Util_1.default.getBitAllignedNumber(buf, off + 3, 4, 4),\n      // word 1\n      frameCount: Token.UINT32_LE.get(buf, off + 4),\n      // word 2\n      maxLevel: Token.UINT16_LE.get(buf, off + 8),\n      sampleFrequency: [44100, 48000, 37800, 32000][Util_1.default.getBitAllignedNumber(buf, off + 10, 0, 2)],\n      link: Util_1.default.getBitAllignedNumber(buf, off + 10, 2, 2),\n      profile: Util_1.default.getBitAllignedNumber(buf, off + 10, 4, 4),\n      maxBand: Util_1.default.getBitAllignedNumber(buf, off + 11, 0, 6),\n      intensityStereo: Util_1.default.isBitSet(buf, off + 11, 6),\n      midSideStereo: Util_1.default.isBitSet(buf, off + 11, 7),\n      // word 3\n      titlePeak: Token.UINT16_LE.get(buf, off + 12),\n      titleGain: Token.UINT16_LE.get(buf, off + 14),\n      // word 4\n      albumPeak: Token.UINT16_LE.get(buf, off + 16),\n      albumGain: Token.UINT16_LE.get(buf, off + 18),\n      // word\n      lastFrameLength: Token.UINT32_LE.get(buf, off + 20) >>> 20 & 0x7FF,\n      trueGapless: Util_1.default.isBitSet(buf, off + 23, 0)\n    };\n    header.lastFrameLength = header.trueGapless ? Token.UINT32_LE.get(buf, 20) >>> 20 & 0x7FF : 0;\n    return header;\n  }\n};","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/music-metadata/lib/musepack/sv7/StreamVersion7.js"],"names":["Object","defineProperty","exports","value","Header","Token","require","Util_1","len","get","buf","off","header","signature","toString","streamMinorVersion","default","getBitAllignedNumber","streamMajorVersion","frameCount","UINT32_LE","maxLevel","UINT16_LE","sampleFrequency","link","profile","maxBand","intensityStereo","isBitSet","midSideStereo","titlePeak","titleGain","albumPeak","albumGain","lastFrameLength","trueGapless"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Header = void 0;\nconst Token = require(\"token-types\");\nconst Util_1 = require(\"../../common/Util\");\n/**\n * BASIC STRUCTURE\n */\nexports.Header = {\n    len: 6 * 4,\n    get: (buf, off) => {\n        const header = {\n            // word 0\n            signature: buf.toString(\"binary\", off, off + 3),\n            // versionIndex number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)\n            streamMinorVersion: Util_1.default.getBitAllignedNumber(buf, off + 3, 0, 4),\n            streamMajorVersion: Util_1.default.getBitAllignedNumber(buf, off + 3, 4, 4),\n            // word 1\n            frameCount: Token.UINT32_LE.get(buf, off + 4),\n            // word 2\n            maxLevel: Token.UINT16_LE.get(buf, off + 8),\n            sampleFrequency: [44100, 48000, 37800, 32000][Util_1.default.getBitAllignedNumber(buf, off + 10, 0, 2)],\n            link: Util_1.default.getBitAllignedNumber(buf, off + 10, 2, 2),\n            profile: Util_1.default.getBitAllignedNumber(buf, off + 10, 4, 4),\n            maxBand: Util_1.default.getBitAllignedNumber(buf, off + 11, 0, 6),\n            intensityStereo: Util_1.default.isBitSet(buf, off + 11, 6),\n            midSideStereo: Util_1.default.isBitSet(buf, off + 11, 7),\n            // word 3\n            titlePeak: Token.UINT16_LE.get(buf, off + 12),\n            titleGain: Token.UINT16_LE.get(buf, off + 14),\n            // word 4\n            albumPeak: Token.UINT16_LE.get(buf, off + 16),\n            albumGain: Token.UINT16_LE.get(buf, off + 18),\n            // word\n            lastFrameLength: (Token.UINT32_LE.get(buf, off + 20) >>> 20) & 0x7FF,\n            trueGapless: Util_1.default.isBitSet(buf, off + 23, 0)\n        };\n        header.lastFrameLength = header.trueGapless ? (Token.UINT32_LE.get(buf, 20) >>> 20) & 0x7FF : 0;\n        return header;\n    }\n};\n//# sourceMappingURL=StreamVersion7.js.map"]},"metadata":{},"sourceType":"script"}