{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/SectionTypeSettings/SectionTypeOptions.js\";\nimport React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"@kit-ui/core\";\nimport Icon from \"@material-ui/core/Icon\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DmIcon from \"./DmIcon\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: theme.spacing(1.5),\n    fontFamily: \"Akkurat, sans-serif\",\n    fontSize: 12,\n    fontWeight: \"bold\",\n    lineHeight: 1\n  }\n}));\nconst icons = {\n  \"text\": \"subject\",\n  \"media\": \"insert_photo\",\n  \"links\": \"insert_link\",\n  \"attachments\": \"attach_file\",\n  \"quote\": \"format_quote\",\n  \"dm\": /*#__PURE__*/React.createElement(DmIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })\n};\n\nconst SettingsIcon = ({\n  icon\n}) => {\n  if (!icon) {\n    return false;\n  }\n\n  if (icon && typeof icon === \"string\") {\n    return /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, icon);\n  }\n\n  return icon;\n};\n\nconst SectionTypeOptions = ({\n  value,\n  options,\n  onChange\n}) => {\n  const _onSelect = value => {\n    onChange && onChange(value);\n    setExpanded(false);\n  };\n\n  const classes = useStyles();\n\n  const ListOption = option => {\n    const {\n      label,\n      value\n    } = option;\n    const icon = icons[value];\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: () => _onSelect(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, icon && /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SettingsIcon, {\n      icon: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, options && options.map((option, index) => {\n    return /*#__PURE__*/React.createElement(ListOption, Object.assign({}, option, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 24\n      }\n    }));\n  }));\n};\n\nSectionTypeOptions.defaultProps = {};\nSectionTypeOptions.propTypes = {};\nexport default SectionTypeOptions;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/SectionTypeSettings/SectionTypeOptions.js"],"names":["React","forwardRef","useState","useEffect","useRef","PropTypes","Dropdown","Icon","List","ListItem","ListItemIcon","ListItemText","makeStyles","DmIcon","useStyles","theme","button","padding","spacing","fontFamily","fontSize","fontWeight","lineHeight","icons","SettingsIcon","icon","SectionTypeOptions","value","options","onChange","_onSelect","setExpanded","classes","ListOption","option","label","map","index","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\"\nimport { Dropdown } from \"@kit-ui/core\"\n\nimport Icon from \"@material-ui/core/Icon\"\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DmIcon from \"./DmIcon\"\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        padding: theme.spacing(1.5),\n        fontFamily: \"Akkurat, sans-serif\",\n        fontSize: 12,\n        fontWeight: \"bold\",\n        lineHeight: 1,\n    }\n}));\n\nconst icons = {\n    \"text\": \"subject\",\n    \"media\": \"insert_photo\",\n    \"links\": \"insert_link\",\n    \"attachments\": \"attach_file\",\n    \"quote\": \"format_quote\",\n    \"dm\": <DmIcon />\n}\n\nconst SettingsIcon = ({icon}) => {\n\n    if (!icon) {\n        return false\n    }\n\n    if (icon && typeof icon === \"string\") {\n        return (\n            <Icon>{icon}</Icon>\n        )\n    }\n\n    return icon\n    \n}\n\nconst SectionTypeOptions = ({\n    value, \n    options,\n    onChange\n}) => {\n\n    const _onSelect = (value) => {\n        onChange && onChange(value)\n        setExpanded(false)\n    }\n\n    const classes = useStyles()\n\n    const ListOption = (option) => {\n        const { label, value } = option\n\n        const icon = icons[value]\n\n        return (\n            <ListItem button onClick={() => _onSelect(value)}>\n                { icon && <ListItemIcon><SettingsIcon icon={icon} /></ListItemIcon> }\n                <ListItemText primary={label} />\n            </ListItem>\n        )\n\n    }\n\n\n    return (\n        <List>\n            { options && options.map((option, index) => {\n                return <ListOption {...option} key={index} />\n            })}\n        </List>\n    )\n\n}\n\nSectionTypeOptions.defaultProps = {\n}\n\nSectionTypeOptions.propTypes = {\n}\n\nexport default SectionTypeOptions;"]},"metadata":{},"sourceType":"module"}