{"ast":null,"code":"import { RRule } from 'rrule';\nimport moment from 'moment';\nimport _ from \"lodash\";\nimport { getICalEvent } from \".\";\nexport const getICalEventQuery = ({\n  vEvent,\n  query\n}) => {\n  let {\n    from,\n    to,\n    days = 3\n  } = query;\n  from = from && moment(from).startOf('day') || moment().startOf('day');\n  to = to && moment(to).endOf('day') || moment(from).add(days, \"days\").endOf('day');\n  const {\n    DTSTART,\n    DTEND,\n    RRULE,\n    CATEGORIES\n  } = vEvent;\n  let results = [],\n      dates = []; // queries\n\n  let hits = true;\n\n  if (query.category && CATEGORIES) {\n    const categories = CATEGORIES.split(\",\");\n\n    if (!categories.includes(query.category)) {\n      hits = false;\n    }\n\n    if (!hits) {\n      return {\n        results\n      };\n    }\n  } // rrules\n\n\n  if (RRULE) {\n    let eventRRule;\n\n    if (DTSTART) {\n      eventRRule = RRule.fromString(\"RRULE:\" + RRULE + \"\\nDTSTART:\" + DTSTART);\n    } else {\n      eventRRule = RRule.fromString(\"RRULE:\" + RRULE);\n    }\n\n    const eventDates = eventRRule.between(moment(from).toDate(), moment(to).toDate());\n    eventDates && eventDates.map(date => {\n      const startHour = moment(DTSTART);\n      const endHour = moment(DTEND);\n      const hours = moment(endHour).diff(startHour, 'hour');\n      const start = moment.utc(date).format(\"YYYY-MM-DDTHH:mm:ss\");\n      const end = moment.utc(date).add(hours, 'hours').format(\"YYYY-MM-DDTHH:mm:ss\");\n      const event = getICalEvent({ ...vEvent,\n        start: start,\n        end: end\n      });\n      results.push(event);\n    });\n  } else {\n    const event = getICalEvent({ ...vEvent\n    });\n    results.push(event);\n  }\n\n  return {\n    results\n  };\n};\nexport default getICalEventQuery;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/utils/getICalEventQuery.js"],"names":["RRule","moment","_","getICalEvent","getICalEventQuery","vEvent","query","from","to","days","startOf","endOf","add","DTSTART","DTEND","RRULE","CATEGORIES","results","dates","hits","category","categories","split","includes","eventRRule","fromString","eventDates","between","toDate","map","date","startHour","endHour","hours","diff","start","utc","format","end","event","push"],"mappings":"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","sourcesContent":["import { RRule } from 'rrule'\nimport moment from 'moment';\nimport _ from \"lodash\"\n\nimport { getICalEvent } from \".\"\n\nexport const getICalEventQuery = ({vEvent, query}) => {\n\n    let { from, to, days = 3 } = query\n\n    from = from && moment(from).startOf('day') || moment().startOf('day')\n    to = to && moment(to).endOf('day') || moment(from).add(days, \"days\").endOf('day')\n\n    const { DTSTART, DTEND, RRULE, CATEGORIES } = vEvent\n\n    let results = [], dates = []\n\n    // queries\n\n    let hits = true\n\n    if (query.category && CATEGORIES) {\n\n        const categories = CATEGORIES.split(\",\")\n\n        if (!categories.includes(query.category)) {\n            hits = false\n        }\n\n        if (!hits) {\n            return {\n                results\n            }\n        }\n    \n    }\n\n\n    // rrules\n\n    if (RRULE) {\n\n    \n        let eventRRule\n\n        if (DTSTART) {\n            eventRRule = RRule.fromString(\"RRULE:\"+RRULE+\"\\nDTSTART:\"+DTSTART)\n        } else {\n            eventRRule = RRule.fromString(\"RRULE:\"+RRULE)\n        }\n\n        const eventDates = eventRRule.between(moment(from).toDate(), moment(to).toDate())\n\n        eventDates && eventDates.map(date => {\n\n            const startHour = moment(DTSTART)\n            const endHour = moment(DTEND)\n            const hours = moment(endHour).diff(startHour, 'hour');\n            \n            const start = moment.utc(date).format(\"YYYY-MM-DDTHH:mm:ss\")\n            const end = moment.utc(date).add(hours, 'hours').format(\"YYYY-MM-DDTHH:mm:ss\")\n\n            const event = getICalEvent({\n                ...vEvent,\n                start: start,\n                end: end\n            })\n\n            results.push(event)\n            \n        })\n\n    } else {\n\n        const event = getICalEvent({...vEvent})\n\n        results.push(event)\n\n    }\n\n    return {\n        results\n    }\n\n}\n\nexport default getICalEventQuery"]},"metadata":{},"sourceType":"module"}