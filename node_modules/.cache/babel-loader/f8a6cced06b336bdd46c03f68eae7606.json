{"ast":null,"code":"function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}\n\nimport React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"@kit-ui/core\";\nimport ColorPicker from \"./ColorPicker\";\nimport tinycolor from 'tinycolor2';\nimport IconButton from '@material-ui/core/IconButton';\nimport ColorIcon from \"@material-ui/icons/Lens\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    icon: {\n      //        backgroundColor: props => { return props.backgroundColor },\n      color: function color(props) {\n        return props.color;\n      }\n    },\n    label: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: '0.75em',\n      fontWeight: \"bold\",\n      lineHeight: '1',\n      textAlign: \"center\"\n    }\n  };\n});\n\nvar ColorSettings = function ColorSettings(props) {\n  var value = props.value,\n      options = props.options,\n      onChange = props.onChange;\n  var variant = options.variant,\n      enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var anchorRef = useRef(null);\n\n  var _onChange = function _onChange(_ref) {\n    var hex = _ref.hex;\n    onChange && onChange(hex);\n  };\n\n  var _onToggle = function _onToggle(event) {\n    setExpanded(function (prevExpanded) {\n      return !prevExpanded;\n    });\n  };\n\n  var _onCollapse = function _onCollapse(event) {\n    setExpanded(false);\n  }; // color swatches\n\n\n  var colors = enumOptions.length && enumOptions.map(function (_ref2, index) {\n    var value = _ref2.value;\n    return value;\n  });\n\n  if (!value && colors.length) {\n    value = (_readOnlyError(\"value\"), colors[0]);\n  } // color + contrast\n\n\n  var primaryColor = tinycolor(value);\n  var color = primaryColor.toHexString();\n  var contrastColor = primaryColor.isLight() && \"black\" || \"white\";\n  var backgroundColor;\n\n  if (variant === \"text\") {\n    backgroundColor = options.backgroundColor || contrastColor;\n  } else {\n    backgroundColor = color;\n  }\n\n  var classes = useStyles({\n    backgroundColor: backgroundColor,\n    color: color,\n    contrastColor: contrastColor\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    ref: anchorRef,\n    onClick: _onToggle\n  }, /*#__PURE__*/React.createElement(ColorIcon, {\n    className: classes.icon\n  })), /*#__PURE__*/React.createElement(Dropdown, {\n    expanded: expanded,\n    anchorEl: anchorRef.current,\n    backgroundColor: backgroundColor,\n    onClickAway: _onCollapse\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    backgroundColor: backgroundColor,\n    color: color,\n    colors: colors,\n    onChange: _onChange\n  })));\n};\n\nColorSettings.defaultProps = {\n  value: \"#666\"\n};\nColorSettings.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  value: PropTypes.string,\n  options: PropTypes.array\n} : {};\nexport default ColorSettings;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/es/ColorSettings/ColorSettings.js"],"names":["_readOnlyError","name","Error","React","forwardRef","useState","useEffect","useRef","PropTypes","Dropdown","ColorPicker","tinycolor","IconButton","ColorIcon","Button","Paper","makeStyles","useStyles","theme","icon","color","props","label","fontFamily","fontSize","fontWeight","lineHeight","textAlign","ColorSettings","value","options","onChange","variant","enumOptions","enumDisabled","_useState","expanded","setExpanded","anchorRef","_onChange","_ref","hex","_onToggle","event","prevExpanded","_onCollapse","colors","length","map","_ref2","index","primaryColor","toHexString","contrastColor","isLight","backgroundColor","classes","createElement","Fragment","ref","onClick","className","anchorEl","current","onClickAway","defaultProps","propTypes","process","env","NODE_ENV","string","array"],"mappings":"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","sourcesContent":["function _readOnlyError(name) { throw new Error(\"\\\"\" + name + \"\\\" is read-only\"); }\n\nimport React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"@kit-ui/core\";\nimport ColorPicker from \"./ColorPicker\";\nimport tinycolor from 'tinycolor2';\nimport IconButton from '@material-ui/core/IconButton';\nimport ColorIcon from \"@material-ui/icons/Lens\";\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    icon: {\n      //        backgroundColor: props => { return props.backgroundColor },\n      color: function color(props) {\n        return props.color;\n      }\n    },\n    label: {\n      fontFamily: \"Akkurat, sans-serif\",\n      fontSize: '0.75em',\n      fontWeight: \"bold\",\n      lineHeight: '1',\n      textAlign: \"center\"\n    }\n  };\n});\n\nvar ColorSettings = function ColorSettings(props) {\n  var value = props.value,\n      options = props.options,\n      onChange = props.onChange;\n  var variant = options.variant,\n      enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled;\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var anchorRef = useRef(null);\n\n  var _onChange = function _onChange(_ref) {\n    var hex = _ref.hex;\n    onChange && onChange(hex);\n  };\n\n  var _onToggle = function _onToggle(event) {\n    setExpanded(function (prevExpanded) {\n      return !prevExpanded;\n    });\n  };\n\n  var _onCollapse = function _onCollapse(event) {\n    setExpanded(false);\n  }; // color swatches\n\n\n  var colors = enumOptions.length && enumOptions.map(function (_ref2, index) {\n    var value = _ref2.value;\n    return value;\n  });\n\n  if (!value && colors.length) {\n    value = (_readOnlyError(\"value\"), colors[0]);\n  } // color + contrast\n\n\n  var primaryColor = tinycolor(value);\n  var color = primaryColor.toHexString();\n  var contrastColor = primaryColor.isLight() && \"black\" || \"white\";\n  var backgroundColor;\n\n  if (variant === \"text\") {\n    backgroundColor = options.backgroundColor || contrastColor;\n  } else {\n    backgroundColor = color;\n  }\n\n  var classes = useStyles({\n    backgroundColor: backgroundColor,\n    color: color,\n    contrastColor: contrastColor\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    ref: anchorRef,\n    onClick: _onToggle\n  }, /*#__PURE__*/React.createElement(ColorIcon, {\n    className: classes.icon\n  })), /*#__PURE__*/React.createElement(Dropdown, {\n    expanded: expanded,\n    anchorEl: anchorRef.current,\n    backgroundColor: backgroundColor,\n    onClickAway: _onCollapse\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    backgroundColor: backgroundColor,\n    color: color,\n    colors: colors,\n    onChange: _onChange\n  })));\n};\n\nColorSettings.defaultProps = {\n  value: \"#666\"\n};\nColorSettings.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  value: PropTypes.string,\n  options: PropTypes.array\n} : {};\nexport default ColorSettings;"]},"metadata":{},"sourceType":"module"}