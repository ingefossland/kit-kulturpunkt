{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/NavToolbar/NavToolbarSettings.js\";\nimport React, { useRef, useState } from 'react';\nimport { Dropdown } from \"@kit-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\n\nconst NavToolbarSettings = ({\n  options = [],\n  value,\n  ...button\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const anchorRef = useRef(null);\n\n  const _onToggle = event => {\n    setExpanded(prevExpanded => !prevExpanded);\n  };\n\n  const _onCollapse = event => {\n    setExpanded(false);\n  };\n\n  const ListOption = option => {\n    const {\n      icon,\n      title,\n      label,\n      value,\n      onClick\n    } = option;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, icon && /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 41\n      }\n    }, icon)), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: title || value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: _onToggle,\n    ref: anchorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, value), /*#__PURE__*/React.createElement(Dropdown, {\n    expanded: expanded,\n    anchorEl: anchorRef.current,\n    onClickAway: _onCollapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, options && options.map((option, index) => {\n    return /*#__PURE__*/React.createElement(ListOption, Object.assign({}, option, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 32\n      }\n    }));\n  }))));\n};\n\nNavToolbarSettings.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"NavToolbarSettings\",\n  \"props\": {\n    \"options\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default NavToolbarSettings;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/NavToolbar/NavToolbarSettings.js\"] = {\n    name: \"NavToolbarSettings\",\n    docgenInfo: NavToolbarSettings.__docgenInfo,\n    path: \"src/components/NavToolbar/NavToolbarSettings.js\"\n  };\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/NavToolbar/NavToolbarSettings.js"],"names":["React","useRef","useState","Dropdown","IconButton","Icon","List","ListItem","ListItemIcon","ListItemText","Button","NavToolbarSettings","options","value","button","expanded","setExpanded","anchorRef","_onToggle","event","prevExpanded","_onCollapse","ListOption","option","icon","title","label","onClick","current","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,OAAO,GAAG,EAAX;AAAeC,EAAAA,KAAf;AAAsB,KAAGC;AAAzB,CAAD,KAAsC;AAC7D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMe,SAAS,GAAGhB,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMiB,SAAS,GAAIC,KAAD,IAAW;AACzBH,IAAAA,WAAW,CAACI,YAAY,IAAI,CAACA,YAAlB,CAAX;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIF,KAAD,IAAW;AAC3BH,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMM,UAAU,GAAIC,MAAD,IAAY;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,KAAf;AAAsBb,MAAAA,KAAtB;AAA6Bc,MAAAA;AAA7B,QAAyCJ,MAA/C;AAEA,wBACI,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,OAAO,EAAEI,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMH,IAAI,iBAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,IAAP,CAAd,CADd,eAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEC,KAAK,IAAIZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH,GAVD;;AAYA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,OAAO,EAAEK,SAApC;AAA+C,IAAA,GAAG,EAAED,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KADL,CAFJ,eAMI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEE,QAApB;AAA8B,IAAA,QAAQ,EAAEE,SAAS,CAACW,OAAlD;AAA2D,IAAA,WAAW,EAAEP,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMT,OAAO,IAAIA,OAAO,CAACiB,GAAR,CAAY,CAACN,MAAD,EAASO,KAAT,KAAmB;AACxC,wBAAO,oBAAC,UAAD,oBAAgBP,MAAhB;AAAwB,MAAA,GAAG,EAAEO,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAFY,CADjB,CADJ,CANJ,CADJ;AAiBH,CA1CD;;;;;;;;;;;;;;;;AA4CA,eAAenB,kBAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Dropdown } from \"@kit-ui/core\"\n\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Icon from \"@material-ui/core/Icon\"\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Button from '@material-ui/core/Button';\n\nconst NavToolbarSettings = ({options = [], value, ...button}) => {\n    const [expanded, setExpanded] = useState(false);\n\n    const anchorRef = useRef(null)\n\n    const _onToggle = (event) => {\n        setExpanded(prevExpanded => !prevExpanded);\n    }\n\n    const _onCollapse = (event) => {\n        setExpanded(false);\n    };\n\n    const ListOption = (option) => {\n        const {Â icon, title, label, value, onClick } = option\n\n        return (\n            <ListItem button onClick={onClick}>\n                { icon && <ListItemIcon><Icon>{icon}</Icon></ListItemIcon> }\n                <ListItemText primary={title || value} />\n            </ListItem>\n        )\n\n    }\n\n    return (\n        <React.Fragment>\n\n            <Button variant=\"outlined\" onClick={_onToggle} ref={anchorRef}>\n                {value}\n            </Button>\n\n            <Dropdown expanded={expanded} anchorEl={anchorRef.current} onClickAway={_onCollapse}>\n                <List>\n                    { options && options.map((option, index) => {\n                        return <ListOption {...option} key={index} />\n                    })}\n                </List>\n            </Dropdown>\n        </React.Fragment>\n    )\n        \n}\n\nexport default NavToolbarSettings"]},"metadata":{},"sourceType":"module"}