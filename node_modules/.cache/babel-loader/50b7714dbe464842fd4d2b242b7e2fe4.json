{"ast":null,"code":"export const getMeasureString = (array = []) => {\n  if (!array.length) {\n    return \"\";\n  }\n\n  const list = array & array.map(item => {\n    const {\n      name,\n      width,\n      height,\n      depth,\n      unit\n    } = item;\n    let measures = [];\n\n    if (width) {\n      measures.push(width);\n    }\n\n    if (height) {\n      measures.push(height);\n    }\n\n    if (depth) {\n      measures.push(depth);\n    }\n\n    measures = measures.join('x');\n\n    if (name) {\n      measures = name + \":\" + measures;\n    }\n\n    if (unit) {\n      measures = measures + unit;\n    }\n\n    return measures;\n  });\n  return list && list.join(\", \");\n};\nexport default getMeasureString;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/MeasureField/utils/getMeasureString.js"],"names":["getMeasureString","array","length","list","map","item","name","width","height","depth","unit","measures","push","join"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,CAACC,KAAK,GAAG,EAAT,KAAgB;AAE5C,MAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACf,WAAO,EAAP;AACH;;AAED,QAAMC,IAAI,GAAGF,KAAK,GAAGA,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AAEnC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,MAAf;AAAuBC,MAAAA,KAAvB;AAA8BC,MAAAA;AAA9B,QAAuCL,IAA7C;AAEA,QAAIM,QAAQ,GAAG,EAAf;;AAEA,QAAIJ,KAAJ,EAAW;AAAEI,MAAAA,QAAQ,CAACC,IAAT,CAAcL,KAAd;AAAsB;;AACnC,QAAIC,MAAJ,EAAY;AAAEG,MAAAA,QAAQ,CAACC,IAAT,CAAcJ,MAAd;AAAuB;;AACrC,QAAIC,KAAJ,EAAW;AAAEE,MAAAA,QAAQ,CAACC,IAAT,CAAcH,KAAd;AAAsB;;AAEnCE,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,IAAT,CAAc,GAAd,CAAX;;AAEA,QAAIP,IAAJ,EAAU;AACNK,MAAAA,QAAQ,GAAGL,IAAI,GAAG,GAAP,GAAaK,QAAxB;AACH;;AAED,QAAID,IAAJ,EAAU;AACNC,MAAAA,QAAQ,GAAGA,QAAQ,GAAGD,IAAtB;AACH;;AAED,WAAOC,QAAP;AAEH,GAtBoB,CAArB;AAwBA,SAAOR,IAAI,IAAIA,IAAI,CAACU,IAAL,CAAU,IAAV,CAAf;AAEH,CAhCM;AAkCP,eAAeb,gBAAf","sourcesContent":["export const getMeasureString = (array = []) => {\n\n    if (!array.length) {\n        return \"\"\n    }\n\n    const list = array & array.map(item => {\n\n        const {Â name, width, height, depth, unit } = item\n\n        let measures = []\n\n        if (width) { measures.push(width) }\n        if (height) { measures.push(height) }\n        if (depth) { measures.push(depth) }\n\n        measures = measures.join('x')\n\n        if (name) {\n            measures = name + \":\" + measures\n        }\n\n        if (unit) {\n            measures = measures + unit\n        }\n\n        return measures\n\n    })\n\n    return list && list.join(\", \")\n\n}\n\nexport default getMeasureString"]},"metadata":{},"sourceType":"module"}