{"ast":null,"code":"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    time: {\n      fontFamily: \"Akkurat Mono, monospace\",\n      fontSize: \"14px\",\n      lineHeight: 1,\n      marginTop: theme.spacing(.25)\n    },\n    progress: {\n      flexGrow: 1,\n      margin: theme.spacing(0, 2)\n    }\n  };\n});\nexport var getTime = function getTime(timeInSeconds) {\n  var pad = function pad(num, size) {\n    return ('000' + num).slice(size * -1);\n  },\n      time = parseFloat(timeInSeconds).toFixed(3),\n      hours = Math.floor(time / 60 / 60),\n      minutes = Math.floor(time / 60) % 60,\n      seconds = Math.floor(time - minutes * 60),\n      milliseconds = time.slice(-3); //    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + pad(seconds, 2) + ',' + pad(milliseconds, 3);\n\n\n  if (hours) {\n    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + pad(seconds, 2);\n  }\n\n  return minutes + ':' + pad(seconds, 2);\n};\n\nvar MediaTimeControls = function MediaTimeControls(_ref) {\n  var className = _ref.className,\n      buffered = _ref.buffered,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 0 : _ref$duration,\n      _ref$currentTime = _ref.currentTime,\n      currentTime = _ref$currentTime === void 0 ? 0 : _ref$currentTime,\n      onChange = _ref.onChange;\n  var classes = useStyles();\n  var timePlayed = getTime(currentTime);\n  var timeTotal = getTime(duration);\n\n  var handleChange = function handleChange(event, value) {\n    onChange && onChange(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className || classes.root\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.time\n  }, timePlayed), /*#__PURE__*/React.createElement(Slider, {\n    className: classes.progress,\n    min: 0,\n    max: duration,\n    value: currentTime,\n    onChange: handleChange\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.time\n  }, timeTotal));\n};\n\nexport default MediaTimeControls;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/admin/es/Media/MediaTimeControls.js"],"names":["React","makeStyles","Slider","useStyles","theme","root","display","alignItems","time","fontFamily","fontSize","lineHeight","marginTop","spacing","progress","flexGrow","margin","getTime","timeInSeconds","pad","num","size","slice","parseFloat","toFixed","hours","Math","floor","minutes","seconds","milliseconds","MediaTimeControls","_ref","className","buffered","_ref$duration","duration","_ref$currentTime","currentTime","onChange","classes","timePlayed","timeTotal","handleChange","event","value","createElement","min","max"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,IAAIC,SAAS,GAAGF,UAAU,CAAC,UAAUG,KAAV,EAAiB;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,UAAU,EAAE;AAFR,KADD;AAKLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE,yBADR;AAEJC,MAAAA,QAAQ,EAAE,MAFN;AAGJC,MAAAA,UAAU,EAAE,CAHR;AAIJC,MAAAA,SAAS,EAAER,KAAK,CAACS,OAAN,CAAc,GAAd;AAJP,KALD;AAWLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAE,CADF;AAERC,MAAAA,MAAM,EAAEZ,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAFA;AAXL,GAAP;AAgBD,CAjByB,CAA1B;AAkBA,OAAO,IAAII,OAAO,GAAG,SAASA,OAAT,CAAiBC,aAAjB,EAAgC;AACnD,MAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,GAAb,EAAkBC,IAAlB,EAAwB;AAChC,WAAO,CAAC,QAAQD,GAAT,EAAcE,KAAd,CAAoBD,IAAI,GAAG,CAAC,CAA5B,CAAP;AACD,GAFD;AAAA,MAGIb,IAAI,GAAGe,UAAU,CAACL,aAAD,CAAV,CAA0BM,OAA1B,CAAkC,CAAlC,CAHX;AAAA,MAIIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWnB,IAAI,GAAG,EAAP,GAAY,EAAvB,CAJZ;AAAA,MAKIoB,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWnB,IAAI,GAAG,EAAlB,IAAwB,EALtC;AAAA,MAMIqB,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWnB,IAAI,GAAGoB,OAAO,GAAG,EAA5B,CANd;AAAA,MAOIE,YAAY,GAAGtB,IAAI,CAACc,KAAL,CAAW,CAAC,CAAZ,CAPnB,CADmD,CAQhB;;;AAGnC,MAAIG,KAAJ,EAAW;AACT,WAAON,GAAG,CAACM,KAAD,EAAQ,CAAR,CAAH,GAAgB,GAAhB,GAAsBN,GAAG,CAACS,OAAD,EAAU,CAAV,CAAzB,GAAwC,GAAxC,GAA8CT,GAAG,CAACU,OAAD,EAAU,CAAV,CAAxD;AACD;;AAED,SAAOD,OAAO,GAAG,GAAV,GAAgBT,GAAG,CAACU,OAAD,EAAU,CAAV,CAA1B;AACD,CAhBM;;AAkBP,IAAIE,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACvD,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,aAAa,GAAGH,IAAI,CAACI,QAFzB;AAAA,MAGIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,CAA3B,GAA+BA,aAH9C;AAAA,MAIIE,gBAAgB,GAAGL,IAAI,CAACM,WAJ5B;AAAA,MAKIA,WAAW,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,CAA9B,GAAkCA,gBALpD;AAAA,MAMIE,QAAQ,GAAGP,IAAI,CAACO,QANpB;AAOA,MAAIC,OAAO,GAAGrC,SAAS,EAAvB;AACA,MAAIsC,UAAU,GAAGxB,OAAO,CAACqB,WAAD,CAAxB;AACA,MAAII,SAAS,GAAGzB,OAAO,CAACmB,QAAD,CAAvB;;AAEA,MAAIO,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoC;AACrDN,IAAAA,QAAQ,IAAIA,QAAQ,CAACM,KAAD,CAApB;AACD,GAFD;;AAIA,SAAO,aAAa7C,KAAK,CAAC8C,aAAN,CAAoB,KAApB,EAA2B;AAC7Cb,IAAAA,SAAS,EAAEA,SAAS,IAAIO,OAAO,CAACnC;AADa,GAA3B,EAEjB,aAAaL,KAAK,CAAC8C,aAAN,CAAoB,KAApB,EAA2B;AACzCb,IAAAA,SAAS,EAAEO,OAAO,CAAChC;AADsB,GAA3B,EAEbiC,UAFa,CAFI,EAIJ,aAAazC,KAAK,CAAC8C,aAAN,CAAoB5C,MAApB,EAA4B;AACvD+B,IAAAA,SAAS,EAAEO,OAAO,CAAC1B,QADoC;AAEvDiC,IAAAA,GAAG,EAAE,CAFkD;AAGvDC,IAAAA,GAAG,EAAEZ,QAHkD;AAIvDS,IAAAA,KAAK,EAAEP,WAJgD;AAKvDC,IAAAA,QAAQ,EAAEI;AAL6C,GAA5B,CAJT,EAUhB,aAAa3C,KAAK,CAAC8C,aAAN,CAAoB,KAApB,EAA2B;AAC1Cb,IAAAA,SAAS,EAAEO,OAAO,CAAChC;AADuB,GAA3B,EAEdkC,SAFc,CAVG,CAApB;AAaD,CA7BD;;AA+BA,eAAeX,iBAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    time: {\n      fontFamily: \"Akkurat Mono, monospace\",\n      fontSize: \"14px\",\n      lineHeight: 1,\n      marginTop: theme.spacing(.25)\n    },\n    progress: {\n      flexGrow: 1,\n      margin: theme.spacing(0, 2)\n    }\n  };\n});\nexport var getTime = function getTime(timeInSeconds) {\n  var pad = function pad(num, size) {\n    return ('000' + num).slice(size * -1);\n  },\n      time = parseFloat(timeInSeconds).toFixed(3),\n      hours = Math.floor(time / 60 / 60),\n      minutes = Math.floor(time / 60) % 60,\n      seconds = Math.floor(time - minutes * 60),\n      milliseconds = time.slice(-3); //    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + pad(seconds, 2) + ',' + pad(milliseconds, 3);\n\n\n  if (hours) {\n    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + pad(seconds, 2);\n  }\n\n  return minutes + ':' + pad(seconds, 2);\n};\n\nvar MediaTimeControls = function MediaTimeControls(_ref) {\n  var className = _ref.className,\n      buffered = _ref.buffered,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 0 : _ref$duration,\n      _ref$currentTime = _ref.currentTime,\n      currentTime = _ref$currentTime === void 0 ? 0 : _ref$currentTime,\n      onChange = _ref.onChange;\n  var classes = useStyles();\n  var timePlayed = getTime(currentTime);\n  var timeTotal = getTime(duration);\n\n  var handleChange = function handleChange(event, value) {\n    onChange && onChange(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className || classes.root\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.time\n  }, timePlayed), /*#__PURE__*/React.createElement(Slider, {\n    className: classes.progress,\n    min: 0,\n    max: duration,\n    value: currentTime,\n    onChange: handleChange\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.time\n  }, timeTotal));\n};\n\nexport default MediaTimeControls;"]},"metadata":{},"sourceType":"module"}