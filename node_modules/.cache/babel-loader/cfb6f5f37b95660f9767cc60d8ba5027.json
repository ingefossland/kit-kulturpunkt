{"ast":null,"code":"import ical2json from \"ical2json\";\nimport _ from \"lodash\";\nimport getICalEventQuery from \"./getICalEventQuery\";\nexport const getICalQuery = ({\n  iCal,\n  query = {}\n}) => {\n  if (!iCal) {\n    return false;\n  }\n\n  const data = ical2json.convert(iCal);\n  const vCalendars = data && data.VCALENDAR;\n  let items = [],\n      dates = [],\n      byDate = {};\n\n  if (vCalendars) {\n    vCalendars && vCalendars.map(vCalendar => {\n      let vEvents = vCalendar && vCalendar.VEVENT;\n      vEvents = _.orderBy(vEvents, 'DTSTART', 'desc');\n      vEvents = _.orderBy(vEvents, 'RECURRENCE-ID', 'asc');\n      vEvents && vEvents.map(vEvent => {\n        const search = getICalEventQuery({\n          vEvent,\n          query\n        });\n        search.results && search.results.map(event => {\n          const {\n            uid,\n            date\n          } = event;\n\n          if (!dates.includes(date)) {\n            dates.push(date);\n          }\n\n          items.push(event);\n\n          if (!byDate[date]) {\n            byDate[date] = [];\n          }\n\n          byDate[date].push(event);\n        });\n      });\n    });\n  }\n\n  items = _.orderBy(items, 'start', 'asc');\n  return {\n    query,\n    dates,\n    items,\n    byDate\n  };\n};\nexport default getICalQuery;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/utils/getICalQuery.js"],"names":["ical2json","_","getICalEventQuery","getICalQuery","iCal","query","data","convert","vCalendars","VCALENDAR","items","dates","byDate","map","vCalendar","vEvents","VEVENT","orderBy","vEvent","search","results","event","uid","date","includes","push"],"mappings":"AAAA,OAAOA,SAAP,MAAuB,WAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAK,GAAG;AAAf,CAAD,KAAwB;AAEhD,MAAI,CAACD,IAAL,EAAW;AACP,WAAO,KAAP;AACH;;AAED,QAAME,IAAI,GAAGN,SAAS,CAACO,OAAV,CAAkBH,IAAlB,CAAb;AAEA,QAAMI,UAAU,GAAGF,IAAI,IAAIA,IAAI,CAACG,SAAhC;AAEA,MAAIC,KAAK,GAAG,EAAZ;AAAA,MAAgBC,KAAK,GAAG,EAAxB;AAAA,MAA4BC,MAAM,GAAG,EAArC;;AAEA,MAAIJ,UAAJ,EAAgB;AAEZA,IAAAA,UAAU,IAAIA,UAAU,CAACK,GAAX,CAAeC,SAAS,IAAI;AACtC,UAAIC,OAAO,GAAGD,SAAS,IAAIA,SAAS,CAACE,MAArC;AAEAD,MAAAA,OAAO,GAAGd,CAAC,CAACgB,OAAF,CAAUF,OAAV,EAAmB,SAAnB,EAA8B,MAA9B,CAAV;AACAA,MAAAA,OAAO,GAAGd,CAAC,CAACgB,OAAF,CAAUF,OAAV,EAAmB,eAAnB,EAAoC,KAApC,CAAV;AAEAA,MAAAA,OAAO,IAAIA,OAAO,CAACF,GAAR,CAAYK,MAAM,IAAI;AAE7B,cAAMC,MAAM,GAAGjB,iBAAiB,CAAC;AAACgB,UAAAA,MAAD;AAASb,UAAAA;AAAT,SAAD,CAAhC;AAEAc,QAAAA,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeP,GAAf,CAAmBQ,KAAK,IAAI;AAC1C,gBAAM;AAAEC,YAAAA,GAAF;AAAOC,YAAAA;AAAP,cAAgBF,KAAtB;;AAEA,cAAI,CAACV,KAAK,CAACa,QAAN,CAAeD,IAAf,CAAL,EAA2B;AACvBZ,YAAAA,KAAK,CAACc,IAAN,CAAWF,IAAX;AACH;;AAEDb,UAAAA,KAAK,CAACe,IAAN,CAAWJ,KAAX;;AAEA,cAAI,CAACT,MAAM,CAACW,IAAD,CAAX,EAAmB;AACfX,YAAAA,MAAM,CAACW,IAAD,CAAN,GAAe,EAAf;AACH;;AAEDX,UAAAA,MAAM,CAACW,IAAD,CAAN,CAAaE,IAAb,CAAkBJ,KAAlB;AAEH,SAfiB,CAAlB;AAiBH,OArBU,CAAX;AAuBH,KA7Ba,CAAd;AA+BH;;AAEDX,EAAAA,KAAK,GAAGT,CAAC,CAACgB,OAAF,CAAUP,KAAV,EAAiB,OAAjB,EAA0B,KAA1B,CAAR;AAEA,SAAO;AACHL,IAAAA,KADG;AAEHM,IAAAA,KAFG;AAGHD,IAAAA,KAHG;AAIHE,IAAAA;AAJG,GAAP;AAOH,CAxDM;AA0DP,eAAeT,YAAf","sourcesContent":["import ical2json from  \"ical2json\";\nimport _ from \"lodash\"\n\nimport getICalEventQuery from \"./getICalEventQuery\"\n\nexport const getICalQuery = ({iCal, query = {}}) => {\n\n    if (!iCal) {\n        return false\n    }\n\n    const data = ical2json.convert(iCal);\n\n    const vCalendars = data && data.VCALENDAR \n\n    let items = [], dates = [], byDate = {}\n\n    if (vCalendars) {\n\n        vCalendars && vCalendars.map(vCalendar => {\n            let vEvents = vCalendar && vCalendar.VEVENT\n\n            vEvents = _.orderBy(vEvents, 'DTSTART', 'desc')\n            vEvents = _.orderBy(vEvents, 'RECURRENCE-ID', 'asc')\n\n            vEvents && vEvents.map(vEvent => {\n    \n                const search = getICalEventQuery({vEvent, query})\n    \n                search.results && search.results.map(event => {\n                    const { uid, date } = event\n\n                    if (!dates.includes(date)) {\n                        dates.push(date)\n                    }\n\n                    items.push(event)\n\n                    if (!byDate[date]) {\n                        byDate[date] = []\n                    }\n\n                    byDate[date].push(event)\n                    \n                })\n    \n            })\n    \n        })\n\n    }\n\n    items = _.orderBy(items, 'start', 'asc');\n\n    return {\n        query,\n        dates,\n        items,\n        byDate\n    }\n\n}\n\nexport default getICalQuery"]},"metadata":{},"sourceType":"module"}