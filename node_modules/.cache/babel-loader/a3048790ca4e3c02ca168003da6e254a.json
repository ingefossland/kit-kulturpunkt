{"ast":null,"code":"// ASF Objects\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WmPictureToken = exports.MetadataLibraryObjectState = exports.MetadataObjectState = exports.ExtendedStreamPropertiesObjectState = exports.ExtendedContentDescriptionObjectState = exports.ContentDescriptionObjectState = exports.readCodecEntries = exports.HeaderExtensionObject = exports.StreamPropertiesObject = exports.FilePropertiesObject = exports.IgnoreObjectState = exports.State = exports.HeaderObjectToken = exports.TopLevelHeaderObjectToken = exports.DataType = void 0;\n\nconst Util_1 = require(\"../common/Util\");\n\nconst Token = require(\"token-types\");\n\nconst GUID_1 = require(\"./GUID\");\n\nconst AsfUtil_1 = require(\"./AsfUtil\");\n\nconst ID3v2Token_1 = require(\"../id3v2/ID3v2Token\");\n/**\n * Data Type: Specifies the type of information being stored. The following values are recognized.\n */\n\n\nvar DataType;\n\n(function (DataType) {\n  /**\n   * Unicode string. The data consists of a sequence of Unicode characters.\n   */\n  DataType[DataType[\"UnicodeString\"] = 0] = \"UnicodeString\";\n  /**\n   * BYTE array. The type of data is implementation-specific.\n   */\n\n  DataType[DataType[\"ByteArray\"] = 1] = \"ByteArray\";\n  /**\n   * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\n   */\n\n  DataType[DataType[\"Bool\"] = 2] = \"Bool\";\n  /**\n   * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\n   */\n\n  DataType[DataType[\"DWord\"] = 3] = \"DWord\";\n  /**\n   * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\n   */\n\n  DataType[DataType[\"QWord\"] = 4] = \"QWord\";\n  /**\n   * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\n   */\n\n  DataType[DataType[\"Word\"] = 5] = \"Word\";\n})(DataType = exports.DataType || (exports.DataType = {}));\n/**\n * Token for: 3. ASF top-level Header Object\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\n */\n\n\nexports.TopLevelHeaderObjectToken = {\n  len: 30,\n  get: (buf, off) => {\n    return {\n      objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n      objectSize: Token.UINT64_LE.get(buf, off + 16),\n      numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24) // Reserved: 2 bytes\n\n    };\n  }\n};\n/**\n * Token for: 3.1 Header Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\n */\n\nexports.HeaderObjectToken = {\n  len: 24,\n  get: (buf, off) => {\n    return {\n      objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n      objectSize: Token.UINT64_LE.get(buf, off + 16)\n    };\n  }\n};\n\nclass State {\n  constructor(header) {\n    this.len = header.objectSize - exports.HeaderObjectToken.len;\n  }\n\n  postProcessTag(tags, name, valueType, data) {\n    if (name === 'WM/Picture') {\n      tags.push({\n        id: name,\n        value: WmPictureToken.fromBuffer(data)\n      });\n    } else {\n      const parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(valueType);\n\n      if (!parseAttr) {\n        throw new Error('unexpected value headerType: ' + valueType);\n      }\n\n      tags.push({\n        id: name,\n        value: parseAttr(data)\n      });\n    }\n  }\n\n}\n\nexports.State = State; // ToDo: use ignore type\n\nclass IgnoreObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n\n  get(buf, off) {\n    return null;\n  }\n\n}\n\nexports.IgnoreObjectState = IgnoreObjectState;\n/**\n * Token for: 3.2: File Properties Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\n */\n\nclass FilePropertiesObject extends State {\n  constructor(header) {\n    super(header);\n  }\n\n  get(buf, off) {\n    return {\n      fileId: GUID_1.default.fromBin(buf, off),\n      fileSize: Token.UINT64_LE.get(buf, off + 16),\n      creationDate: Token.UINT64_LE.get(buf, off + 24),\n      dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\n      playDuration: Token.UINT64_LE.get(buf, off + 40),\n      sendDuration: Token.UINT64_LE.get(buf, off + 48),\n      preroll: Token.UINT64_LE.get(buf, off + 56),\n      flags: {\n        broadcast: Util_1.default.strtokBITSET.get(buf, off + 64, 24),\n        seekable: Util_1.default.strtokBITSET.get(buf, off + 64, 25)\n      },\n      // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n      minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\n      maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\n      maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\n    };\n  }\n\n}\n\nexports.FilePropertiesObject = FilePropertiesObject;\nFilePropertiesObject.guid = GUID_1.default.FilePropertiesObject;\n/**\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\n */\n\nclass StreamPropertiesObject extends State {\n  constructor(header) {\n    super(header);\n  }\n\n  get(buf, off) {\n    return {\n      streamType: GUID_1.default.decodeMediaType(GUID_1.default.fromBin(buf, off)),\n      errorCorrectionType: GUID_1.default.fromBin(buf, off + 8) // ToDo\n\n    };\n  }\n\n}\n\nexports.StreamPropertiesObject = StreamPropertiesObject;\nStreamPropertiesObject.guid = GUID_1.default.StreamPropertiesObject;\n/**\n * 3.4: Header Extension Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\n */\n\nclass HeaderExtensionObject {\n  constructor() {\n    this.len = 22;\n  }\n\n  get(buf, off) {\n    return {\n      reserved1: GUID_1.default.fromBin(buf, off),\n      reserved2: buf.readUInt16LE(off + 16),\n      extensionDataSize: buf.readUInt32LE(off + 18)\n    };\n  }\n\n}\n\nexports.HeaderExtensionObject = HeaderExtensionObject;\nHeaderExtensionObject.guid = GUID_1.default.HeaderExtensionObject;\n/**\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\n\nconst CodecListObjectHeader = {\n  len: 20,\n  get: (buf, off) => {\n    return {\n      entryCount: buf.readUInt16LE(off + 16)\n    };\n  }\n};\n\nasync function readString(tokenizer) {\n  const length = await tokenizer.readNumber(Token.UINT16_LE);\n  return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf16le'))).replace('\\0', '');\n}\n/**\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\n\n\nasync function readCodecEntries(tokenizer) {\n  const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\n  const entries = [];\n\n  for (let i = 0; i < codecHeader.entryCount; ++i) {\n    entries.push(await readCodecEntry(tokenizer));\n  }\n\n  return entries;\n}\n\nexports.readCodecEntries = readCodecEntries;\n\nasync function readInformation(tokenizer) {\n  const length = await tokenizer.readNumber(Token.UINT16_LE);\n  const buf = Buffer.alloc(length);\n  await tokenizer.readBuffer(buf);\n  return buf;\n}\n/**\n * Read Codec-Entries\n * @param tokenizer\n */\n\n\nasync function readCodecEntry(tokenizer) {\n  const type = await tokenizer.readNumber(Token.UINT16_LE);\n  return {\n    type: {\n      videoCodec: (type & 0x0001) === 0x0001,\n      audioCodec: (type & 0x0002) === 0x0002\n    },\n    codecName: await readString(tokenizer),\n    description: await readString(tokenizer),\n    information: await readInformation(tokenizer)\n  };\n}\n/**\n * 3.10 Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\n */\n\n\nclass ContentDescriptionObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n\n  get(buf, off) {\n    const tags = [];\n    let pos = off + 10;\n\n    for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n      const length = buf.readUInt16LE(off + i * 2);\n\n      if (length > 0) {\n        const tagName = ContentDescriptionObjectState.contentDescTags[i];\n        const end = pos + length;\n        tags.push({\n          id: tagName,\n          value: AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, end))\n        });\n        pos = end;\n      }\n    }\n\n    return tags;\n  }\n\n}\n\nexports.ContentDescriptionObjectState = ContentDescriptionObjectState;\nContentDescriptionObjectState.guid = GUID_1.default.ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\n/**\n * 3.11 Extended Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\n */\n\nclass ExtendedContentDescriptionObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n\n  get(buf, off) {\n    const tags = [];\n    const attrCount = buf.readUInt16LE(off);\n    let pos = off + 2;\n\n    for (let i = 0; i < attrCount; i += 1) {\n      const nameLen = buf.readUInt16LE(pos);\n      pos += 2;\n      const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n      pos += nameLen;\n      const valueType = buf.readUInt16LE(pos);\n      pos += 2;\n      const valueLen = buf.readUInt16LE(pos);\n      pos += 2;\n      const value = buf.slice(pos, pos + valueLen);\n      pos += valueLen;\n      this.postProcessTag(tags, name, valueType, value);\n    }\n\n    return tags;\n  }\n\n}\n\nexports.ExtendedContentDescriptionObjectState = ExtendedContentDescriptionObjectState;\nExtendedContentDescriptionObjectState.guid = GUID_1.default.ExtendedContentDescriptionObject;\n/**\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\n */\n\nclass ExtendedStreamPropertiesObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n\n  get(buf, off) {\n    return {\n      startTime: Token.UINT64_LE.get(buf, off),\n      endTime: Token.UINT64_LE.get(buf, off + 8),\n      dataBitrate: buf.readInt32LE(off + 12),\n      bufferSize: buf.readInt32LE(off + 16),\n      initialBufferFullness: buf.readInt32LE(off + 20),\n      alternateDataBitrate: buf.readInt32LE(off + 24),\n      alternateBufferSize: buf.readInt32LE(off + 28),\n      alternateInitialBufferFullness: buf.readInt32LE(off + 32),\n      maximumObjectSize: buf.readInt32LE(off + 36),\n      flags: {\n        reliableFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 0),\n        seekableFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 1),\n        resendLiveCleanpointsFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 2)\n      },\n      // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n      streamNumber: buf.readInt16LE(off + 42),\n      streamLanguageId: buf.readInt16LE(off + 44),\n      averageTimePerFrame: buf.readInt32LE(off + 52),\n      streamNameCount: buf.readInt32LE(off + 54),\n      payloadExtensionSystems: buf.readInt32LE(off + 56),\n      streamNames: [],\n      streamPropertiesObject: null\n    };\n  }\n\n}\n\nexports.ExtendedStreamPropertiesObjectState = ExtendedStreamPropertiesObjectState;\nExtendedStreamPropertiesObjectState.guid = GUID_1.default.ExtendedStreamPropertiesObject;\n/**\n * 4.7  Metadata Object (optional, 0 or 1)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\n */\n\nclass MetadataObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n\n  get(buf, off) {\n    const tags = [];\n    const descriptionRecordsCount = buf.readUInt16LE(off);\n    let pos = off + 2;\n\n    for (let i = 0; i < descriptionRecordsCount; i += 1) {\n      pos += 4;\n      const nameLen = buf.readUInt16LE(pos);\n      pos += 2;\n      const dataType = buf.readUInt16LE(pos);\n      pos += 2;\n      const dataLen = buf.readUInt32LE(pos);\n      pos += 4;\n      const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n      pos += nameLen;\n      const data = buf.slice(pos, pos + dataLen);\n      pos += dataLen;\n      const parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(dataType);\n\n      if (!parseAttr) {\n        throw new Error('unexpected value headerType: ' + dataType);\n      }\n\n      this.postProcessTag(tags, name, dataType, data);\n    }\n\n    return tags;\n  }\n\n}\n\nexports.MetadataObjectState = MetadataObjectState;\nMetadataObjectState.guid = GUID_1.default.MetadataObject; // 4.8\tMetadata Library Object (optional, 0 or 1)\n\nclass MetadataLibraryObjectState extends MetadataObjectState {\n  constructor(header) {\n    super(header);\n  }\n\n}\n\nexports.MetadataLibraryObjectState = MetadataLibraryObjectState;\nMetadataLibraryObjectState.guid = GUID_1.default.MetadataLibraryObject;\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\n */\n\nclass WmPictureToken {\n  constructor(len) {\n    this.len = len;\n  }\n\n  static fromBase64(base64str) {\n    return this.fromBuffer(Buffer.from(base64str, 'base64'));\n  }\n\n  static fromBuffer(buffer) {\n    const pic = new WmPictureToken(buffer.length);\n    return pic.get(buffer, 0);\n  }\n\n  get(buffer, offset) {\n    const typeId = buffer.readUInt8(offset++);\n    const size = buffer.readInt32LE(offset);\n    let index = 5;\n\n    while (buffer.readUInt16BE(index) !== 0) {\n      index += 2;\n    }\n\n    const format = buffer.slice(5, index).toString('utf16le');\n\n    while (buffer.readUInt16BE(index) !== 0) {\n      index += 2;\n    }\n\n    const description = buffer.slice(5, index).toString('utf16le');\n    return {\n      type: ID3v2Token_1.AttachedPictureType[typeId],\n      format,\n      description,\n      size,\n      data: buffer.slice(index + 4)\n    };\n  }\n\n}\n\nexports.WmPictureToken = WmPictureToken;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/music-metadata/lib/asf/AsfObject.js"],"names":["Object","defineProperty","exports","value","WmPictureToken","MetadataLibraryObjectState","MetadataObjectState","ExtendedStreamPropertiesObjectState","ExtendedContentDescriptionObjectState","ContentDescriptionObjectState","readCodecEntries","HeaderExtensionObject","StreamPropertiesObject","FilePropertiesObject","IgnoreObjectState","State","HeaderObjectToken","TopLevelHeaderObjectToken","DataType","Util_1","require","Token","GUID_1","AsfUtil_1","ID3v2Token_1","len","get","buf","off","objectId","default","fromBin","BufferType","objectSize","UINT64_LE","numberOfHeaderObjects","UINT32_LE","constructor","header","postProcessTag","tags","name","valueType","data","push","id","fromBuffer","parseAttr","AsfUtil","getParserForAttr","Error","fileId","fileSize","creationDate","dataPacketsCount","playDuration","sendDuration","preroll","flags","broadcast","strtokBITSET","seekable","minimumDataPacketSize","maximumDataPacketSize","maximumBitrate","guid","streamType","decodeMediaType","errorCorrectionType","reserved1","reserved2","readUInt16LE","extensionDataSize","readUInt32LE","CodecListObjectHeader","entryCount","readString","tokenizer","length","readNumber","UINT16_LE","readToken","StringType","replace","codecHeader","entries","i","readCodecEntry","readInformation","Buffer","alloc","readBuffer","type","videoCodec","audioCodec","codecName","description","information","pos","contentDescTags","tagName","end","parseUnicodeAttr","slice","ContentDescriptionObject","attrCount","nameLen","valueLen","ExtendedContentDescriptionObject","startTime","endTime","dataBitrate","readInt32LE","bufferSize","initialBufferFullness","alternateDataBitrate","alternateBufferSize","alternateInitialBufferFullness","maximumObjectSize","reliableFlag","seekableFlag","resendLiveCleanpointsFlag","streamNumber","readInt16LE","streamLanguageId","averageTimePerFrame","streamNameCount","payloadExtensionSystems","streamNames","streamPropertiesObject","ExtendedStreamPropertiesObject","descriptionRecordsCount","dataType","dataLen","MetadataObject","MetadataLibraryObject","fromBase64","base64str","from","buffer","pic","offset","typeId","readUInt8","size","index","readUInt16BE","format","toString","AttachedPictureType"],"mappings":"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","sourcesContent":["// ASF Objects\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WmPictureToken = exports.MetadataLibraryObjectState = exports.MetadataObjectState = exports.ExtendedStreamPropertiesObjectState = exports.ExtendedContentDescriptionObjectState = exports.ContentDescriptionObjectState = exports.readCodecEntries = exports.HeaderExtensionObject = exports.StreamPropertiesObject = exports.FilePropertiesObject = exports.IgnoreObjectState = exports.State = exports.HeaderObjectToken = exports.TopLevelHeaderObjectToken = exports.DataType = void 0;\nconst Util_1 = require(\"../common/Util\");\nconst Token = require(\"token-types\");\nconst GUID_1 = require(\"./GUID\");\nconst AsfUtil_1 = require(\"./AsfUtil\");\nconst ID3v2Token_1 = require(\"../id3v2/ID3v2Token\");\n/**\n * Data Type: Specifies the type of information being stored. The following values are recognized.\n */\nvar DataType;\n(function (DataType) {\n    /**\n     * Unicode string. The data consists of a sequence of Unicode characters.\n     */\n    DataType[DataType[\"UnicodeString\"] = 0] = \"UnicodeString\";\n    /**\n     * BYTE array. The type of data is implementation-specific.\n     */\n    DataType[DataType[\"ByteArray\"] = 1] = \"ByteArray\";\n    /**\n     * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\n     */\n    DataType[DataType[\"Bool\"] = 2] = \"Bool\";\n    /**\n     * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\n     */\n    DataType[DataType[\"DWord\"] = 3] = \"DWord\";\n    /**\n     * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\n     */\n    DataType[DataType[\"QWord\"] = 4] = \"QWord\";\n    /**\n     * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\n     */\n    DataType[DataType[\"Word\"] = 5] = \"Word\";\n})(DataType = exports.DataType || (exports.DataType = {}));\n/**\n * Token for: 3. ASF top-level Header Object\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\n */\nexports.TopLevelHeaderObjectToken = {\n    len: 30,\n    get: (buf, off) => {\n        return {\n            objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n            objectSize: Token.UINT64_LE.get(buf, off + 16),\n            numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24)\n            // Reserved: 2 bytes\n        };\n    }\n};\n/**\n * Token for: 3.1 Header Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\n */\nexports.HeaderObjectToken = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n            objectSize: Token.UINT64_LE.get(buf, off + 16)\n        };\n    }\n};\nclass State {\n    constructor(header) {\n        this.len = header.objectSize - exports.HeaderObjectToken.len;\n    }\n    postProcessTag(tags, name, valueType, data) {\n        if (name === 'WM/Picture') {\n            tags.push({ id: name, value: WmPictureToken.fromBuffer(data) });\n        }\n        else {\n            const parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(valueType);\n            if (!parseAttr) {\n                throw new Error('unexpected value headerType: ' + valueType);\n            }\n            tags.push({ id: name, value: parseAttr(data) });\n        }\n    }\n}\nexports.State = State;\n// ToDo: use ignore type\nclass IgnoreObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        return null;\n    }\n}\nexports.IgnoreObjectState = IgnoreObjectState;\n/**\n * Token for: 3.2: File Properties Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\n */\nclass FilePropertiesObject extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        return {\n            fileId: GUID_1.default.fromBin(buf, off),\n            fileSize: Token.UINT64_LE.get(buf, off + 16),\n            creationDate: Token.UINT64_LE.get(buf, off + 24),\n            dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\n            playDuration: Token.UINT64_LE.get(buf, off + 40),\n            sendDuration: Token.UINT64_LE.get(buf, off + 48),\n            preroll: Token.UINT64_LE.get(buf, off + 56),\n            flags: {\n                broadcast: Util_1.default.strtokBITSET.get(buf, off + 64, 24),\n                seekable: Util_1.default.strtokBITSET.get(buf, off + 64, 25)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\n            maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\n            maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\n        };\n    }\n}\nexports.FilePropertiesObject = FilePropertiesObject;\nFilePropertiesObject.guid = GUID_1.default.FilePropertiesObject;\n/**\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\n */\nclass StreamPropertiesObject extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        return {\n            streamType: GUID_1.default.decodeMediaType(GUID_1.default.fromBin(buf, off)),\n            errorCorrectionType: GUID_1.default.fromBin(buf, off + 8)\n            // ToDo\n        };\n    }\n}\nexports.StreamPropertiesObject = StreamPropertiesObject;\nStreamPropertiesObject.guid = GUID_1.default.StreamPropertiesObject;\n/**\n * 3.4: Header Extension Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\n */\nclass HeaderExtensionObject {\n    constructor() {\n        this.len = 22;\n    }\n    get(buf, off) {\n        return {\n            reserved1: GUID_1.default.fromBin(buf, off),\n            reserved2: buf.readUInt16LE(off + 16),\n            extensionDataSize: buf.readUInt32LE(off + 18)\n        };\n    }\n}\nexports.HeaderExtensionObject = HeaderExtensionObject;\nHeaderExtensionObject.guid = GUID_1.default.HeaderExtensionObject;\n/**\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nconst CodecListObjectHeader = {\n    len: 20,\n    get: (buf, off) => {\n        return {\n            entryCount: buf.readUInt16LE(off + 16)\n        };\n    }\n};\nasync function readString(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf16le'))).replace('\\0', '');\n}\n/**\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nasync function readCodecEntries(tokenizer) {\n    const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\n    const entries = [];\n    for (let i = 0; i < codecHeader.entryCount; ++i) {\n        entries.push(await readCodecEntry(tokenizer));\n    }\n    return entries;\n}\nexports.readCodecEntries = readCodecEntries;\nasync function readInformation(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    const buf = Buffer.alloc(length);\n    await tokenizer.readBuffer(buf);\n    return buf;\n}\n/**\n * Read Codec-Entries\n * @param tokenizer\n */\nasync function readCodecEntry(tokenizer) {\n    const type = await tokenizer.readNumber(Token.UINT16_LE);\n    return {\n        type: {\n            videoCodec: (type & 0x0001) === 0x0001,\n            audioCodec: (type & 0x0002) === 0x0002\n        },\n        codecName: await readString(tokenizer),\n        description: await readString(tokenizer),\n        information: await readInformation(tokenizer)\n    };\n}\n/**\n * 3.10 Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\n */\nclass ContentDescriptionObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        const tags = [];\n        let pos = off + 10;\n        for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n            const length = buf.readUInt16LE(off + i * 2);\n            if (length > 0) {\n                const tagName = ContentDescriptionObjectState.contentDescTags[i];\n                const end = pos + length;\n                tags.push({ id: tagName, value: AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, end)) });\n                pos = end;\n            }\n        }\n        return tags;\n    }\n}\nexports.ContentDescriptionObjectState = ContentDescriptionObjectState;\nContentDescriptionObjectState.guid = GUID_1.default.ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\n/**\n * 3.11 Extended Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\n */\nclass ExtendedContentDescriptionObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        const tags = [];\n        const attrCount = buf.readUInt16LE(off);\n        let pos = off + 2;\n        for (let i = 0; i < attrCount; i += 1) {\n            const nameLen = buf.readUInt16LE(pos);\n            pos += 2;\n            const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n            pos += nameLen;\n            const valueType = buf.readUInt16LE(pos);\n            pos += 2;\n            const valueLen = buf.readUInt16LE(pos);\n            pos += 2;\n            const value = buf.slice(pos, pos + valueLen);\n            pos += valueLen;\n            this.postProcessTag(tags, name, valueType, value);\n        }\n        return tags;\n    }\n}\nexports.ExtendedContentDescriptionObjectState = ExtendedContentDescriptionObjectState;\nExtendedContentDescriptionObjectState.guid = GUID_1.default.ExtendedContentDescriptionObject;\n/**\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\n */\nclass ExtendedStreamPropertiesObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        return {\n            startTime: Token.UINT64_LE.get(buf, off),\n            endTime: Token.UINT64_LE.get(buf, off + 8),\n            dataBitrate: buf.readInt32LE(off + 12),\n            bufferSize: buf.readInt32LE(off + 16),\n            initialBufferFullness: buf.readInt32LE(off + 20),\n            alternateDataBitrate: buf.readInt32LE(off + 24),\n            alternateBufferSize: buf.readInt32LE(off + 28),\n            alternateInitialBufferFullness: buf.readInt32LE(off + 32),\n            maximumObjectSize: buf.readInt32LE(off + 36),\n            flags: {\n                reliableFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 0),\n                seekableFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 1),\n                resendLiveCleanpointsFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 2)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            streamNumber: buf.readInt16LE(off + 42),\n            streamLanguageId: buf.readInt16LE(off + 44),\n            averageTimePerFrame: buf.readInt32LE(off + 52),\n            streamNameCount: buf.readInt32LE(off + 54),\n            payloadExtensionSystems: buf.readInt32LE(off + 56),\n            streamNames: [],\n            streamPropertiesObject: null\n        };\n    }\n}\nexports.ExtendedStreamPropertiesObjectState = ExtendedStreamPropertiesObjectState;\nExtendedStreamPropertiesObjectState.guid = GUID_1.default.ExtendedStreamPropertiesObject;\n/**\n * 4.7  Metadata Object (optional, 0 or 1)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\n */\nclass MetadataObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        const tags = [];\n        const descriptionRecordsCount = buf.readUInt16LE(off);\n        let pos = off + 2;\n        for (let i = 0; i < descriptionRecordsCount; i += 1) {\n            pos += 4;\n            const nameLen = buf.readUInt16LE(pos);\n            pos += 2;\n            const dataType = buf.readUInt16LE(pos);\n            pos += 2;\n            const dataLen = buf.readUInt32LE(pos);\n            pos += 4;\n            const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n            pos += nameLen;\n            const data = buf.slice(pos, pos + dataLen);\n            pos += dataLen;\n            const parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(dataType);\n            if (!parseAttr) {\n                throw new Error('unexpected value headerType: ' + dataType);\n            }\n            this.postProcessTag(tags, name, dataType, data);\n        }\n        return tags;\n    }\n}\nexports.MetadataObjectState = MetadataObjectState;\nMetadataObjectState.guid = GUID_1.default.MetadataObject;\n// 4.8\tMetadata Library Object (optional, 0 or 1)\nclass MetadataLibraryObjectState extends MetadataObjectState {\n    constructor(header) {\n        super(header);\n    }\n}\nexports.MetadataLibraryObjectState = MetadataLibraryObjectState;\nMetadataLibraryObjectState.guid = GUID_1.default.MetadataLibraryObject;\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\n */\nclass WmPictureToken {\n    constructor(len) {\n        this.len = len;\n    }\n    static fromBase64(base64str) {\n        return this.fromBuffer(Buffer.from(base64str, 'base64'));\n    }\n    static fromBuffer(buffer) {\n        const pic = new WmPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    get(buffer, offset) {\n        const typeId = buffer.readUInt8(offset++);\n        const size = buffer.readInt32LE(offset);\n        let index = 5;\n        while (buffer.readUInt16BE(index) !== 0) {\n            index += 2;\n        }\n        const format = buffer.slice(5, index).toString('utf16le');\n        while (buffer.readUInt16BE(index) !== 0) {\n            index += 2;\n        }\n        const description = buffer.slice(5, index).toString('utf16le');\n        return {\n            type: ID3v2Token_1.AttachedPictureType[typeId],\n            format,\n            description,\n            size,\n            data: buffer.slice(index + 4)\n        };\n    }\n}\nexports.WmPictureToken = WmPictureToken;\n//# sourceMappingURL=AsfObject.js.map"]},"metadata":{},"sourceType":"script"}