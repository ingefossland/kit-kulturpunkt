{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction selectValue(value, selected, all) {\n  var at = all.indexOf(value);\n  var updated = selected.slice(0, at).concat(value, selected.slice(at)); // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n\n  return updated.sort(function (a, b) {\n    return all.indexOf(a) > all.indexOf(b);\n  });\n}\n\nfunction deselectValue(value, selected) {\n  return selected.filter(function (v) {\n    return v !== value;\n  });\n}\n\nfunction CheckboxesWidget(props) {\n  var id = props.id,\n      disabled = props.disabled,\n      options = props.options,\n      value = props.value,\n      autofocus = props.autofocus,\n      readonly = props.readonly,\n      _onChange = props.onChange;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled,\n      inline = options.inline;\n  return React.createElement(\"div\", {\n    className: \"checkboxes\",\n    id: id\n  }, enumOptions.map(function (option, index) {\n    var checked = value.indexOf(option.value) !== -1;\n    var itemDisabled = enumDisabled && enumDisabled.indexOf(option.value) != -1;\n    var disabledCls = disabled || itemDisabled || readonly ? \"disabled\" : \"\";\n    var checkbox = React.createElement(\"span\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"\".concat(id, \"_\").concat(index),\n      checked: checked,\n      disabled: disabled || itemDisabled || readonly,\n      autoFocus: autofocus && index === 0,\n      onChange: function onChange(event) {\n        var all = enumOptions.map(function (_ref) {\n          var value = _ref.value;\n          return value;\n        });\n\n        if (event.target.checked) {\n          _onChange(selectValue(option.value, value, all));\n        } else {\n          _onChange(deselectValue(option.value, value));\n        }\n      }\n    }), React.createElement(\"span\", null, option.label));\n    return inline ? React.createElement(\"label\", {\n      key: index,\n      className: \"checkbox-inline \".concat(disabledCls)\n    }, checkbox) : React.createElement(\"div\", {\n      key: index,\n      className: \"checkbox \".concat(disabledCls)\n    }, React.createElement(\"label\", null, checkbox));\n  }));\n}\n\nCheckboxesWidget.defaultProps = {\n  autofocus: false,\n  options: {\n    inline: false\n  }\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  CheckboxesWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    options: PropTypes.shape({\n      enumOptions: PropTypes.array,\n      inline: PropTypes.bool\n    }).isRequired,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    readonly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    multiple: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func\n  };\n}\n\nexport default CheckboxesWidget;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@rjsf/core/dist/es/components/widgets/CheckboxesWidget.js"],"names":["React","PropTypes","selectValue","value","selected","all","at","indexOf","updated","slice","concat","sort","a","b","deselectValue","filter","v","CheckboxesWidget","props","id","disabled","options","autofocus","readonly","_onChange","onChange","enumOptions","enumDisabled","inline","createElement","className","map","option","index","checked","itemDisabled","disabledCls","checkbox","type","autoFocus","event","_ref","target","label","key","defaultProps","process","env","NODE_ENV","propTypes","schema","object","isRequired","string","shape","array","bool","any","required","multiple","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction selectValue(value, selected, all) {\n  var at = all.indexOf(value);\n  var updated = selected.slice(0, at).concat(value, selected.slice(at)); // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n\n  return updated.sort(function (a, b) {\n    return all.indexOf(a) > all.indexOf(b);\n  });\n}\n\nfunction deselectValue(value, selected) {\n  return selected.filter(function (v) {\n    return v !== value;\n  });\n}\n\nfunction CheckboxesWidget(props) {\n  var id = props.id,\n      disabled = props.disabled,\n      options = props.options,\n      value = props.value,\n      autofocus = props.autofocus,\n      readonly = props.readonly,\n      _onChange = props.onChange;\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled,\n      inline = options.inline;\n  return React.createElement(\"div\", {\n    className: \"checkboxes\",\n    id: id\n  }, enumOptions.map(function (option, index) {\n    var checked = value.indexOf(option.value) !== -1;\n    var itemDisabled = enumDisabled && enumDisabled.indexOf(option.value) != -1;\n    var disabledCls = disabled || itemDisabled || readonly ? \"disabled\" : \"\";\n    var checkbox = React.createElement(\"span\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"\".concat(id, \"_\").concat(index),\n      checked: checked,\n      disabled: disabled || itemDisabled || readonly,\n      autoFocus: autofocus && index === 0,\n      onChange: function onChange(event) {\n        var all = enumOptions.map(function (_ref) {\n          var value = _ref.value;\n          return value;\n        });\n\n        if (event.target.checked) {\n          _onChange(selectValue(option.value, value, all));\n        } else {\n          _onChange(deselectValue(option.value, value));\n        }\n      }\n    }), React.createElement(\"span\", null, option.label));\n    return inline ? React.createElement(\"label\", {\n      key: index,\n      className: \"checkbox-inline \".concat(disabledCls)\n    }, checkbox) : React.createElement(\"div\", {\n      key: index,\n      className: \"checkbox \".concat(disabledCls)\n    }, React.createElement(\"label\", null, checkbox));\n  }));\n}\n\nCheckboxesWidget.defaultProps = {\n  autofocus: false,\n  options: {\n    inline: false\n  }\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  CheckboxesWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    options: PropTypes.shape({\n      enumOptions: PropTypes.array,\n      inline: PropTypes.bool\n    }).isRequired,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    readonly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    multiple: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func\n  };\n}\n\nexport default CheckboxesWidget;"]},"metadata":{},"sourceType":"module"}