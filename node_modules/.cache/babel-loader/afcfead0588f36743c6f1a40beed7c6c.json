{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/KpLink/KpLinkContentField.js\";\nimport React, { Component } from 'react';\nimport KpLinkContentLayout from \"./KpLinkContentLayout\";\nimport KpLinkMediaLayout from \"./KpLinkMediaLayout\";\nimport KpLinkReferenceLayout from \"./KpLinkReferenceLayout\";\nimport { utils } from \"@rjsf/core\";\nconst {\n  getUiOptions,\n  getDefaultFormState\n} = utils;\n\nconst KpLinKContentField = props => {\n  const {\n    formData,\n    formContext,\n    schema,\n    uiSchema,\n    registry\n  } = props;\n  const mediaId = formData && formData.mediaId;\n  const media = formData && formData.media;\n  const mediaType = media && media.mediaType;\n  const referenceId = formData && formData.referenceId;\n  const reference = formData && formData.reference;\n  const referenceTitle = reference && reference.title;\n  const referenceDescription = reference && reference.description;\n  /*\n  const imageUrl = media.imageUrl || reference.imageUrl;\n  const imageFocalpoint = formData && formData.imageFocalpoint\n  const imageCropdata = formData && formData.imageCropdata\n  const imageFilters = formData && formData.imageFilters\n  */\n\n  const backgroundColor = formData && formData.backgroundColor;\n  const color = formData && formData.color;\n\n  const _onMediaChange = ({\n    mediaId,\n    media\n  }) => {\n    console.log('MEDIA change', media);\n    const newFormData = getDefaultFormState(schema, { ...formData,\n      mediaId: mediaId,\n      media: media\n    }, registry.definitions);\n    props.onChange && props.onChange(newFormData);\n  };\n\n  const _onMediaDialog = props => {\n    formContext.onDialog && formContext.onDialog({ ...props,\n      schema: {\n        type: \"object\",\n        properties: {\n          mediaId: schema.properties.mediaId,\n          media: schema.properties.media\n        }\n      },\n      formData: {\n        mediaId: mediaId,\n        media: media\n      },\n      onChange: _onMediaChange\n    });\n  };\n\n  const _onReferenceChange = ({\n    referenceId,\n    reference\n  }) => {\n    const newFormData = getDefaultFormState(schema, { ...formData,\n      referenceId: referenceId,\n      reference: reference\n    }, registry.definitions);\n    props.onChange && props.onChange(newFormData);\n  };\n\n  const _onReferenceDialog = props => {\n    formContext.onDialog && formContext.onDialog({ ...props,\n      schema: {\n        type: \"object\",\n        properties: {\n          referenceId: schema.properties.referenceId,\n          reference: schema.properties.reference\n        }\n      },\n      onChange: _onReferenceChange\n    });\n  };\n\n  const newUiSchema = {\n    \"ui:layout\": KpLinkContentLayout,\n    \"ui:fieldset\": [\"linkMedia\", \"linkContent\", \"linkReference\"],\n    \"ui:options\": {\n      \"spacing\": 2,\n      \"grid\": true\n    },\n    \"linkMedia\": {\n      \"ui:layout\": KpLinkMediaLayout,\n      \"ui:fieldset\": [\"mediaId\", \"media\", \"referenceId\", \"reference\"],\n      \"ui:xs\": 4,\n      \"ui:mediaId\": mediaId,\n      \"ui:media\": media,\n      \"ui:referenceId\": referenceId,\n      \"ui:reference\": reference,\n      \"ui:onDialog\": _onMediaDialog,\n      \"ui:onChange\": _onMediaChange\n    },\n    \"linkContent\": {\n      \"ui:xs\": 8,\n      \"ui:spacing\": 2,\n      \"ui:fieldset\": [\"runningHead\", \"title\", \"description\"],\n      \"runningHead\": {\n        \"ui:title\": \"Stikktittel\"\n      },\n      \"title\": {\n        \"ui:title\": \"Tittel\",\n        \"ui:placeholder\": referenceTitle\n      },\n      \"description\": {\n        \"ui:title\": \"Beskrivelse\",\n        \"ui:placeholder\": referenceDescription,\n        \"ui:widget\": \"textarea\"\n      }\n    },\n    \"linkReference\": {\n      \"ui:layout\": KpLinkReferenceLayout,\n      \"ui:xs\": 12,\n      \"ui:fieldset\": [\"referenceId\", \"reference\"],\n      \"ui:referenceId\": referenceId,\n      \"ui:reference\": reference,\n      \"ui:dialog\": {\n        \"query\": {\n          \"models\": \"documents\",\n          \"documentType\": [\"page*\", \"article\"]\n        }\n      },\n      \"ui:onDialog\": _onReferenceDialog,\n      \"ui:onChange\": _onReferenceChange\n    }\n  };\n  const {\n    ObjectField\n  } = registry.fields;\n  return /*#__PURE__*/React.createElement(ObjectField, Object.assign({}, props, {\n    uiSchema: newUiSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 12\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, JSON.stringify(uiSchema));\n};\n\nexport default KpLinKContentField;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/KpLink/KpLinkContentField.js"],"names":["React","Component","KpLinkContentLayout","KpLinkMediaLayout","KpLinkReferenceLayout","utils","getUiOptions","getDefaultFormState","KpLinKContentField","props","formData","formContext","schema","uiSchema","registry","mediaId","media","mediaType","referenceId","reference","referenceTitle","title","referenceDescription","description","backgroundColor","color","_onMediaChange","console","log","newFormData","definitions","onChange","_onMediaDialog","onDialog","type","properties","_onReferenceChange","_onReferenceDialog","newUiSchema","ObjectField","fields","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport KpLinkContentLayout from \"./KpLinkContentLayout\"\nimport KpLinkMediaLayout from \"./KpLinkMediaLayout\"\nimport KpLinkReferenceLayout from \"./KpLinkReferenceLayout\"\n\nimport { utils } from \"@rjsf/core\"\nconst { getUiOptions, getDefaultFormState } = utils\n\nconst KpLinKContentField = (props) => {\n\n    const { formData, formContext, schema, uiSchema, registry} = props\n\n    const mediaId = formData && formData.mediaId\n    const media = formData && formData.media\n    const mediaType = media && media.mediaType\n\n    const referenceId = formData && formData.referenceId\n    const reference = formData && formData.reference\n    const referenceTitle = reference && reference.title\n    const referenceDescription = reference && reference.description\n\n    /*\n    const imageUrl = media.imageUrl || reference.imageUrl;\n    const imageFocalpoint = formData && formData.imageFocalpoint\n    const imageCropdata = formData && formData.imageCropdata\n    const imageFilters = formData && formData.imageFilters\n    */\n\n    const backgroundColor = formData && formData.backgroundColor;\n    const color = formData && formData.color;\n\n    const _onMediaChange = ({mediaId, media}) => {\n\n        console.log('MEDIA change', media)\n\n        const newFormData = getDefaultFormState(schema, {\n            ...formData,\n            mediaId: mediaId,\n            media: media\n        }, registry.definitions);\n\n        props.onChange && props.onChange(newFormData)\n\n    }\n\n    const _onMediaDialog = (props) => {\n\n        formContext.onDialog && formContext.onDialog({\n            ...props,\n            schema: {\n                type: \"object\",\n                properties: {\n                    mediaId: schema.properties.mediaId,\n                    media: schema.properties.media\n                }\n            },\n            formData: {\n                mediaId: mediaId,\n                media: media\n            },\n            onChange: _onMediaChange\n        })\n\n    }\n\n    const _onReferenceChange = ({referenceId, reference}) => {\n\n        const newFormData = getDefaultFormState(schema, {\n            ...formData,\n            referenceId: referenceId,\n            reference: reference\n        }, registry.definitions);\n\n        props.onChange && props.onChange(newFormData)\n\n    }\n\n    const _onReferenceDialog = (props) => {\n\n        formContext.onDialog && formContext.onDialog({\n            ...props,\n            schema: {\n                type: \"object\",\n                properties: {\n                    referenceId: schema.properties.referenceId,\n                    reference: schema.properties.reference\n                }\n            },\n            onChange: _onReferenceChange\n        })\n\n    }\n    \n    const newUiSchema = {\n        \"ui:layout\": KpLinkContentLayout,\n        \"ui:fieldset\": [\n            \"linkMedia\",\n            \"linkContent\",\n            \"linkReference\",\n        ],\n        \"ui:options\": {\n            \"spacing\": 2,\n            \"grid\": true,\n        },\n        \"linkMedia\": {\n            \"ui:layout\": KpLinkMediaLayout,\n            \"ui:fieldset\": [\n                \"mediaId\",\n                \"media\",\n                \"referenceId\",\n                \"reference\"\n            ],\n            \"ui:xs\": 4,\n            \"ui:mediaId\": mediaId,\n            \"ui:media\": media,\n            \"ui:referenceId\": referenceId,\n            \"ui:reference\": reference,\n            \"ui:onDialog\": _onMediaDialog,\n            \"ui:onChange\": _onMediaChange,\n        },\n        \"linkContent\": {\n            \"ui:xs\": 8,\n            \"ui:spacing\": 2,\n            \"ui:fieldset\": [\n                \"runningHead\",\n                \"title\",\n                \"description\",\n            ],\n            \"runningHead\": {\n                \"ui:title\": \"Stikktittel\"\n            },\n            \"title\": {\n                \"ui:title\": \"Tittel\",\n                \"ui:placeholder\": referenceTitle\n            },\n            \"description\": {\n                \"ui:title\": \"Beskrivelse\",\n                \"ui:placeholder\": referenceDescription,\n                \"ui:widget\": \"textarea\"\n            },\n        },\n        \"linkReference\": {\n            \"ui:layout\": KpLinkReferenceLayout,\n            \"ui:xs\": 12,\n            \"ui:fieldset\": [\n                \"referenceId\",\n                \"reference\"\n            ],\n            \"ui:referenceId\": referenceId,\n            \"ui:reference\": reference,\n            \"ui:dialog\": {\n                \"query\": {\n                    \"models\": \"documents\",\n                    \"documentType\": [\"page*\",\"article\"]\n                }\n            },\n            \"ui:onDialog\": _onReferenceDialog,\n            \"ui:onChange\": _onReferenceChange,\n        },\n    }\n\n    const { ObjectField } = registry.fields\n\n\n    return <ObjectField {...props} uiSchema={newUiSchema} />\n\n    return (\n        <p>{JSON.stringify(uiSchema)}</p>\n    )\n\n}\n\nexport default KpLinKContentField"]},"metadata":{},"sourceType":"module"}