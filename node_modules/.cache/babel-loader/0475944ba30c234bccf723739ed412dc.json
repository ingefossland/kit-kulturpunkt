{"ast":null,"code":"import React from 'react';\nimport PropTypes from \"prop-types\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      backgroundColor: function backgroundColor(props) {\n        return props.backgroundColor;\n      },\n      color: \"black\",\n      maxWidth: \"320px\",\n      zIndex: 2\n    },\n    arrow: {\n      position: \"absolute\",\n      zIndex: 1,\n      fontSize: \"7px\",\n      width: \"3em\",\n      height: \"3em\",\n      \"[x-placement*=top] &\": {\n        bottom: 0,\n        width: 0,\n        height: 0,\n        borderLeft: \"1em solid transparent\",\n        borderRight: \"1em solid transparent\",\n        borderTop: \"1em solid\",\n        borderTopColor: function borderTopColor(props) {\n          return props.arrowColor;\n        },\n        marginBottom: \"-1em\"\n      },\n      \"[x-placement*=bottom] &\": {\n        width: 0,\n        height: 0,\n        borderLeft: \"1em solid transparent\",\n        borderRight: \"1em solid transparent\",\n        borderBottom: \"1em solid\",\n        borderBottomColor: function borderBottomColor(props) {\n          return props.arrowColor;\n        },\n        marginTop: \"-1em\"\n      },\n      \"[x-placement*=right] &\": {\n        left: 0,\n        width: 0,\n        height: 0,\n        borderTop: \"1em solid transparent\",\n        borderBottom: \"1em solid transparent\",\n        borderRight: \"1em solid\",\n        borderRightColor: function borderRightColor(props) {\n          return props.arrowColor;\n        },\n        marginLeft: \"-1em\"\n      },\n      \"[x-placement*=left] &\": {\n        right: 0,\n        width: 0,\n        height: 0,\n        borderTop: \"1em solid transparent\",\n        borderBottom: \"1em solid transparent\",\n        borderLeft: \"1em solid\",\n        borderLeftColor: function borderLeftColor(props) {\n          return props.arrowColor;\n        },\n        marginRight: \"-0.9em\"\n      }\n    }\n  };\n});\n/** Dropdown component with arrow */\n\nvar Dropdown = function Dropdown(_ref) {\n  var anchorEl = _ref.anchorEl,\n      backgroundColor = _ref.backgroundColor,\n      _ref$expanded = _ref.expanded,\n      expanded = _ref$expanded === void 0 ? false : _ref$expanded,\n      elevation = _ref.elevation,\n      onClickAway = _ref.onClickAway,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? \"bottom-end\" : _ref$placement,\n      children = _ref.children;\n  var classes = useStyles({\n    backgroundColor: backgroundColor,\n    arrowColor: backgroundColor\n  });\n\n  if (!onClickAway) {\n    onClickAway = function onClickAway() {\n      return null;\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Popper, {\n    open: expanded,\n    style: {\n      zIndex: 2000\n    },\n    role: undefined,\n    transition: true,\n    anchorEl: anchorEl,\n    placement: placement,\n    modifiers: {\n      arrow: {\n        enabled: true,\n        element: \"[data-popper-arrow]\"\n      }\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.arrow,\n    \"data-popper-arrow\": true\n  }), /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: onClickAway\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: elevation,\n    square: true\n  }, children)));\n};\n\nDropdown.defaultProps = {\n  expanded: false,\n  elevation: 24,\n  backgroundColor: \"white\"\n};\nDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** A HTML element, referenceObject, or a function that returns either. It's used to set the position of the popper. The return value will passed as the reference object of the Popper instance. */\n  anchorEl: PropTypes.any,\n\n  /** Whether the dropdown is expanded or not */\n  expanded: PropTypes.bool,\n\n  /** Placement of the dropdown */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /** Elevation */\n  elevation: PropTypes.number,\n\n  /** Children (or content) of the dropdown */\n  children: PropTypes.node,\n\n  /** onClickAway */\n  onClickAway: PropTypes.func,\n\n  /** BackgroundColor of expanded dropdown */\n  backgroundColor: PropTypes.string\n} : {};\nexport default Dropdown;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/node_modules/@kit-ui/core/es/Dropdown/Dropdown.js"],"names":["React","PropTypes","ClickAwayListener","Popper","Paper","makeStyles","useStyles","theme","paper","backgroundColor","props","color","maxWidth","zIndex","arrow","position","fontSize","width","height","bottom","borderLeft","borderRight","borderTop","borderTopColor","arrowColor","marginBottom","borderBottom","borderBottomColor","marginTop","left","borderRightColor","marginLeft","right","borderLeftColor","marginRight","Dropdown","_ref","anchorEl","_ref$expanded","expanded","elevation","onClickAway","_ref$placement","placement","children","classes","createElement","open","style","role","undefined","transition","modifiers","enabled","element","className","square","defaultProps","propTypes","process","env","NODE_ENV","any","bool","oneOf","number","node","func","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      backgroundColor: function backgroundColor(props) {\n        return props.backgroundColor;\n      },\n      color: \"black\",\n      maxWidth: \"320px\",\n      zIndex: 2\n    },\n    arrow: {\n      position: \"absolute\",\n      zIndex: 1,\n      fontSize: \"7px\",\n      width: \"3em\",\n      height: \"3em\",\n      \"[x-placement*=top] &\": {\n        bottom: 0,\n        width: 0,\n        height: 0,\n        borderLeft: \"1em solid transparent\",\n        borderRight: \"1em solid transparent\",\n        borderTop: \"1em solid\",\n        borderTopColor: function borderTopColor(props) {\n          return props.arrowColor;\n        },\n        marginBottom: \"-1em\"\n      },\n      \"[x-placement*=bottom] &\": {\n        width: 0,\n        height: 0,\n        borderLeft: \"1em solid transparent\",\n        borderRight: \"1em solid transparent\",\n        borderBottom: \"1em solid\",\n        borderBottomColor: function borderBottomColor(props) {\n          return props.arrowColor;\n        },\n        marginTop: \"-1em\"\n      },\n      \"[x-placement*=right] &\": {\n        left: 0,\n        width: 0,\n        height: 0,\n        borderTop: \"1em solid transparent\",\n        borderBottom: \"1em solid transparent\",\n        borderRight: \"1em solid\",\n        borderRightColor: function borderRightColor(props) {\n          return props.arrowColor;\n        },\n        marginLeft: \"-1em\"\n      },\n      \"[x-placement*=left] &\": {\n        right: 0,\n        width: 0,\n        height: 0,\n        borderTop: \"1em solid transparent\",\n        borderBottom: \"1em solid transparent\",\n        borderLeft: \"1em solid\",\n        borderLeftColor: function borderLeftColor(props) {\n          return props.arrowColor;\n        },\n        marginRight: \"-0.9em\"\n      }\n    }\n  };\n});\n/** Dropdown component with arrow */\n\nvar Dropdown = function Dropdown(_ref) {\n  var anchorEl = _ref.anchorEl,\n      backgroundColor = _ref.backgroundColor,\n      _ref$expanded = _ref.expanded,\n      expanded = _ref$expanded === void 0 ? false : _ref$expanded,\n      elevation = _ref.elevation,\n      onClickAway = _ref.onClickAway,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? \"bottom-end\" : _ref$placement,\n      children = _ref.children;\n  var classes = useStyles({\n    backgroundColor: backgroundColor,\n    arrowColor: backgroundColor\n  });\n\n  if (!onClickAway) {\n    onClickAway = function onClickAway() {\n      return null;\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Popper, {\n    open: expanded,\n    style: {\n      zIndex: 2000\n    },\n    role: undefined,\n    transition: true,\n    anchorEl: anchorEl,\n    placement: placement,\n    modifiers: {\n      arrow: {\n        enabled: true,\n        element: \"[data-popper-arrow]\"\n      }\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.arrow,\n    \"data-popper-arrow\": true\n  }), /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: onClickAway\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: elevation,\n    square: true\n  }, children)));\n};\n\nDropdown.defaultProps = {\n  expanded: false,\n  elevation: 24,\n  backgroundColor: \"white\"\n};\nDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** A HTML element, referenceObject, or a function that returns either. It's used to set the position of the popper. The return value will passed as the reference object of the Popper instance. */\n  anchorEl: PropTypes.any,\n\n  /** Whether the dropdown is expanded or not */\n  expanded: PropTypes.bool,\n\n  /** Placement of the dropdown */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /** Elevation */\n  elevation: PropTypes.number,\n\n  /** Children (or content) of the dropdown */\n  children: PropTypes.node,\n\n  /** onClickAway */\n  onClickAway: PropTypes.func,\n\n  /** BackgroundColor of expanded dropdown */\n  backgroundColor: PropTypes.string\n} : {};\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}