{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Finder/ResultsLoader.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nconst useStyles = makeStyles(theme => ({\n  loader: {\n    display: \"flex\",\n    flexDirecton: \"column\",\n    //        alignItems: \"baseline\",\n    color: theme.palette.text.secondary,\n    margin: theme.spacing(2)\n  },\n  title: {\n    fontFamily: \"Akkurat, sans-serif\",\n    fontSize: \"14px\",\n    color: theme.palette.text.primary\n  }\n}));\n\nconst ResultsLoader = ({\n  query = {},\n  isLoading,\n  count = 0,\n  children\n}) => {\n  const {\n    t,\n    i18n\n  } = useTranslation('search');\n  const classes = useStyles();\n  let title;\n  const q = query.q && query.q.replace('*', '');\n\n  if (isLoading && !count) {\n    title = t('Searching, please wait', {\n      q\n    }) + \"...\";\n  } else if (!count) {\n    title = t('No hits');\n  }\n\n  if (title) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.loader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, title));\n  }\n\n  return children;\n};\n\nexport default ResultsLoader;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Finder/ResultsLoader.js"],"names":["React","Typography","makeStyles","useTranslation","useStyles","theme","loader","display","flexDirecton","color","palette","text","secondary","margin","spacing","title","fontFamily","fontSize","primary","ResultsLoader","query","isLoading","count","children","t","i18n","classes","q","replace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACnCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,YAAY,EAAE,QAFV;AAGZ;AACQC,IAAAA,KAAK,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBC,SAJtB;AAKJC,IAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AALJ,GAD2B;AAQnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,qBADT;AAEHC,IAAAA,QAAQ,EAAE,MAFP;AAGHR,IAAAA,KAAK,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBO;AAHvB;AAR4B,CAAL,CAAN,CAA5B;;AAeA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,KAAK,GAAG,EAAT;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,KAAK,GAAG,CAAhC;AAAmCC,EAAAA;AAAnC,CAAD,KAAkD;AACpE,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAActB,cAAc,CAAC,QAAD,CAAlC;AAEA,QAAMuB,OAAO,GAAGtB,SAAS,EAAzB;AAEA,MAAIW,KAAJ;AAEA,QAAMY,CAAC,GAAGP,KAAK,CAACO,CAAN,IAAWP,KAAK,CAACO,CAAN,CAAQC,OAAR,CAAgB,GAAhB,EAAqB,EAArB,CAArB;;AAEA,MAAIP,SAAS,IAAI,CAACC,KAAlB,EAAyB;AACrBP,IAAAA,KAAK,GAAGS,CAAC,CAAC,wBAAD,EAA2B;AAACG,MAAAA;AAAD,KAA3B,CAAD,GAAmC,KAA3C;AACH,GAFD,MAEO,IAAI,CAACL,KAAL,EAAY;AACfP,IAAAA,KAAK,GAAGS,CAAC,CAAC,SAAD,CAAT;AACH;;AAED,MAAIT,KAAJ,EAAW;AACP,wBACI;AAAK,MAAA,SAAS,EAAEW,OAAO,CAACpB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEoB,OAAO,CAACX,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCA,KAAvC,CADJ,CADJ;AAKH;;AAED,SAAOQ,QAAP;AAEH,CAzBD;;AA2BA,eAAeJ,aAAf","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(theme => ({\n    loader: {\n        display: \"flex\",\n        flexDirecton: \"column\",\n//        alignItems: \"baseline\",\n        color: theme.palette.text.secondary,\n        margin: theme.spacing(2),\n    },\n    title: {\n        fontFamily: \"Akkurat, sans-serif\",\n        fontSize: \"14px\",\n        color: theme.palette.text.primary\n    }\n}));\n\nconst ResultsLoader = ({query = {}, isLoading, count = 0, children}) => {\n    const { t, i18n } = useTranslation('search');\n\n    const classes = useStyles()\n\n    let title;\n\n    const q = query.q && query.q.replace('*', '')\n\n    if (isLoading && !count) {\n        title = t('Searching, please wait', {q}) + \"...\";\n    } else if (!count) {\n        title = t('No hits')\n    }\n\n    if (title) {\n        return (\n            <div className={classes.loader}>\n                <Typography className={classes.title}>{title}</Typography>\n            </div>\n        )\n    }\n\n    return children\n\n}\n\nexport default ResultsLoader"]},"metadata":{},"sourceType":"module"}