{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nimport * as types from \"../../types\";\nimport { getWidget, getUiOptions, optionsList, getDefaultRegistry } from \"../../utils\";\n\nfunction BooleanField(props) {\n  var schema = props.schema,\n      name = props.name,\n      uiSchema = props.uiSchema,\n      idSchema = props.idSchema,\n      formData = props.formData,\n      _props$registry = props.registry,\n      registry = _props$registry === void 0 ? getDefaultRegistry() : _props$registry,\n      required = props.required,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      autofocus = props.autofocus,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rawErrors = props.rawErrors;\n  var title = schema.title;\n  var widgets = registry.widgets,\n      formContext = registry.formContext,\n      fields = registry.fields;\n\n  var _getUiOptions = getUiOptions(uiSchema),\n      _getUiOptions$widget = _getUiOptions.widget,\n      widget = _getUiOptions$widget === void 0 ? \"checkbox\" : _getUiOptions$widget,\n      options = _objectWithoutProperties(_getUiOptions, [\"widget\"]);\n\n  var Widget = getWidget(schema, widget, widgets);\n  var enumOptions;\n\n  if (_Array$isArray(schema.oneOf)) {\n    enumOptions = optionsList({\n      oneOf: schema.oneOf.map(function (option) {\n        return _objectSpread({}, option, {\n          title: option.title || (option[\"const\"] === true ? \"Yes\" : \"No\")\n        });\n      })\n    });\n  } else {\n    enumOptions = optionsList({\n      \"enum\": schema[\"enum\"] || [true, false],\n      enumNames: schema.enumNames || (schema[\"enum\"] && schema[\"enum\"][0] === false ? [\"No\", \"Yes\"] : [\"Yes\", \"No\"])\n    });\n  }\n\n  return React.createElement(Widget, {\n    options: _objectSpread({}, options, {\n      enumOptions: enumOptions\n    }),\n    schema: schema,\n    id: idSchema && idSchema.$id,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    label: title === undefined ? name : title,\n    value: formData,\n    required: required,\n    disabled: disabled,\n    readonly: readonly,\n    registry: registry,\n    formContext: formContext,\n    autofocus: autofocus,\n    rawErrors: rawErrors,\n    DescriptionField: fields.DescriptionField\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  BooleanField.propTypes = types.fieldProps;\n}\n\nBooleanField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false\n};\nexport default BooleanField;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@rjsf/core/dist/es/components/fields/BooleanField.js"],"names":["_objectSpread","_Array$isArray","_objectWithoutProperties","React","types","getWidget","getUiOptions","optionsList","getDefaultRegistry","BooleanField","props","schema","name","uiSchema","idSchema","formData","_props$registry","registry","required","disabled","readonly","autofocus","onChange","onFocus","onBlur","rawErrors","title","widgets","formContext","fields","_getUiOptions","_getUiOptions$widget","widget","options","Widget","enumOptions","oneOf","map","option","enumNames","createElement","id","$id","label","undefined","value","DescriptionField","process","env","NODE_ENV","propTypes","fieldProps","defaultProps"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nimport * as types from \"../../types\";\nimport { getWidget, getUiOptions, optionsList, getDefaultRegistry } from \"../../utils\";\n\nfunction BooleanField(props) {\n  var schema = props.schema,\n      name = props.name,\n      uiSchema = props.uiSchema,\n      idSchema = props.idSchema,\n      formData = props.formData,\n      _props$registry = props.registry,\n      registry = _props$registry === void 0 ? getDefaultRegistry() : _props$registry,\n      required = props.required,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      autofocus = props.autofocus,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rawErrors = props.rawErrors;\n  var title = schema.title;\n  var widgets = registry.widgets,\n      formContext = registry.formContext,\n      fields = registry.fields;\n\n  var _getUiOptions = getUiOptions(uiSchema),\n      _getUiOptions$widget = _getUiOptions.widget,\n      widget = _getUiOptions$widget === void 0 ? \"checkbox\" : _getUiOptions$widget,\n      options = _objectWithoutProperties(_getUiOptions, [\"widget\"]);\n\n  var Widget = getWidget(schema, widget, widgets);\n  var enumOptions;\n\n  if (_Array$isArray(schema.oneOf)) {\n    enumOptions = optionsList({\n      oneOf: schema.oneOf.map(function (option) {\n        return _objectSpread({}, option, {\n          title: option.title || (option[\"const\"] === true ? \"Yes\" : \"No\")\n        });\n      })\n    });\n  } else {\n    enumOptions = optionsList({\n      \"enum\": schema[\"enum\"] || [true, false],\n      enumNames: schema.enumNames || (schema[\"enum\"] && schema[\"enum\"][0] === false ? [\"No\", \"Yes\"] : [\"Yes\", \"No\"])\n    });\n  }\n\n  return React.createElement(Widget, {\n    options: _objectSpread({}, options, {\n      enumOptions: enumOptions\n    }),\n    schema: schema,\n    id: idSchema && idSchema.$id,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    label: title === undefined ? name : title,\n    value: formData,\n    required: required,\n    disabled: disabled,\n    readonly: readonly,\n    registry: registry,\n    formContext: formContext,\n    autofocus: autofocus,\n    rawErrors: rawErrors,\n    DescriptionField: fields.DescriptionField\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  BooleanField.propTypes = types.fieldProps;\n}\n\nBooleanField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false\n};\nexport default BooleanField;"]},"metadata":{},"sourceType":"module"}