{"ast":null,"code":"import React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"@kit-ui/core\";\nimport { getUiOptions, getDefaultFormState } from \"../utils\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {},\n    icon: {\n      fontSize: \".75em\",\n      width: \"1em\",\n      height: \"1em\",\n      border: \"1px solid\"\n    }\n  };\n});\n\nvar LocalizedStringSettings = function LocalizedStringSettings(props) {\n  var schema = props.schema,\n      uiSchema = props.uiSchema,\n      formData = props.formData,\n      formContext = props.formContext;\n  var uiOptions = getUiOptions(uiSchema);\n  var languages = formContext.languages || [\"en\"];\n  var defaultLocale = formContext.defaultLocale || languages[0];\n  var currentLocale = formContext.currentLocale || defaultLocale;\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var anchorRef = useRef(null);\n\n  var _onToggle = function _onToggle(event) {\n    setExpanded(function (prevExpanded) {\n      return !prevExpanded;\n    });\n  };\n\n  var _onCollapse = function _onCollapse(event) {\n    setExpanded(false);\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.button,\n    onClick: _onToggle,\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: classes.icon\n  }, currentLocale)), /*#__PURE__*/React.createElement(Dropdown, {\n    expanded: expanded,\n    anchorEl: anchorRef.current,\n    onClickAway: _onCollapse\n  }, JSON.stringify(formData)));\n};\n\nLocalizedStringSettings.defaultProps = {};\nLocalizedStringSettings.propTypes = process.env.NODE_ENV !== \"production\" ? {} : {};\nexport default LocalizedStringSettings;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/es/LocalizedString/LocalizedStringSettings.js"],"names":["React","forwardRef","useState","useEffect","useRef","PropTypes","Dropdown","getUiOptions","getDefaultFormState","IconButton","makeStyles","useStyles","theme","button","icon","fontSize","width","height","border","LocalizedStringSettings","props","schema","uiSchema","formData","formContext","uiOptions","languages","defaultLocale","currentLocale","_useState","expanded","setExpanded","anchorRef","_onToggle","event","prevExpanded","_onCollapse","classes","createElement","Fragment","className","onClick","ref","anchorEl","current","onClickAway","JSON","stringify","defaultProps","propTypes","process","env","NODE_ENV"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,UAAlD;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,IAAIC,SAAS,GAAGD,UAAU,CAAC,UAAUE,KAAV,EAAiB;AAC1C,SAAO;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,OADN;AAEJC,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,MAAM,EAAE,KAHJ;AAIJC,MAAAA,MAAM,EAAE;AAJJ;AAFD,GAAP;AASD,CAVyB,CAA1B;;AAYA,IAAIC,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AACpE,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAAA,MAEIC,QAAQ,GAAGH,KAAK,CAACG,QAFrB;AAAA,MAGIC,WAAW,GAAGJ,KAAK,CAACI,WAHxB;AAIA,MAAIC,SAAS,GAAGlB,YAAY,CAACe,QAAD,CAA5B;AACA,MAAII,SAAS,GAAGF,WAAW,CAACE,SAAZ,IAAyB,CAAC,IAAD,CAAzC;AACA,MAAIC,aAAa,GAAGH,WAAW,CAACG,aAAZ,IAA6BD,SAAS,CAAC,CAAD,CAA1D;AACA,MAAIE,aAAa,GAAGJ,WAAW,CAACI,aAAZ,IAA6BD,aAAjD;;AAEA,MAAIE,SAAS,GAAG3B,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACI4B,QAAQ,GAAGD,SAAS,CAAC,CAAD,CADxB;AAAA,MAEIE,WAAW,GAAGF,SAAS,CAAC,CAAD,CAF3B;;AAIA,MAAIG,SAAS,GAAG5B,MAAM,CAAC,IAAD,CAAtB;;AAEA,MAAI6B,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxCH,IAAAA,WAAW,CAAC,UAAUI,YAAV,EAAwB;AAClC,aAAO,CAACA,YAAR;AACD,KAFU,CAAX;AAGD,GAJD;;AAMA,MAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBF,KAArB,EAA4B;AAC5CH,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,MAAIM,OAAO,GAAG1B,SAAS,EAAvB;AACA,SAAO,aAAaX,KAAK,CAACsC,aAAN,CAAoBtC,KAAK,CAACuC,QAA1B,EAAoC,IAApC,EAA0C,aAAavC,KAAK,CAACsC,aAAN,CAAoB7B,UAApB,EAAgC;AACzG+B,IAAAA,SAAS,EAAEH,OAAO,CAACxB,MADsF;AAEzG4B,IAAAA,OAAO,EAAER,SAFgG;AAGzGS,IAAAA,GAAG,EAAEV;AAHoG,GAAhC,EAIxE,aAAahC,KAAK,CAACsC,aAAN,CAAoB,GAApB,EAAyB;AACvCE,IAAAA,SAAS,EAAEH,OAAO,CAACvB;AADoB,GAAzB,EAEbc,aAFa,CAJ2D,CAAvD,EAMA,aAAa5B,KAAK,CAACsC,aAAN,CAAoBhC,QAApB,EAA8B;AAC7DwB,IAAAA,QAAQ,EAAEA,QADmD;AAE7Da,IAAAA,QAAQ,EAAEX,SAAS,CAACY,OAFyC;AAG7DC,IAAAA,WAAW,EAAET;AAHgD,GAA9B,EAI9BU,IAAI,CAACC,SAAL,CAAexB,QAAf,CAJ8B,CANb,CAApB;AAWD,CAtCD;;AAwCAJ,uBAAuB,CAAC6B,YAAxB,GAAuC,EAAvC;AACA7B,uBAAuB,CAAC8B,SAAxB,GAAoCC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,EAAxC,GAA6C,EAAjF;AACA,eAAejC,uBAAf","sourcesContent":["import React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"@kit-ui/core\";\nimport { getUiOptions, getDefaultFormState } from \"../utils\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {},\n    icon: {\n      fontSize: \".75em\",\n      width: \"1em\",\n      height: \"1em\",\n      border: \"1px solid\"\n    }\n  };\n});\n\nvar LocalizedStringSettings = function LocalizedStringSettings(props) {\n  var schema = props.schema,\n      uiSchema = props.uiSchema,\n      formData = props.formData,\n      formContext = props.formContext;\n  var uiOptions = getUiOptions(uiSchema);\n  var languages = formContext.languages || [\"en\"];\n  var defaultLocale = formContext.defaultLocale || languages[0];\n  var currentLocale = formContext.currentLocale || defaultLocale;\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var anchorRef = useRef(null);\n\n  var _onToggle = function _onToggle(event) {\n    setExpanded(function (prevExpanded) {\n      return !prevExpanded;\n    });\n  };\n\n  var _onCollapse = function _onCollapse(event) {\n    setExpanded(false);\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.button,\n    onClick: _onToggle,\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: classes.icon\n  }, currentLocale)), /*#__PURE__*/React.createElement(Dropdown, {\n    expanded: expanded,\n    anchorEl: anchorRef.current,\n    onClickAway: _onCollapse\n  }, JSON.stringify(formData)));\n};\n\nLocalizedStringSettings.defaultProps = {};\nLocalizedStringSettings.propTypes = process.env.NODE_ENV !== \"production\" ? {} : {};\nexport default LocalizedStringSettings;"]},"metadata":{},"sourceType":"module"}