{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { getDefaultFormState, getCurrentLocale } from \"../utils\";\n\nvar getLocalizedString = function getLocalizedString(props) {\n  var formData = props.formData,\n      formContext = props.formContext;\n  var languages = formContext && formContext.languages || [\"en\"];\n  var defaultLocale = formContext && formContext.defaultLocale || languages[0];\n  var currentLocale = formContext && formContext.currentLocale || defaultLocale;\n\n  var getSchema = function getSchema() {\n    var fieldSchema = {\n      type: \"object\",\n      properties: {}\n    };\n    languages.map(function (locale) {\n      var localeId = \"locale:\" + locale;\n      var title = props.name || props.title;\n      fieldSchema.properties[localeId] = {\n        title: title + \":\" + locale,\n        type: \"string\"\n      };\n    });\n    return fieldSchema;\n  };\n\n  var getFormData = function getFormData(_ref) {\n    var schema = _ref.schema;\n    var newFormData = {};\n\n    if (typeof formData === \"string\") {\n      var defaultValue = formData;\n      languages.map(function (locale) {\n        var localeId = \"locale:\" + locale;\n        var value = currentLocale === locale && defaultValue;\n        newFormData[localeId] = value || \"\";\n      });\n    } else {\n      languages.map(function (locale) {\n        var localeId = \"locale:\" + locale;\n        var value = formData && formData[localeId];\n        newFormData[localeId] = value || \"\";\n      });\n    }\n\n    return getDefaultFormState(schema, _extends({}, newFormData));\n  };\n\n  var schema = getSchema();\n  return _extends({}, props, {\n    schema: schema,\n    uiSchema: _extends({\n      \"ui:field\": \"localizedString\"\n    }, props.uiSchema),\n    formData: getFormData(_extends({}, props, {\n      schema: schema\n    }))\n  });\n};\n\nexport default getLocalizedString;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/es/fieldTypes/localizedString.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","getDefaultFormState","getCurrentLocale","getLocalizedString","props","formData","formContext","languages","defaultLocale","currentLocale","getSchema","fieldSchema","type","properties","map","locale","localeId","title","name","getFormData","_ref","schema","newFormData","defaultValue","value","uiSchema"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { getDefaultFormState, getCurrentLocale } from \"../utils\";\n\nvar getLocalizedString = function getLocalizedString(props) {\n  var formData = props.formData,\n      formContext = props.formContext;\n  var languages = formContext && formContext.languages || [\"en\"];\n  var defaultLocale = formContext && formContext.defaultLocale || languages[0];\n  var currentLocale = formContext && formContext.currentLocale || defaultLocale;\n\n  var getSchema = function getSchema() {\n    var fieldSchema = {\n      type: \"object\",\n      properties: {}\n    };\n    languages.map(function (locale) {\n      var localeId = \"locale:\" + locale;\n      var title = props.name || props.title;\n      fieldSchema.properties[localeId] = {\n        title: title + \":\" + locale,\n        type: \"string\"\n      };\n    });\n    return fieldSchema;\n  };\n\n  var getFormData = function getFormData(_ref) {\n    var schema = _ref.schema;\n    var newFormData = {};\n\n    if (typeof formData === \"string\") {\n      var defaultValue = formData;\n      languages.map(function (locale) {\n        var localeId = \"locale:\" + locale;\n        var value = currentLocale === locale && defaultValue;\n        newFormData[localeId] = value || \"\";\n      });\n    } else {\n      languages.map(function (locale) {\n        var localeId = \"locale:\" + locale;\n        var value = formData && formData[localeId];\n        newFormData[localeId] = value || \"\";\n      });\n    }\n\n    return getDefaultFormState(schema, _extends({}, newFormData));\n  };\n\n  var schema = getSchema();\n  return _extends({}, props, {\n    schema: schema,\n    uiSchema: _extends({\n      \"ui:field\": \"localizedString\"\n    }, props.uiSchema),\n    formData: getFormData(_extends({}, props, {\n      schema: schema\n    }))\n  });\n};\n\nexport default getLocalizedString;"]},"metadata":{},"sourceType":"module"}