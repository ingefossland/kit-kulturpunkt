{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChapterText = exports.StcoAtom = exports.StszAtom = exports.StscAtom = exports.SampleToChunkToken = exports.SttsAtom = exports.TimeToSampleToken = exports.SoundSampleDescriptionV0 = exports.SoundSampleDescriptionVersion = exports.StsdAtom = exports.TrackHeaderAtom = exports.NameAtom = exports.DataAtom = exports.MvhdAtom = exports.MdhdAtom = exports.FixedLengthAtom = exports.mhdr = exports.tkhd = exports.ftyp = exports.ExtendedSize = exports.Header = void 0;\n\nconst Token = require(\"token-types\");\n\nconst FourCC_1 = require(\"../common/FourCC\");\n\nconst assert = require(\"assert\");\n\nconst initDebug = require(\"debug\");\n\nconst debug = initDebug('music-metadata:parser:MP4:atom');\nexports.Header = {\n  len: 8,\n  get: (buf, off) => {\n    const length = Token.UINT32_BE.get(buf, off);\n    if (length < 0) throw new Error('Invalid atom header length');\n    return {\n      length,\n      name: new Token.StringType(4, 'binary').get(buf, off + 4)\n    };\n  },\n  put: (buf, off, hdr) => {\n    Token.UINT32_BE.put(buf, off, hdr.length);\n    return FourCC_1.FourCcToken.put(buf, off + 4, hdr.name);\n  }\n};\n/**\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap1/qtff1.html#//apple_ref/doc/uid/TP40000939-CH203-38190\n */\n\nexports.ExtendedSize = Token.UINT64_BE;\nexports.ftyp = {\n  len: 4,\n  get: (buf, off) => {\n    return {\n      type: new Token.StringType(4, 'ascii').get(buf, off)\n    };\n  }\n};\nexports.tkhd = {\n  len: 4,\n  get: (buf, off) => {\n    return {\n      type: new Token.StringType(4, 'ascii').get(buf, off)\n    };\n  }\n};\n/**\n * Token: Movie Header Atom\n */\n\nexports.mhdr = {\n  len: 8,\n  get: (buf, off) => {\n    return {\n      version: Token.UINT8.get(buf, off + 0),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      nextItemID: Token.UINT32_BE.get(buf, off + 4)\n    };\n  }\n};\n/**\n * Base class for 'fixed' length atoms.\n * In some cases these atoms are longer then the sum of the described fields.\n * Issue: https://github.com/Borewit/music-metadata/issues/120\n */\n\nclass FixedLengthAtom {\n  /**\n   *\n   * @param {number} len Length as specified in the size field\n   * @param {number} expLen Total length of sum of specified fields in the standard\n   */\n  constructor(len, expLen, atomId) {\n    this.len = len;\n\n    if (len < expLen) {\n      throw new Error(`Atom ${atomId} expected to be ${expLen}, but specifies ${len} bytes long.`);\n    } else if (len > expLen) {\n      debug(`Warning: atom ${atomId} expected to be ${expLen}, but was actually ${len} bytes long.`);\n    }\n  }\n\n}\n\nexports.FixedLengthAtom = FixedLengthAtom;\n/**\n * Token: Media Header Atom\n * Ref:\n *   https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-SW34\n *   https://wiki.multimedia.cx/index.php/QuickTime_container#mdhd\n */\n\nclass MdhdAtom extends FixedLengthAtom {\n  constructor(len) {\n    super(len, 24, 'mdhd');\n    this.len = len;\n  }\n\n  get(buf, off) {\n    return {\n      version: Token.UINT8.get(buf, off + 0),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      creationTime: Token.UINT32_BE.get(buf, off + 4),\n      modificationTime: Token.UINT32_BE.get(buf, off + 8),\n      timeScale: Token.UINT32_BE.get(buf, off + 12),\n      duration: Token.UINT32_BE.get(buf, off + 16),\n      language: Token.UINT16_BE.get(buf, off + 20),\n      quality: Token.UINT16_BE.get(buf, off + 22)\n    };\n  }\n\n}\n\nexports.MdhdAtom = MdhdAtom;\n/**\n * Token: Movie Header Atom\n */\n\nclass MvhdAtom extends FixedLengthAtom {\n  constructor(len) {\n    super(len, 100, 'mvhd');\n    this.len = len;\n  }\n\n  get(buf, off) {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      creationTime: Token.UINT32_BE.get(buf, off + 4),\n      modificationTime: Token.UINT32_BE.get(buf, off + 8),\n      timeScale: Token.UINT32_BE.get(buf, off + 12),\n      duration: Token.UINT32_BE.get(buf, off + 16),\n      preferredRate: Token.UINT32_BE.get(buf, off + 20),\n      preferredVolume: Token.UINT16_BE.get(buf, off + 24),\n      // ignore reserver: 10 bytes\n      // ignore matrix structure: 36 bytes\n      previewTime: Token.UINT32_BE.get(buf, off + 72),\n      previewDuration: Token.UINT32_BE.get(buf, off + 76),\n      posterTime: Token.UINT32_BE.get(buf, off + 80),\n      selectionTime: Token.UINT32_BE.get(buf, off + 84),\n      selectionDuration: Token.UINT32_BE.get(buf, off + 88),\n      currentTime: Token.UINT32_BE.get(buf, off + 92),\n      nextTrackID: Token.UINT32_BE.get(buf, off + 96)\n    };\n  }\n\n}\n\nexports.MvhdAtom = MvhdAtom;\n/**\n * Data Atom Structure\n */\n\nclass DataAtom {\n  constructor(len) {\n    this.len = len;\n  }\n\n  get(buf, off) {\n    return {\n      type: {\n        set: Token.UINT8.get(buf, off + 0),\n        type: Token.UINT24_BE.get(buf, off + 1)\n      },\n      locale: Token.UINT24_BE.get(buf, off + 4),\n      value: new Token.BufferType(this.len - 8).get(buf, off + 8)\n    };\n  }\n\n}\n\nexports.DataAtom = DataAtom;\n/**\n * Data Atom Structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW31\n */\n\nclass NameAtom {\n  constructor(len) {\n    this.len = len;\n  }\n\n  get(buf, off) {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      name: new Token.StringType(this.len - 4, 'utf-8').get(buf, off + 4)\n    };\n  }\n\n}\n\nexports.NameAtom = NameAtom;\n/**\n * Track Header Atoms structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25550\n */\n\nclass TrackHeaderAtom {\n  constructor(len) {\n    this.len = len;\n  }\n\n  get(buf, off) {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      creationTime: Token.UINT32_BE.get(buf, off + 4),\n      modificationTime: Token.UINT32_BE.get(buf, off + 8),\n      trackId: Token.UINT32_BE.get(buf, off + 12),\n      // reserved 4 bytes\n      duration: Token.UINT32_BE.get(buf, off + 20),\n      layer: Token.UINT16_BE.get(buf, off + 24),\n      alternateGroup: Token.UINT16_BE.get(buf, off + 26),\n      volume: Token.UINT16_BE.get(buf, off + 28) // ToDo: fixed point\n      // ToDo: add remaining fields\n\n    };\n  }\n\n}\n\nexports.TrackHeaderAtom = TrackHeaderAtom;\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\n\nconst stsdHeader = {\n  len: 8,\n  get: (buf, off) => {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      numberOfEntries: Token.UINT32_BE.get(buf, off + 4)\n    };\n  }\n};\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\n\nclass SampleDescriptionTable {\n  constructor(len) {\n    this.len = len;\n  }\n\n  get(buf, off) {\n    return {\n      dataFormat: FourCC_1.FourCcToken.get(buf, off),\n      dataReferenceIndex: Token.UINT16_BE.get(buf, off + 10),\n      description: new Token.BufferType(this.len - 12).get(buf, off + 12)\n    };\n  }\n\n}\n/**\n * Atom: Sample-description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\n\n\nclass StsdAtom {\n  constructor(len) {\n    this.len = len;\n  }\n\n  get(buf, off) {\n    const header = stsdHeader.get(buf, off);\n    off += stsdHeader.len;\n    const table = [];\n\n    for (let n = 0; n < header.numberOfEntries; ++n) {\n      const size = Token.UINT32_BE.get(buf, off); // Sample description size\n\n      off += Token.UINT32_BE.len;\n      table.push(new SampleDescriptionTable(size).get(buf, off));\n      off += size;\n    }\n\n    return {\n      header,\n      table\n    };\n  }\n\n}\n\nexports.StsdAtom = StsdAtom;\n/**\n * Common Sound Sample Description (version & revision)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-57317\n */\n\nexports.SoundSampleDescriptionVersion = {\n  len: 8,\n\n  get(buf, off) {\n    return {\n      version: Token.INT16_BE.get(buf, off),\n      revision: Token.INT16_BE.get(buf, off + 2),\n      vendor: Token.INT32_BE.get(buf, off + 4)\n    };\n  }\n\n};\n/**\n * Sound Sample Description (Version 0)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-130736\n */\n\nexports.SoundSampleDescriptionV0 = {\n  len: 12,\n\n  get(buf, off) {\n    return {\n      numAudioChannels: Token.INT16_BE.get(buf, off + 0),\n      sampleSize: Token.INT16_BE.get(buf, off + 2),\n      compressionId: Token.INT16_BE.get(buf, off + 4),\n      packetSize: Token.INT16_BE.get(buf, off + 6),\n      sampleRate: Token.UINT16_BE.get(buf, off + 8) + Token.UINT16_BE.get(buf, off + 10) / 10000\n    };\n  }\n\n};\n\nclass SimpleTableAtom {\n  constructor(len, token) {\n    this.len = len;\n    this.token = token;\n  }\n\n  get(buf, off) {\n    const nrOfEntries = Token.INT32_BE.get(buf, off + 4);\n    return {\n      version: Token.INT8.get(buf, off + 0),\n      flags: Token.INT24_BE.get(buf, off + 1),\n      numberOfEntries: nrOfEntries,\n      entries: readTokenTable(buf, this.token, off + 8, this.len - 8, nrOfEntries)\n    };\n  }\n\n}\n\nexports.TimeToSampleToken = {\n  len: 8,\n\n  get(buf, off) {\n    return {\n      count: Token.INT32_BE.get(buf, off + 0),\n      duration: Token.INT32_BE.get(buf, off + 4)\n    };\n  }\n\n};\n/**\n * Time-to-sample('stts') atom.\n * Store duration information for a media’s samples.\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25696\n */\n\nclass SttsAtom extends SimpleTableAtom {\n  constructor(len) {\n    super(len, exports.TimeToSampleToken);\n    this.len = len;\n  }\n\n}\n\nexports.SttsAtom = SttsAtom;\nexports.SampleToChunkToken = {\n  len: 12,\n\n  get(buf, off) {\n    return {\n      firstChunk: Token.INT32_BE.get(buf, off),\n      samplesPerChunk: Token.INT32_BE.get(buf, off + 4),\n      sampleDescriptionId: Token.INT32_BE.get(buf, off + 8)\n    };\n  }\n\n};\n/**\n * Sample-to-Chunk ('stsc') atom interface\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25706\n */\n\nclass StscAtom extends SimpleTableAtom {\n  constructor(len) {\n    super(len, exports.SampleToChunkToken);\n    this.len = len;\n  }\n\n}\n\nexports.StscAtom = StscAtom;\n/**\n * Sample-size ('stsz') atom\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25710\n */\n\nclass StszAtom {\n  constructor(len) {\n    this.len = len;\n  }\n\n  get(buf, off) {\n    const nrOfEntries = Token.INT32_BE.get(buf, off + 8);\n    return {\n      version: Token.INT8.get(buf, off),\n      flags: Token.INT24_BE.get(buf, off + 1),\n      sampleSize: Token.INT32_BE.get(buf, off + 4),\n      numberOfEntries: nrOfEntries,\n      entries: readTokenTable(buf, Token.INT32_BE, off + 12, this.len - 12, nrOfEntries)\n    };\n  }\n\n}\n\nexports.StszAtom = StszAtom;\n/**\n * Chunk offset atom, 'stco'\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25715\n */\n\nclass StcoAtom extends SimpleTableAtom {\n  constructor(len) {\n    super(len, Token.INT32_BE);\n    this.len = len;\n  }\n\n}\n\nexports.StcoAtom = StcoAtom;\n/**\n * Token used to decode text-track from 'mdat' atom (raw data stream)\n */\n\nclass ChapterText {\n  constructor(len) {\n    this.len = len;\n  }\n\n  get(buf, off) {\n    const titleLen = Token.INT16_BE.get(buf, off + 0);\n    const str = new Token.StringType(titleLen, 'utf-8');\n    return str.get(buf, off + 2);\n  }\n\n}\n\nexports.ChapterText = ChapterText;\n\nfunction readTokenTable(buf, token, off, remainingLen, numberOfEntries) {\n  debug(`remainingLen=${remainingLen}, numberOfEntries=${numberOfEntries} * token-len=${token.len}`);\n  if (remainingLen === 0) return [];\n  assert.equal(remainingLen, numberOfEntries * token.len, 'mismatch number-of-entries with remaining atom-length');\n  const entries = []; // parse offset-table\n\n  for (let n = 0; n < numberOfEntries; ++n) {\n    entries.push(token.get(buf, off));\n    off += token.len;\n  }\n\n  return entries;\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/music-metadata/lib/mp4/AtomToken.js"],"names":["Object","defineProperty","exports","value","ChapterText","StcoAtom","StszAtom","StscAtom","SampleToChunkToken","SttsAtom","TimeToSampleToken","SoundSampleDescriptionV0","SoundSampleDescriptionVersion","StsdAtom","TrackHeaderAtom","NameAtom","DataAtom","MvhdAtom","MdhdAtom","FixedLengthAtom","mhdr","tkhd","ftyp","ExtendedSize","Header","Token","require","FourCC_1","assert","initDebug","debug","len","get","buf","off","length","UINT32_BE","Error","name","StringType","put","hdr","FourCcToken","UINT64_BE","type","version","UINT8","flags","UINT24_BE","nextItemID","constructor","expLen","atomId","creationTime","modificationTime","timeScale","duration","language","UINT16_BE","quality","preferredRate","preferredVolume","previewTime","previewDuration","posterTime","selectionTime","selectionDuration","currentTime","nextTrackID","set","locale","BufferType","trackId","layer","alternateGroup","volume","stsdHeader","numberOfEntries","SampleDescriptionTable","dataFormat","dataReferenceIndex","description","header","table","n","size","push","INT16_BE","revision","vendor","INT32_BE","numAudioChannels","sampleSize","compressionId","packetSize","sampleRate","SimpleTableAtom","token","nrOfEntries","INT8","INT24_BE","entries","readTokenTable","count","firstChunk","samplesPerChunk","sampleDescriptionId","titleLen","str","remainingLen","equal"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACG,QAAR,GAAmBH,OAAO,CAACI,QAAR,GAAmBJ,OAAO,CAACK,QAAR,GAAmBL,OAAO,CAACM,kBAAR,GAA6BN,OAAO,CAACO,QAAR,GAAmBP,OAAO,CAACQ,iBAAR,GAA4BR,OAAO,CAACS,wBAAR,GAAmCT,OAAO,CAACU,6BAAR,GAAwCV,OAAO,CAACW,QAAR,GAAmBX,OAAO,CAACY,eAAR,GAA0BZ,OAAO,CAACa,QAAR,GAAmBb,OAAO,CAACc,QAAR,GAAmBd,OAAO,CAACe,QAAR,GAAmBf,OAAO,CAACgB,QAAR,GAAmBhB,OAAO,CAACiB,eAAR,GAA0BjB,OAAO,CAACkB,IAAR,GAAelB,OAAO,CAACmB,IAAR,GAAenB,OAAO,CAACoB,IAAR,GAAepB,OAAO,CAACqB,YAAR,GAAuBrB,OAAO,CAACsB,MAAR,GAAiB,KAAK,CAAnd;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAxB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAMI,KAAK,GAAGD,SAAS,CAAC,gCAAD,CAAvB;AACA3B,OAAO,CAACsB,MAAR,GAAiB;AACbO,EAAAA,GAAG,EAAE,CADQ;AAEbC,EAAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,UAAMC,MAAM,GAAGV,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAzB,CAAf;AACA,QAAIC,MAAM,GAAG,CAAb,EACI,MAAM,IAAIE,KAAJ,CAAU,4BAAV,CAAN;AACJ,WAAO;AACHF,MAAAA,MADG;AAEHG,MAAAA,IAAI,EAAE,IAAIb,KAAK,CAACc,UAAV,CAAqB,CAArB,EAAwB,QAAxB,EAAkCP,GAAlC,CAAsCC,GAAtC,EAA2CC,GAAG,GAAG,CAAjD;AAFH,KAAP;AAIH,GAVY;AAWbM,EAAAA,GAAG,EAAE,CAACP,GAAD,EAAMC,GAAN,EAAWO,GAAX,KAAmB;AACpBhB,IAAAA,KAAK,CAACW,SAAN,CAAgBI,GAAhB,CAAoBP,GAApB,EAAyBC,GAAzB,EAA8BO,GAAG,CAACN,MAAlC;AACA,WAAOR,QAAQ,CAACe,WAAT,CAAqBF,GAArB,CAAyBP,GAAzB,EAA8BC,GAAG,GAAG,CAApC,EAAuCO,GAAG,CAACH,IAA3C,CAAP;AACH;AAdY,CAAjB;AAgBA;AACA;AACA;;AACApC,OAAO,CAACqB,YAAR,GAAuBE,KAAK,CAACkB,SAA7B;AACAzC,OAAO,CAACoB,IAAR,GAAe;AACXS,EAAAA,GAAG,EAAE,CADM;AAEXC,EAAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,WAAO;AACHU,MAAAA,IAAI,EAAE,IAAInB,KAAK,CAACc,UAAV,CAAqB,CAArB,EAAwB,OAAxB,EAAiCP,GAAjC,CAAqCC,GAArC,EAA0CC,GAA1C;AADH,KAAP;AAGH;AANU,CAAf;AAQAhC,OAAO,CAACmB,IAAR,GAAe;AACXU,EAAAA,GAAG,EAAE,CADM;AAEXC,EAAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,WAAO;AACHU,MAAAA,IAAI,EAAE,IAAInB,KAAK,CAACc,UAAV,CAAqB,CAArB,EAAwB,OAAxB,EAAiCP,GAAjC,CAAqCC,GAArC,EAA0CC,GAA1C;AADH,KAAP;AAGH;AANU,CAAf;AAQA;AACA;AACA;;AACAhC,OAAO,CAACkB,IAAR,GAAe;AACXW,EAAAA,GAAG,EAAE,CADM;AAEXC,EAAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,WAAO;AACHW,MAAAA,OAAO,EAAEpB,KAAK,CAACqB,KAAN,CAAYd,GAAZ,CAAgBC,GAAhB,EAAqBC,GAAG,GAAG,CAA3B,CADN;AAEHa,MAAAA,KAAK,EAAEtB,KAAK,CAACuB,SAAN,CAAgBhB,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAFJ;AAGHe,MAAAA,UAAU,EAAExB,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B;AAHT,KAAP;AAKH;AARU,CAAf;AAUA;AACA;AACA;AACA;AACA;;AACA,MAAMf,eAAN,CAAsB;AAClB;AACJ;AACA;AACA;AACA;AACI+B,EAAAA,WAAW,CAACnB,GAAD,EAAMoB,MAAN,EAAcC,MAAd,EAAsB;AAC7B,SAAKrB,GAAL,GAAWA,GAAX;;AACA,QAAIA,GAAG,GAAGoB,MAAV,EAAkB;AACd,YAAM,IAAId,KAAJ,CAAW,QAAOe,MAAO,mBAAkBD,MAAO,mBAAkBpB,GAAI,cAAxE,CAAN;AACH,KAFD,MAGK,IAAIA,GAAG,GAAGoB,MAAV,EAAkB;AACnBrB,MAAAA,KAAK,CAAE,iBAAgBsB,MAAO,mBAAkBD,MAAO,sBAAqBpB,GAAI,cAA3E,CAAL;AACH;AACJ;;AAdiB;;AAgBtB7B,OAAO,CAACiB,eAAR,GAA0BA,eAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMD,QAAN,SAAuBC,eAAvB,CAAuC;AACnC+B,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,UAAMA,GAAN,EAAW,EAAX,EAAe,MAAf;AACA,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHW,MAAAA,OAAO,EAAEpB,KAAK,CAACqB,KAAN,CAAYd,GAAZ,CAAgBC,GAAhB,EAAqBC,GAAG,GAAG,CAA3B,CADN;AAEHa,MAAAA,KAAK,EAAEtB,KAAK,CAACuB,SAAN,CAAgBhB,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAFJ;AAGHmB,MAAAA,YAAY,EAAE5B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAHX;AAIHoB,MAAAA,gBAAgB,EAAE7B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAJf;AAKHqB,MAAAA,SAAS,EAAE9B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CALR;AAMHsB,MAAAA,QAAQ,EAAE/B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CANP;AAOHuB,MAAAA,QAAQ,EAAEhC,KAAK,CAACiC,SAAN,CAAgB1B,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAPP;AAQHyB,MAAAA,OAAO,EAAElC,KAAK,CAACiC,SAAN,CAAgB1B,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B;AARN,KAAP;AAUH;;AAhBkC;;AAkBvChC,OAAO,CAACgB,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;;AACA,MAAMD,QAAN,SAAuBE,eAAvB,CAAuC;AACnC+B,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,UAAMA,GAAN,EAAW,GAAX,EAAgB,MAAhB;AACA,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHW,MAAAA,OAAO,EAAEpB,KAAK,CAACqB,KAAN,CAAYd,GAAZ,CAAgBC,GAAhB,EAAqBC,GAArB,CADN;AAEHa,MAAAA,KAAK,EAAEtB,KAAK,CAACuB,SAAN,CAAgBhB,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAFJ;AAGHmB,MAAAA,YAAY,EAAE5B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAHX;AAIHoB,MAAAA,gBAAgB,EAAE7B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAJf;AAKHqB,MAAAA,SAAS,EAAE9B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CALR;AAMHsB,MAAAA,QAAQ,EAAE/B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CANP;AAOH0B,MAAAA,aAAa,EAAEnC,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAPZ;AAQH2B,MAAAA,eAAe,EAAEpC,KAAK,CAACiC,SAAN,CAAgB1B,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CARd;AASH;AACA;AACA4B,MAAAA,WAAW,EAAErC,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAXV;AAYH6B,MAAAA,eAAe,EAAEtC,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAZd;AAaH8B,MAAAA,UAAU,EAAEvC,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAbT;AAcH+B,MAAAA,aAAa,EAAExC,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAdZ;AAeHgC,MAAAA,iBAAiB,EAAEzC,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAfhB;AAgBHiC,MAAAA,WAAW,EAAE1C,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAhBV;AAiBHkC,MAAAA,WAAW,EAAE3C,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B;AAjBV,KAAP;AAmBH;;AAzBkC;;AA2BvChC,OAAO,CAACe,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;;AACA,MAAMD,QAAN,CAAe;AACXkC,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHU,MAAAA,IAAI,EAAE;AACFyB,QAAAA,GAAG,EAAE5C,KAAK,CAACqB,KAAN,CAAYd,GAAZ,CAAgBC,GAAhB,EAAqBC,GAAG,GAAG,CAA3B,CADH;AAEFU,QAAAA,IAAI,EAAEnB,KAAK,CAACuB,SAAN,CAAgBhB,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B;AAFJ,OADH;AAKHoC,MAAAA,MAAM,EAAE7C,KAAK,CAACuB,SAAN,CAAgBhB,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CALL;AAMH/B,MAAAA,KAAK,EAAE,IAAIsB,KAAK,CAAC8C,UAAV,CAAqB,KAAKxC,GAAL,GAAW,CAAhC,EAAmCC,GAAnC,CAAuCC,GAAvC,EAA4CC,GAAG,GAAG,CAAlD;AANJ,KAAP;AAQH;;AAbU;;AAefhC,OAAO,CAACc,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;;AACA,MAAMD,QAAN,CAAe;AACXmC,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHW,MAAAA,OAAO,EAAEpB,KAAK,CAACqB,KAAN,CAAYd,GAAZ,CAAgBC,GAAhB,EAAqBC,GAArB,CADN;AAEHa,MAAAA,KAAK,EAAEtB,KAAK,CAACuB,SAAN,CAAgBhB,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAFJ;AAGHI,MAAAA,IAAI,EAAE,IAAIb,KAAK,CAACc,UAAV,CAAqB,KAAKR,GAAL,GAAW,CAAhC,EAAmC,OAAnC,EAA4CC,GAA5C,CAAgDC,GAAhD,EAAqDC,GAAG,GAAG,CAA3D;AAHH,KAAP;AAKH;;AAVU;;AAYfhC,OAAO,CAACa,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;;AACA,MAAMD,eAAN,CAAsB;AAClBoC,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHW,MAAAA,OAAO,EAAEpB,KAAK,CAACqB,KAAN,CAAYd,GAAZ,CAAgBC,GAAhB,EAAqBC,GAArB,CADN;AAEHa,MAAAA,KAAK,EAAEtB,KAAK,CAACuB,SAAN,CAAgBhB,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAFJ;AAGHmB,MAAAA,YAAY,EAAE5B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAHX;AAIHoB,MAAAA,gBAAgB,EAAE7B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAJf;AAKHsC,MAAAA,OAAO,EAAE/C,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CALN;AAMH;AACAsB,MAAAA,QAAQ,EAAE/B,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAPP;AAQHuC,MAAAA,KAAK,EAAEhD,KAAK,CAACiC,SAAN,CAAgB1B,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CARJ;AASHwC,MAAAA,cAAc,EAAEjD,KAAK,CAACiC,SAAN,CAAgB1B,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CATb;AAUHyC,MAAAA,MAAM,EAAElD,KAAK,CAACiC,SAAN,CAAgB1B,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAVL,CAUwC;AAC3C;;AAXG,KAAP;AAaH;;AAlBiB;;AAoBtBhC,OAAO,CAACY,eAAR,GAA0BA,eAA1B;AACA;AACA;AACA;AACA;;AACA,MAAM8D,UAAU,GAAG;AACf7C,EAAAA,GAAG,EAAE,CADU;AAEfC,EAAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,WAAO;AACHW,MAAAA,OAAO,EAAEpB,KAAK,CAACqB,KAAN,CAAYd,GAAZ,CAAgBC,GAAhB,EAAqBC,GAArB,CADN;AAEHa,MAAAA,KAAK,EAAEtB,KAAK,CAACuB,SAAN,CAAgBhB,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,CAFJ;AAGH2C,MAAAA,eAAe,EAAEpD,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B;AAHd,KAAP;AAKH;AARc,CAAnB;AAUA;AACA;AACA;AACA;;AACA,MAAM4C,sBAAN,CAA6B;AACzB5B,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACH6C,MAAAA,UAAU,EAAEpD,QAAQ,CAACe,WAAT,CAAqBV,GAArB,CAAyBC,GAAzB,EAA8BC,GAA9B,CADT;AAEH8C,MAAAA,kBAAkB,EAAEvD,KAAK,CAACiC,SAAN,CAAgB1B,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,CAFjB;AAGH+C,MAAAA,WAAW,EAAE,IAAIxD,KAAK,CAAC8C,UAAV,CAAqB,KAAKxC,GAAL,GAAW,EAAhC,EAAoCC,GAApC,CAAwCC,GAAxC,EAA6CC,GAAG,GAAG,EAAnD;AAHV,KAAP;AAKH;;AAVwB;AAY7B;AACA;AACA;AACA;;;AACA,MAAMrB,QAAN,CAAe;AACXqC,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,UAAMgD,MAAM,GAAGN,UAAU,CAAC5C,GAAX,CAAeC,GAAf,EAAoBC,GAApB,CAAf;AACAA,IAAAA,GAAG,IAAI0C,UAAU,CAAC7C,GAAlB;AACA,UAAMoD,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACL,eAA3B,EAA4C,EAAEO,CAA9C,EAAiD;AAC7C,YAAMC,IAAI,GAAG5D,KAAK,CAACW,SAAN,CAAgBJ,GAAhB,CAAoBC,GAApB,EAAyBC,GAAzB,CAAb,CAD6C,CACD;;AAC5CA,MAAAA,GAAG,IAAIT,KAAK,CAACW,SAAN,CAAgBL,GAAvB;AACAoD,MAAAA,KAAK,CAACG,IAAN,CAAW,IAAIR,sBAAJ,CAA2BO,IAA3B,EAAiCrD,GAAjC,CAAqCC,GAArC,EAA0CC,GAA1C,CAAX;AACAA,MAAAA,GAAG,IAAImD,IAAP;AACH;;AACD,WAAO;AACHH,MAAAA,MADG;AAEHC,MAAAA;AAFG,KAAP;AAIH;;AAlBU;;AAoBfjF,OAAO,CAACW,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;;AACAX,OAAO,CAACU,6BAAR,GAAwC;AACpCmB,EAAAA,GAAG,EAAE,CAD+B;;AAEpCC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHW,MAAAA,OAAO,EAAEpB,KAAK,CAAC8D,QAAN,CAAevD,GAAf,CAAmBC,GAAnB,EAAwBC,GAAxB,CADN;AAEHsD,MAAAA,QAAQ,EAAE/D,KAAK,CAAC8D,QAAN,CAAevD,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAFP;AAGHuD,MAAAA,MAAM,EAAEhE,KAAK,CAACiE,QAAN,CAAe1D,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B;AAHL,KAAP;AAKH;;AARmC,CAAxC;AAUA;AACA;AACA;AACA;;AACAhC,OAAO,CAACS,wBAAR,GAAmC;AAC/BoB,EAAAA,GAAG,EAAE,EAD0B;;AAE/BC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHyD,MAAAA,gBAAgB,EAAElE,KAAK,CAAC8D,QAAN,CAAevD,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CADf;AAEH0D,MAAAA,UAAU,EAAEnE,KAAK,CAAC8D,QAAN,CAAevD,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAFT;AAGH2D,MAAAA,aAAa,EAAEpE,KAAK,CAAC8D,QAAN,CAAevD,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAHZ;AAIH4D,MAAAA,UAAU,EAAErE,KAAK,CAAC8D,QAAN,CAAevD,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAJT;AAKH6D,MAAAA,UAAU,EAAEtE,KAAK,CAACiC,SAAN,CAAgB1B,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,CAA/B,IAAoCT,KAAK,CAACiC,SAAN,CAAgB1B,GAAhB,CAAoBC,GAApB,EAAyBC,GAAG,GAAG,EAA/B,IAAqC;AALlF,KAAP;AAOH;;AAV8B,CAAnC;;AAYA,MAAM8D,eAAN,CAAsB;AAClB9C,EAAAA,WAAW,CAACnB,GAAD,EAAMkE,KAAN,EAAa;AACpB,SAAKlE,GAAL,GAAWA,GAAX;AACA,SAAKkE,KAAL,GAAaA,KAAb;AACH;;AACDjE,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,UAAMgE,WAAW,GAAGzE,KAAK,CAACiE,QAAN,CAAe1D,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAApB;AACA,WAAO;AACHW,MAAAA,OAAO,EAAEpB,KAAK,CAAC0E,IAAN,CAAWnE,GAAX,CAAeC,GAAf,EAAoBC,GAAG,GAAG,CAA1B,CADN;AAEHa,MAAAA,KAAK,EAAEtB,KAAK,CAAC2E,QAAN,CAAepE,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAFJ;AAGH2C,MAAAA,eAAe,EAAEqB,WAHd;AAIHG,MAAAA,OAAO,EAAEC,cAAc,CAACrE,GAAD,EAAM,KAAKgE,KAAX,EAAkB/D,GAAG,GAAG,CAAxB,EAA2B,KAAKH,GAAL,GAAW,CAAtC,EAAyCmE,WAAzC;AAJpB,KAAP;AAMH;;AAbiB;;AAetBhG,OAAO,CAACQ,iBAAR,GAA4B;AACxBqB,EAAAA,GAAG,EAAE,CADmB;;AAExBC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHqE,MAAAA,KAAK,EAAE9E,KAAK,CAACiE,QAAN,CAAe1D,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CADJ;AAEHsB,MAAAA,QAAQ,EAAE/B,KAAK,CAACiE,QAAN,CAAe1D,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B;AAFP,KAAP;AAIH;;AAPuB,CAA5B;AASA;AACA;AACA;AACA;AACA;;AACA,MAAMzB,QAAN,SAAuBuF,eAAvB,CAAuC;AACnC9C,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,UAAMA,GAAN,EAAW7B,OAAO,CAACQ,iBAAnB;AACA,SAAKqB,GAAL,GAAWA,GAAX;AACH;;AAJkC;;AAMvC7B,OAAO,CAACO,QAAR,GAAmBA,QAAnB;AACAP,OAAO,CAACM,kBAAR,GAA6B;AACzBuB,EAAAA,GAAG,EAAE,EADoB;;AAEzBC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHsE,MAAAA,UAAU,EAAE/E,KAAK,CAACiE,QAAN,CAAe1D,GAAf,CAAmBC,GAAnB,EAAwBC,GAAxB,CADT;AAEHuE,MAAAA,eAAe,EAAEhF,KAAK,CAACiE,QAAN,CAAe1D,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAFd;AAGHwE,MAAAA,mBAAmB,EAAEjF,KAAK,CAACiE,QAAN,CAAe1D,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B;AAHlB,KAAP;AAKH;;AARwB,CAA7B;AAUA;AACA;AACA;AACA;;AACA,MAAM3B,QAAN,SAAuByF,eAAvB,CAAuC;AACnC9C,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,UAAMA,GAAN,EAAW7B,OAAO,CAACM,kBAAnB;AACA,SAAKuB,GAAL,GAAWA,GAAX;AACH;;AAJkC;;AAMvC7B,OAAO,CAACK,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;;AACA,MAAMD,QAAN,CAAe;AACX4C,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,UAAMgE,WAAW,GAAGzE,KAAK,CAACiE,QAAN,CAAe1D,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAApB;AACA,WAAO;AACHW,MAAAA,OAAO,EAAEpB,KAAK,CAAC0E,IAAN,CAAWnE,GAAX,CAAeC,GAAf,EAAoBC,GAApB,CADN;AAEHa,MAAAA,KAAK,EAAEtB,KAAK,CAAC2E,QAAN,CAAepE,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAFJ;AAGH0D,MAAAA,UAAU,EAAEnE,KAAK,CAACiE,QAAN,CAAe1D,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAHT;AAIH2C,MAAAA,eAAe,EAAEqB,WAJd;AAKHG,MAAAA,OAAO,EAAEC,cAAc,CAACrE,GAAD,EAAMR,KAAK,CAACiE,QAAZ,EAAsBxD,GAAG,GAAG,EAA5B,EAAgC,KAAKH,GAAL,GAAW,EAA3C,EAA+CmE,WAA/C;AALpB,KAAP;AAOH;;AAbU;;AAefhG,OAAO,CAACI,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;;AACA,MAAMD,QAAN,SAAuB2F,eAAvB,CAAuC;AACnC9C,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,UAAMA,GAAN,EAAWN,KAAK,CAACiE,QAAjB;AACA,SAAK3D,GAAL,GAAWA,GAAX;AACH;;AAJkC;;AAMvC7B,OAAO,CAACG,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;;AACA,MAAMD,WAAN,CAAkB;AACd8C,EAAAA,WAAW,CAACnB,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,UAAMyE,QAAQ,GAAGlF,KAAK,CAAC8D,QAAN,CAAevD,GAAf,CAAmBC,GAAnB,EAAwBC,GAAG,GAAG,CAA9B,CAAjB;AACA,UAAM0E,GAAG,GAAG,IAAInF,KAAK,CAACc,UAAV,CAAqBoE,QAArB,EAA+B,OAA/B,CAAZ;AACA,WAAOC,GAAG,CAAC5E,GAAJ,CAAQC,GAAR,EAAaC,GAAG,GAAG,CAAnB,CAAP;AACH;;AARa;;AAUlBhC,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AACA,SAASkG,cAAT,CAAwBrE,GAAxB,EAA6BgE,KAA7B,EAAoC/D,GAApC,EAAyC2E,YAAzC,EAAuDhC,eAAvD,EAAwE;AACpE/C,EAAAA,KAAK,CAAE,gBAAe+E,YAAa,qBAAoBhC,eAAgB,gBAAeoB,KAAK,CAAClE,GAAI,EAA3F,CAAL;AACA,MAAI8E,YAAY,KAAK,CAArB,EACI,OAAO,EAAP;AACJjF,EAAAA,MAAM,CAACkF,KAAP,CAAaD,YAAb,EAA2BhC,eAAe,GAAGoB,KAAK,CAAClE,GAAnD,EAAwD,uDAAxD;AACA,QAAMsE,OAAO,GAAG,EAAhB,CALoE,CAMpE;;AACA,OAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,eAApB,EAAqC,EAAEO,CAAvC,EAA0C;AACtCiB,IAAAA,OAAO,CAACf,IAAR,CAAaW,KAAK,CAACjE,GAAN,CAAUC,GAAV,EAAeC,GAAf,CAAb;AACAA,IAAAA,GAAG,IAAI+D,KAAK,CAAClE,GAAb;AACH;;AACD,SAAOsE,OAAP;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChapterText = exports.StcoAtom = exports.StszAtom = exports.StscAtom = exports.SampleToChunkToken = exports.SttsAtom = exports.TimeToSampleToken = exports.SoundSampleDescriptionV0 = exports.SoundSampleDescriptionVersion = exports.StsdAtom = exports.TrackHeaderAtom = exports.NameAtom = exports.DataAtom = exports.MvhdAtom = exports.MdhdAtom = exports.FixedLengthAtom = exports.mhdr = exports.tkhd = exports.ftyp = exports.ExtendedSize = exports.Header = void 0;\nconst Token = require(\"token-types\");\nconst FourCC_1 = require(\"../common/FourCC\");\nconst assert = require(\"assert\");\nconst initDebug = require(\"debug\");\nconst debug = initDebug('music-metadata:parser:MP4:atom');\nexports.Header = {\n    len: 8,\n    get: (buf, off) => {\n        const length = Token.UINT32_BE.get(buf, off);\n        if (length < 0)\n            throw new Error('Invalid atom header length');\n        return {\n            length,\n            name: new Token.StringType(4, 'binary').get(buf, off + 4)\n        };\n    },\n    put: (buf, off, hdr) => {\n        Token.UINT32_BE.put(buf, off, hdr.length);\n        return FourCC_1.FourCcToken.put(buf, off + 4, hdr.name);\n    }\n};\n/**\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap1/qtff1.html#//apple_ref/doc/uid/TP40000939-CH203-38190\n */\nexports.ExtendedSize = Token.UINT64_BE;\nexports.ftyp = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            type: new Token.StringType(4, 'ascii').get(buf, off)\n        };\n    }\n};\nexports.tkhd = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            type: new Token.StringType(4, 'ascii').get(buf, off)\n        };\n    }\n};\n/**\n * Token: Movie Header Atom\n */\nexports.mhdr = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            version: Token.UINT8.get(buf, off + 0),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            nextItemID: Token.UINT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Base class for 'fixed' length atoms.\n * In some cases these atoms are longer then the sum of the described fields.\n * Issue: https://github.com/Borewit/music-metadata/issues/120\n */\nclass FixedLengthAtom {\n    /**\n     *\n     * @param {number} len Length as specified in the size field\n     * @param {number} expLen Total length of sum of specified fields in the standard\n     */\n    constructor(len, expLen, atomId) {\n        this.len = len;\n        if (len < expLen) {\n            throw new Error(`Atom ${atomId} expected to be ${expLen}, but specifies ${len} bytes long.`);\n        }\n        else if (len > expLen) {\n            debug(`Warning: atom ${atomId} expected to be ${expLen}, but was actually ${len} bytes long.`);\n        }\n    }\n}\nexports.FixedLengthAtom = FixedLengthAtom;\n/**\n * Token: Media Header Atom\n * Ref:\n *   https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-SW34\n *   https://wiki.multimedia.cx/index.php/QuickTime_container#mdhd\n */\nclass MdhdAtom extends FixedLengthAtom {\n    constructor(len) {\n        super(len, 24, 'mdhd');\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off + 0),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            creationTime: Token.UINT32_BE.get(buf, off + 4),\n            modificationTime: Token.UINT32_BE.get(buf, off + 8),\n            timeScale: Token.UINT32_BE.get(buf, off + 12),\n            duration: Token.UINT32_BE.get(buf, off + 16),\n            language: Token.UINT16_BE.get(buf, off + 20),\n            quality: Token.UINT16_BE.get(buf, off + 22)\n        };\n    }\n}\nexports.MdhdAtom = MdhdAtom;\n/**\n * Token: Movie Header Atom\n */\nclass MvhdAtom extends FixedLengthAtom {\n    constructor(len) {\n        super(len, 100, 'mvhd');\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            creationTime: Token.UINT32_BE.get(buf, off + 4),\n            modificationTime: Token.UINT32_BE.get(buf, off + 8),\n            timeScale: Token.UINT32_BE.get(buf, off + 12),\n            duration: Token.UINT32_BE.get(buf, off + 16),\n            preferredRate: Token.UINT32_BE.get(buf, off + 20),\n            preferredVolume: Token.UINT16_BE.get(buf, off + 24),\n            // ignore reserver: 10 bytes\n            // ignore matrix structure: 36 bytes\n            previewTime: Token.UINT32_BE.get(buf, off + 72),\n            previewDuration: Token.UINT32_BE.get(buf, off + 76),\n            posterTime: Token.UINT32_BE.get(buf, off + 80),\n            selectionTime: Token.UINT32_BE.get(buf, off + 84),\n            selectionDuration: Token.UINT32_BE.get(buf, off + 88),\n            currentTime: Token.UINT32_BE.get(buf, off + 92),\n            nextTrackID: Token.UINT32_BE.get(buf, off + 96)\n        };\n    }\n}\nexports.MvhdAtom = MvhdAtom;\n/**\n * Data Atom Structure\n */\nclass DataAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            type: {\n                set: Token.UINT8.get(buf, off + 0),\n                type: Token.UINT24_BE.get(buf, off + 1)\n            },\n            locale: Token.UINT24_BE.get(buf, off + 4),\n            value: new Token.BufferType(this.len - 8).get(buf, off + 8)\n        };\n    }\n}\nexports.DataAtom = DataAtom;\n/**\n * Data Atom Structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW31\n */\nclass NameAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            name: new Token.StringType(this.len - 4, 'utf-8').get(buf, off + 4)\n        };\n    }\n}\nexports.NameAtom = NameAtom;\n/**\n * Track Header Atoms structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25550\n */\nclass TrackHeaderAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            creationTime: Token.UINT32_BE.get(buf, off + 4),\n            modificationTime: Token.UINT32_BE.get(buf, off + 8),\n            trackId: Token.UINT32_BE.get(buf, off + 12),\n            // reserved 4 bytes\n            duration: Token.UINT32_BE.get(buf, off + 20),\n            layer: Token.UINT16_BE.get(buf, off + 24),\n            alternateGroup: Token.UINT16_BE.get(buf, off + 26),\n            volume: Token.UINT16_BE.get(buf, off + 28) // ToDo: fixed point\n            // ToDo: add remaining fields\n        };\n    }\n}\nexports.TrackHeaderAtom = TrackHeaderAtom;\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nconst stsdHeader = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            numberOfEntries: Token.UINT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nclass SampleDescriptionTable {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            dataFormat: FourCC_1.FourCcToken.get(buf, off),\n            dataReferenceIndex: Token.UINT16_BE.get(buf, off + 10),\n            description: new Token.BufferType(this.len - 12).get(buf, off + 12)\n        };\n    }\n}\n/**\n * Atom: Sample-description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nclass StsdAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const header = stsdHeader.get(buf, off);\n        off += stsdHeader.len;\n        const table = [];\n        for (let n = 0; n < header.numberOfEntries; ++n) {\n            const size = Token.UINT32_BE.get(buf, off); // Sample description size\n            off += Token.UINT32_BE.len;\n            table.push(new SampleDescriptionTable(size).get(buf, off));\n            off += size;\n        }\n        return {\n            header,\n            table\n        };\n    }\n}\nexports.StsdAtom = StsdAtom;\n/**\n * Common Sound Sample Description (version & revision)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-57317\n */\nexports.SoundSampleDescriptionVersion = {\n    len: 8,\n    get(buf, off) {\n        return {\n            version: Token.INT16_BE.get(buf, off),\n            revision: Token.INT16_BE.get(buf, off + 2),\n            vendor: Token.INT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Sound Sample Description (Version 0)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-130736\n */\nexports.SoundSampleDescriptionV0 = {\n    len: 12,\n    get(buf, off) {\n        return {\n            numAudioChannels: Token.INT16_BE.get(buf, off + 0),\n            sampleSize: Token.INT16_BE.get(buf, off + 2),\n            compressionId: Token.INT16_BE.get(buf, off + 4),\n            packetSize: Token.INT16_BE.get(buf, off + 6),\n            sampleRate: Token.UINT16_BE.get(buf, off + 8) + Token.UINT16_BE.get(buf, off + 10) / 10000\n        };\n    }\n};\nclass SimpleTableAtom {\n    constructor(len, token) {\n        this.len = len;\n        this.token = token;\n    }\n    get(buf, off) {\n        const nrOfEntries = Token.INT32_BE.get(buf, off + 4);\n        return {\n            version: Token.INT8.get(buf, off + 0),\n            flags: Token.INT24_BE.get(buf, off + 1),\n            numberOfEntries: nrOfEntries,\n            entries: readTokenTable(buf, this.token, off + 8, this.len - 8, nrOfEntries)\n        };\n    }\n}\nexports.TimeToSampleToken = {\n    len: 8,\n    get(buf, off) {\n        return {\n            count: Token.INT32_BE.get(buf, off + 0),\n            duration: Token.INT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Time-to-sample('stts') atom.\n * Store duration information for a media’s samples.\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25696\n */\nclass SttsAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, exports.TimeToSampleToken);\n        this.len = len;\n    }\n}\nexports.SttsAtom = SttsAtom;\nexports.SampleToChunkToken = {\n    len: 12,\n    get(buf, off) {\n        return {\n            firstChunk: Token.INT32_BE.get(buf, off),\n            samplesPerChunk: Token.INT32_BE.get(buf, off + 4),\n            sampleDescriptionId: Token.INT32_BE.get(buf, off + 8)\n        };\n    }\n};\n/**\n * Sample-to-Chunk ('stsc') atom interface\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25706\n */\nclass StscAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, exports.SampleToChunkToken);\n        this.len = len;\n    }\n}\nexports.StscAtom = StscAtom;\n/**\n * Sample-size ('stsz') atom\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25710\n */\nclass StszAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const nrOfEntries = Token.INT32_BE.get(buf, off + 8);\n        return {\n            version: Token.INT8.get(buf, off),\n            flags: Token.INT24_BE.get(buf, off + 1),\n            sampleSize: Token.INT32_BE.get(buf, off + 4),\n            numberOfEntries: nrOfEntries,\n            entries: readTokenTable(buf, Token.INT32_BE, off + 12, this.len - 12, nrOfEntries)\n        };\n    }\n}\nexports.StszAtom = StszAtom;\n/**\n * Chunk offset atom, 'stco'\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25715\n */\nclass StcoAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, Token.INT32_BE);\n        this.len = len;\n    }\n}\nexports.StcoAtom = StcoAtom;\n/**\n * Token used to decode text-track from 'mdat' atom (raw data stream)\n */\nclass ChapterText {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const titleLen = Token.INT16_BE.get(buf, off + 0);\n        const str = new Token.StringType(titleLen, 'utf-8');\n        return str.get(buf, off + 2);\n    }\n}\nexports.ChapterText = ChapterText;\nfunction readTokenTable(buf, token, off, remainingLen, numberOfEntries) {\n    debug(`remainingLen=${remainingLen}, numberOfEntries=${numberOfEntries} * token-len=${token.len}`);\n    if (remainingLen === 0)\n        return [];\n    assert.equal(remainingLen, numberOfEntries * token.len, 'mismatch number-of-entries with remaining atom-length');\n    const entries = [];\n    // parse offset-table\n    for (let n = 0; n < numberOfEntries; ++n) {\n        entries.push(token.get(buf, off));\n        off += token.len;\n    }\n    return entries;\n}\n//# sourceMappingURL=AtomToken.js.map"]},"metadata":{},"sourceType":"script"}