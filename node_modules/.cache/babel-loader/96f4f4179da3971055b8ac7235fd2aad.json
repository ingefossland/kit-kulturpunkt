{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Preview/GalleryPreview.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PreviewBase, NavPreview } from \"../components/\";\nimport { Gallery } from \"@kit-ui/admin\";\nconst useStyles = makeStyles(theme => ({\n  base: {\n    position: \"absolute\",\n    zIndex: 2,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n}));\n\nconst ArtifactPreview = ({\n  formData = [],\n  formContext,\n  mediaHeight = 360\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(PreviewBase, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Gallery, {\n    width: \"100%\",\n    padding: 2,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, formData && formData.map((model, index) => {\n    const {\n      mediaId,\n      media\n    } = model;\n    let width, height;\n\n    if (media.mediaWidth && media.mediaHeight) {\n      width = media.mediaWidth;\n      height = media.mediaHeight;\n    } else if (media.imageWidth && media.imageHeight) {\n      width = media.imageWidth;\n      height = media.imageHeight;\n    }\n\n    width = Math.floor(mediaHeight * (width / height)) || mediaHeight;\n    const {\n      imageUrl\n    } = media;\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: imageUrl,\n      width: width,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    });\n  })));\n};\n\nArtifactPreview.propTypes = {\n  formData: PropTypes.object\n};\nexport default ArtifactPreview;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Preview/GalleryPreview.js"],"names":["React","useState","PropTypes","makeStyles","PreviewBase","NavPreview","Gallery","useStyles","theme","base","position","zIndex","top","right","bottom","left","ArtifactPreview","formData","formContext","mediaHeight","classes","map","model","index","mediaId","media","width","height","mediaWidth","imageWidth","imageHeight","Math","floor","imageUrl","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,UADR;AAEFC,IAAAA,MAAM,EAAE,CAFN;AAGFC,IAAAA,GAAG,EAAE,CAHH;AAIFC,IAAAA,KAAK,EAAE,CAJL;AAKFC,IAAAA,MAAM,EAAE,CALN;AAMFC,IAAAA,IAAI,EAAE;AANJ;AAD6B,CAAL,CAAN,CAA5B;;AAWA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,QAAQ,GAAG,EAAZ;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA,WAAW,GAAG;AAA3C,CAAD,KAAqD;AAEzE,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,sBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAE,CAA/B;AAAkC,IAAA,OAAO,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMU,QAAQ,IAAIA,QAAQ,CAACI,GAAT,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAEzC,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAqBH,KAA3B;AAEA,QAAII,KAAJ,EAAWC,MAAX;;AAEA,QAAIF,KAAK,CAACG,UAAN,IAAoBH,KAAK,CAACN,WAA9B,EAA2C;AACvCO,MAAAA,KAAK,GAAGD,KAAK,CAACG,UAAd;AACAD,MAAAA,MAAM,GAAGF,KAAK,CAACN,WAAf;AACH,KAHD,MAGO,IAAIM,KAAK,CAACI,UAAN,IAAoBJ,KAAK,CAACK,WAA9B,EAA2C;AAC9CJ,MAAAA,KAAK,GAAGD,KAAK,CAACI,UAAd;AACAF,MAAAA,MAAM,GAAGF,KAAK,CAACK,WAAf;AACH;;AAEDJ,IAAAA,KAAK,GAAIK,IAAI,CAACC,KAAL,CAAWb,WAAW,IAAIO,KAAK,GAAGC,MAAZ,CAAtB,KAA8CR,WAAvD;AAEA,UAAM;AAAEc,MAAAA;AAAF,QAAeR,KAArB;AAEA,wBACI;AAAK,MAAA,GAAG,EAAEQ,QAAV;AAAoB,MAAA,KAAK,EAAEP,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH,GAtBa,CADlB,CADJ,CADJ;AA6BH,CAjCD;;AAmCAV,eAAe,CAACkB,SAAhB,GAA4B;AACxBjB,EAAAA,QAAQ,EAAEf,SAAS,CAACiC;AADI,CAA5B;AAIA,eAAenB,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { PreviewBase, NavPreview } from \"../components/\"\nimport { Gallery } from \"@kit-ui/admin\"\n\nconst useStyles = makeStyles(theme => ({\n    base: {\n        position: \"absolute\",\n        zIndex: 2,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n}));\n\nconst ArtifactPreview = ({formData = [], formContext, mediaHeight = 360}) => {\n\n    const classes = useStyles()\n\n    return (\n        <PreviewBase>\n            <Gallery width=\"100%\" padding={2} spacing={2}>\n                { formData && formData.map((model, index) => {\n\n                    const {Â mediaId, media } = model;\n\n                    let width, height;\n                        \n                    if (media.mediaWidth && media.mediaHeight) {\n                        width = media.mediaWidth\n                        height = media.mediaHeight\n                    } else if (media.imageWidth && media.imageHeight) {\n                        width = media.imageWidth\n                        height = media.imageHeight\n                    }\n\n                    width =  Math.floor(mediaHeight * (width / height)) || mediaHeight\n\n                    const { imageUrl } = media\n\n                    return (\n                        <img src={imageUrl} width={width} />\n                    )\n\n                })}\n            </Gallery>\n        </PreviewBase>\n    )\n}\n\nArtifactPreview.propTypes = {\n    formData: PropTypes.object,\n}\n\nexport default ArtifactPreview;"]},"metadata":{},"sourceType":"module"}