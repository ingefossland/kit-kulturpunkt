{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getUiFieldset = getUiFieldset;\nexports.default = void 0;\n\nvar _2 = require(\"./\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction getUiFieldset(props) {\n  var idSchema = props.idSchema,\n      idPrefix = props.idPrefix,\n      schema = props.schema,\n      uiSchema = props.uiSchema,\n      formData = props.formData,\n      formContext = props.formContext;\n  var rootSchema = props.registry.rootSchema;\n  var currentId = formContext && formContext.currentId;\n  var uiOptions = (0, _2.getUiOptions)(uiSchema);\n  var fieldset = uiOptions.fieldset;\n\n  if (!fieldset) {\n    return false;\n  }\n\n  var uiFieldset = [];\n\n  var getFieldByName = function getFieldByName(name) {\n    var fieldSchema = schema && schema.properties && schema.properties[name] && (0, _2.retrieveSchema)(schema.properties[name], props.registry.definitions, formData && formData[name]);\n    var fieldFormData = fieldSchema && formData && formData[name] && (0, _2.getDefaultFormState)(fieldSchema, formData && formData[name]);\n    var fieldUiSchema = uiSchema && uiSchema[name] || {};\n    var fieldUiOptions = fieldUiSchema && (0, _2.getUiOptions)(fieldUiSchema);\n    var fieldIdPrefix = idSchema.$id + \"_\" + name;\n    var fieldSelected = currentId && currentId.startsWith(fieldIdPrefix);\n\n    if (fieldSchema) {\n      var fieldIdSchema = (0, _2.toIdSchema)(fieldSchema, fieldIdPrefix, rootSchema, fieldFormData, idPrefix);\n      return _extends({}, props, {\n        idPrefix: fieldIdPrefix,\n        idSchema: fieldIdSchema,\n        name: name,\n        schema: fieldSchema,\n        uiSchema: _extends({}, fieldUiSchema, {\n          \"ui:selected\": fieldSelected\n        }),\n        uiOptions: fieldUiOptions,\n        formData: fieldFormData,\n        onChange: function onChange(value) {\n          var _extends2;\n\n          return props.onChange(_extends({}, formData, (_extends2 = {}, _extends2[name] = value, _extends2)));\n        }\n      });\n    }\n\n    if (fieldUiSchema && fieldUiOptions.fieldset) {\n      var _fieldIdSchema = (0, _2.toIdSchema)(schema, fieldIdPrefix, rootSchema, formData, idPrefix);\n\n      return _extends({}, props, {\n        idPrefix: fieldIdPrefix,\n        idSchema: _fieldIdSchema,\n        name: name,\n        schema: schema,\n        uiSchema: _extends({}, fieldUiSchema, {\n          \"ui:selected\": fieldSelected\n        }),\n        uiOptions: fieldUiOptions,\n        formData: formData\n      });\n    }\n  };\n\n  var selected;\n  fieldset.map(function (name, index) {\n    var field = getFieldByName(name);\n\n    if (field) {\n      uiFieldset.push(field);\n\n      if (field.uiSchema[\"ui:selected\"]) {\n        selected = true;\n      }\n    }\n  });\n\n  if (uiFieldset[0] && !selected) {\n    uiFieldset[0].uiSchema = _extends({}, uiFieldset[0].uiSchema, {\n      \"ui:selected\": true\n    });\n  }\n\n  return uiFieldset;\n}\n\nvar _default = getUiFieldset;\nexports.default = _default;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/lib/utils/getUiFieldset.js"],"names":["exports","__esModule","getUiFieldset","default","_2","require","_lodash","_interopRequireDefault","obj","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","props","idSchema","idPrefix","schema","uiSchema","formData","formContext","rootSchema","registry","currentId","uiOptions","getUiOptions","fieldset","uiFieldset","getFieldByName","name","fieldSchema","properties","retrieveSchema","definitions","fieldFormData","getDefaultFormState","fieldUiSchema","fieldUiOptions","fieldIdPrefix","$id","fieldSelected","startsWith","fieldIdSchema","toIdSchema","onChange","value","_extends2","_fieldIdSchema","selected","map","index","field","push","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.getUiFieldset = getUiFieldset;\nexports.default = void 0;\n\nvar _2 = require(\"./\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction getUiFieldset(props) {\n  var idSchema = props.idSchema,\n      idPrefix = props.idPrefix,\n      schema = props.schema,\n      uiSchema = props.uiSchema,\n      formData = props.formData,\n      formContext = props.formContext;\n  var rootSchema = props.registry.rootSchema;\n  var currentId = formContext && formContext.currentId;\n  var uiOptions = (0, _2.getUiOptions)(uiSchema);\n  var fieldset = uiOptions.fieldset;\n\n  if (!fieldset) {\n    return false;\n  }\n\n  var uiFieldset = [];\n\n  var getFieldByName = function getFieldByName(name) {\n    var fieldSchema = schema && schema.properties && schema.properties[name] && (0, _2.retrieveSchema)(schema.properties[name], props.registry.definitions, formData && formData[name]);\n    var fieldFormData = fieldSchema && formData && formData[name] && (0, _2.getDefaultFormState)(fieldSchema, formData && formData[name]);\n    var fieldUiSchema = uiSchema && uiSchema[name] || {};\n    var fieldUiOptions = fieldUiSchema && (0, _2.getUiOptions)(fieldUiSchema);\n    var fieldIdPrefix = idSchema.$id + \"_\" + name;\n    var fieldSelected = currentId && currentId.startsWith(fieldIdPrefix);\n\n    if (fieldSchema) {\n      var fieldIdSchema = (0, _2.toIdSchema)(fieldSchema, fieldIdPrefix, rootSchema, fieldFormData, idPrefix);\n      return _extends({}, props, {\n        idPrefix: fieldIdPrefix,\n        idSchema: fieldIdSchema,\n        name: name,\n        schema: fieldSchema,\n        uiSchema: _extends({}, fieldUiSchema, {\n          \"ui:selected\": fieldSelected\n        }),\n        uiOptions: fieldUiOptions,\n        formData: fieldFormData,\n        onChange: function onChange(value) {\n          var _extends2;\n\n          return props.onChange(_extends({}, formData, (_extends2 = {}, _extends2[name] = value, _extends2)));\n        }\n      });\n    }\n\n    if (fieldUiSchema && fieldUiOptions.fieldset) {\n      var _fieldIdSchema = (0, _2.toIdSchema)(schema, fieldIdPrefix, rootSchema, formData, idPrefix);\n\n      return _extends({}, props, {\n        idPrefix: fieldIdPrefix,\n        idSchema: _fieldIdSchema,\n        name: name,\n        schema: schema,\n        uiSchema: _extends({}, fieldUiSchema, {\n          \"ui:selected\": fieldSelected\n        }),\n        uiOptions: fieldUiOptions,\n        formData: formData\n      });\n    }\n  };\n\n  var selected;\n  fieldset.map(function (name, index) {\n    var field = getFieldByName(name);\n\n    if (field) {\n      uiFieldset.push(field);\n\n      if (field.uiSchema[\"ui:selected\"]) {\n        selected = true;\n      }\n    }\n  });\n\n  if (uiFieldset[0] && !selected) {\n    uiFieldset[0].uiSchema = _extends({}, uiFieldset[0].uiSchema, {\n      \"ui:selected\": true\n    });\n  }\n\n  return uiFieldset;\n}\n\nvar _default = getUiFieldset;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}