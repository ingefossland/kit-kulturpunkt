{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/KpPage/KpPageField.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getUiOptions, getDefaultFormState } from \"@frontend-components/admin\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst FieldKioskPage = props => {\n  const {\n    registry,\n    formData,\n    schema,\n    uiSchema,\n    formContext\n  } = props;\n\n  const handleChange = formData => {\n    const newFormData = getDefaultFormState(schema, formData, registry.definitions);\n    props.onChange(newFormData);\n  };\n\n  const onAnnotateArrayChange = (links = []) => {\n    console.log('onAnnotateArrayChange', links);\n    handleChange({ ...formData,\n      links: links\n    });\n  };\n\n  const onAnnotateImageChange = (links = []) => {\n    console.log('onAnnotateImageChange', links);\n    handleChange({ ...formData,\n      links: links\n    });\n  };\n\n  const annotateImage = formData && formData.backgroundImage;\n  const imageAnnotations = formData && formData.links;\n  let newRegistry = { ...registry,\n    formContext: { ...registry.formContext,\n      annotateImage: annotateImage,\n      imageAnnotations: imageAnnotations,\n      onAnnotateArrayChange: onAnnotateArrayChange,\n      onAnnotateImageChange: onAnnotateImageChange\n    }\n  };\n  useEffect(() => {\n    newRegistry.formContext.imageAnnotations = imageAnnotations;\n  }, [imageAnnotations]);\n  const newUiSchema = { ...uiSchema,\n    \"ui:dialog\": formContext.dialog,\n    \"ui:preview\": formContext.preview,\n    \"ui:sidebar\": { ...formContext.dialog,\n      ...formContext.sidebar\n    },\n    \"ui:layout\": \"pageContent\"\n  };\n  const {\n    ObjectField\n  } = registry.fields;\n  return /*#__PURE__*/React.createElement(ObjectField, Object.assign({}, props, {\n    registry: newRegistry,\n    uiSchema: newUiSchema,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default FieldKioskPage;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/KpPage/KpPageField.js"],"names":["React","useState","useEffect","getUiOptions","getDefaultFormState","v4","uuidv4","FieldKioskPage","props","registry","formData","schema","uiSchema","formContext","handleChange","newFormData","definitions","onChange","onAnnotateArrayChange","links","console","log","onAnnotateImageChange","annotateImage","backgroundImage","imageAnnotations","newRegistry","newUiSchema","dialog","preview","sidebar","ObjectField","fields"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,4BAAlD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA,QAA9B;AAAwCC,IAAAA;AAAxC,MAAwDL,KAA9D;;AAEA,QAAMM,YAAY,GAAIJ,QAAD,IAAc;AAC/B,UAAMK,WAAW,GAAGX,mBAAmB,CAACO,MAAD,EAASD,QAAT,EAAmBD,QAAQ,CAACO,WAA5B,CAAvC;AACAR,IAAAA,KAAK,CAACS,QAAN,CAAeF,WAAf;AACH,GAHD;;AAKA,QAAMG,qBAAqB,GAAG,CAACC,KAAK,GAAG,EAAT,KAAgB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC;AAEAL,IAAAA,YAAY,CAAC,EACT,GAAGJ,QADM;AAETS,MAAAA,KAAK,EAAEA;AAFE,KAAD,CAAZ;AAKH,GARD;;AAUA,QAAMG,qBAAqB,GAAG,CAACH,KAAK,GAAG,EAAT,KAAgB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC;AAEAL,IAAAA,YAAY,CAAC,EACT,GAAGJ,QADM;AAETS,MAAAA,KAAK,EAAEA;AAFE,KAAD,CAAZ;AAKH,GARD;;AAUA,QAAMI,aAAa,GAAGb,QAAQ,IAAIA,QAAQ,CAACc,eAA3C;AACA,QAAMC,gBAAgB,GAAGf,QAAQ,IAAIA,QAAQ,CAACS,KAA9C;AAEA,MAAIO,WAAW,GAAG,EACd,GAAGjB,QADW;AAEdI,IAAAA,WAAW,EAAE,EACT,GAAGJ,QAAQ,CAACI,WADH;AAETU,MAAAA,aAAa,EAAEA,aAFN;AAGTE,MAAAA,gBAAgB,EAAEA,gBAHT;AAITP,MAAAA,qBAAqB,EAAEA,qBAJd;AAKTI,MAAAA,qBAAqB,EAAEA;AALd;AAFC,GAAlB;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,WAAW,CAACb,WAAZ,CAAwBY,gBAAxB,GAA2CA,gBAA3C;AACH,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIA,QAAME,WAAW,GAAG,EAChB,GAAGf,QADa;AAEhB,iBAAaC,WAAW,CAACe,MAFT;AAGhB,kBAAcf,WAAW,CAACgB,OAHV;AAIhB,kBAAc,EACV,GAAGhB,WAAW,CAACe,MADL;AAEV,SAAGf,WAAW,CAACiB;AAFL,KAJE;AAQhB,iBAAa;AARG,GAApB;AAYA,QAAM;AAAEC,IAAAA;AAAF,MAAkBtB,QAAQ,CAACuB,MAAjC;AAEA,sBACI,oBAAC,WAAD,oBAAiBxB,KAAjB;AAAwB,IAAA,QAAQ,EAAEkB,WAAlC;AAA+C,IAAA,QAAQ,EAAEC,WAAzD;AAAsE,IAAA,QAAQ,EAAEb,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAKH,CAjED;;AAmEA,eAAeP,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getUiOptions, getDefaultFormState } from \"@frontend-components/admin\"\nimport { v4 as uuidv4 } from 'uuid';\n\nconst FieldKioskPage = (props) => {\n    const {Â registry, formData, schema, uiSchema, formContext } = props;\n\n    const handleChange = (formData) => {\n        const newFormData = getDefaultFormState(schema, formData, registry.definitions);\n        props.onChange(newFormData)\n    }\n\n    const onAnnotateArrayChange = (links = []) => {\n        console.log('onAnnotateArrayChange', links)\n\n        handleChange({\n            ...formData,\n            links: links\n        })\n\n    }\n\n    const onAnnotateImageChange = (links = []) => {\n        console.log('onAnnotateImageChange', links)\n\n        handleChange({\n            ...formData,\n            links: links\n        })\n \n    }\n\n    const annotateImage = formData && formData.backgroundImage\n    const imageAnnotations = formData && formData.links\n\n    let newRegistry = {\n        ...registry,\n        formContext: {\n            ...registry.formContext,\n            annotateImage: annotateImage,\n            imageAnnotations: imageAnnotations,\n            onAnnotateArrayChange: onAnnotateArrayChange,\n            onAnnotateImageChange: onAnnotateImageChange,\n        }\n    }\n\n    useEffect(() => {\n        newRegistry.formContext.imageAnnotations = imageAnnotations\n    }, [imageAnnotations])\n\n    const newUiSchema = {\n        ...uiSchema,\n        \"ui:dialog\": formContext.dialog,\n        \"ui:preview\": formContext.preview,\n        \"ui:sidebar\": {\n            ...formContext.dialog,\n            ...formContext.sidebar\n        },\n        \"ui:layout\": \"pageContent\",\n\n    }\n\n    const { ObjectField } = registry.fields;\n\n    return (\n        <ObjectField {...props} registry={newRegistry} uiSchema={newUiSchema} onChange={handleChange} />\n    )\n\n\n}\n\nexport default FieldKioskPage"]},"metadata":{},"sourceType":"module"}