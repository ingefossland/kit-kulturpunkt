{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Dialog/DocumentsResults.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { getDocumentSource } from '../redux/modelsById';\nimport ResultsList from \"./ResultsList\";\nimport ResultsGallery from \"./ResultsGallery\";\nimport { utils } from '@kit-ui/schema';\nconst {\n  getDefaultFormState\n} = utils;\nconst templates = {\n  \"list\": ResultsList,\n  \"gallery\": ResultsGallery\n};\n\nconst DocumentsResults = ({\n  schema,\n  formData,\n  onChange,\n  query = {},\n  search = {},\n  layout = \"list\",\n  ...props\n}) => {\n  const {\n    t,\n    i18n\n  } = useTranslation(['dialog']);\n  const dispatch = useDispatch();\n  let itemSchema;\n\n  if (schema.type === \"array\") {\n    itemSchema = schema.items;\n  } else {\n    itemSchema = schema;\n  }\n\n  const [modelsSelected, setModelsSelected] = useState([]);\n\n  const getSelected = formData => {\n    let items = [];\n\n    if (schema.type === \"array\") {\n      items = formData || [];\n    } else {\n      items = formData && [formData] || [];\n    }\n\n    console.log('ITEMS', items);\n    const selected = items.map(({\n      reference,\n      referenceId\n    }) => {\n      const uniqueId = reference && reference.uniqueId;\n\n      if (reference.source && reference.sourceId) {\n        return reference.source + \"/\" + reference.sourceId;\n      }\n\n      return uniqueId;\n    });\n    setModelsSelected(selected);\n  };\n\n  useEffect(() => {\n    getSelected(formData);\n  }, [formData]);\n\n  const handleChange = formData => {\n    const newFormData = getDefaultFormState(schema, formData);\n    console.log(\"NEW\", newFormData);\n    onChange && onChange(newFormData);\n    getSelected(newFormData);\n  };\n\n  const addModel = model => {\n    console.log(itemSchema);\n    const item = getDefaultFormState(itemSchema, {\n      referenceId: model.uniqueId,\n      reference: model\n    });\n    let newFormData;\n\n    if (schema.type === \"array\") {\n      newFormData = formData && formData.length && [].concat(formData, item) || [item];\n    } else {\n      newFormData = item;\n    }\n\n    handleChange(newFormData);\n  };\n\n  const handleAdd = model => {\n    const {\n      source,\n      sourceId,\n      uniqueId,\n      mediaType\n    } = model;\n    console.log('addModel', model);\n\n    if (sourceId) {\n      console.log('sourceId', sourceId);\n      props.addDocumentSource({ ...model,\n        collectionId: query.collectionId\n      }, model => addModel(model));\n    } else if (source && uniqueId) {\n      delete model.uniqueId;\n      console.log('sourceId', sourceId);\n      dispatch(getDocumentSource({ ...model,\n        sourceId: uniqueId,\n        collectionId: query.collectionId\n      }, model => addModel(model)));\n    } else if (uniqueId) {\n      addModel(model);\n    }\n  };\n\n  const removeItem = ({\n    uniqueId\n  }) => {\n    return formData.filter(item => item.referenceId !== uniqueId);\n  };\n\n  const handleRemove = model => {\n    const uniqueId = model && model.uniqueId;\n    console.log('remove', model);\n    let newFormData;\n\n    if (schema.type === \"array\") {\n      newFormData = removeItem({\n        uniqueId\n      });\n    } else {\n      newFormData = getDefaultFormState(itemSchema, {\n        referenceId: undefined,\n        reference: {}\n      });\n    }\n\n    handleChange(newFormData);\n  }; // get template\n\n\n  const ResultsTemplate = templates && templates[layout];\n\n  if (!ResultsTemplate) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"No template for \", layout);\n  }\n\n  return /*#__PURE__*/React.createElement(ResultsTemplate, Object.assign({}, props, search, {\n    selected: modelsSelected,\n    query: query,\n    onAdd: handleAdd,\n    onRemove: handleRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default DocumentsResults;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Dialog/DocumentsResults.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useTranslation","getDocumentSource","ResultsList","ResultsGallery","utils","getDefaultFormState","templates","DocumentsResults","schema","formData","onChange","query","search","layout","props","t","i18n","dispatch","itemSchema","type","items","modelsSelected","setModelsSelected","getSelected","console","log","selected","map","reference","referenceId","uniqueId","source","sourceId","handleChange","newFormData","addModel","model","item","length","concat","handleAdd","mediaType","addDocumentSource","collectionId","removeItem","filter","handleRemove","undefined","ResultsTemplate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { getDocumentSource } from '../redux/modelsById';\n\nimport ResultsList from \"./ResultsList\"\nimport ResultsGallery from \"./ResultsGallery\"\n\nimport { utils } from '@kit-ui/schema';\nconst { getDefaultFormState } = utils;\n\nconst templates = {\n    \"list\": ResultsList,\n    \"gallery\": ResultsGallery\n}\n\nconst DocumentsResults = ({schema, formData, onChange, query = {}, search = {}, layout = \"list\", ...props}) => {\n    const { t, i18n } = useTranslation(['dialog']);\n    const dispatch = useDispatch()\n\n    let itemSchema;\n\n    if (schema.type === \"array\") {\n        itemSchema = schema.items\n    } else {\n        itemSchema = schema\n    }\n\n    const [modelsSelected, setModelsSelected] = useState([])\n\n    const getSelected = (formData) => {\n        let items = []\n\n        if (schema.type === \"array\") {\n            items = formData || []\n        } else {\n            items = formData && [formData] || []\n        }\n\n        console.log('ITEMS', items)\n\n        const selected = items.map(({reference, referenceId}) => { \n\n            const uniqueId = reference && reference.uniqueId\n\n            if (reference.source && reference.sourceId) {\n                return reference.source + \"/\" + reference.sourceId\n            }\n\n            return uniqueId\n        })\n\n        setModelsSelected(selected)\n\n        \n    }\n\n    useEffect(() => {\n        getSelected(formData)\n    }, [formData])\n\n    const handleChange = (formData) => {\n        const newFormData = getDefaultFormState(schema, formData)\n        console.log(\"NEW\", newFormData)\n        onChange && onChange(newFormData);\n        getSelected(newFormData);\n    }\n\n    const addModel = (model) => {\n\n        console.log(itemSchema)\n\n        const item = getDefaultFormState(itemSchema, {\n            referenceId: model.uniqueId,\n            reference: model\n        })\n\n        let newFormData;\n\n        if (schema.type === \"array\") {\n            newFormData = formData && formData.length && [].concat(formData, item) || [item];\n        } else {\n            newFormData = item\n        }\n\n        handleChange(newFormData);\n\n    }\n\n    const handleAdd = (model) => {\n        const { source, sourceId, uniqueId, mediaType } = model;\n\n        console.log('addModel', model)\n\n        if (sourceId) {\n\n            console.log('sourceId', sourceId)\n\n            props.addDocumentSource({\n                ...model,\n                collectionId: query.collectionId\n            }, (model) => addModel(model))\n\n        } else if (source && uniqueId) {\n\n            delete model.uniqueId\n            \n            console.log('sourceId', sourceId)\n\n            dispatch(getDocumentSource({\n                ...model,\n                sourceId: uniqueId,\n                collectionId: query.collectionId\n            }, (model) => addModel(model)))\n\n        } else if (uniqueId) {\n            addModel(model)\n        }\n     \n    }\n\n    const removeItem = ({uniqueId}) => {\n        return formData.filter(item => item.referenceId !== uniqueId)\n    }\n    \n    const handleRemove = (model) => {\n        const uniqueId = model && model.uniqueId\n\n        console.log('remove', model)\n\n        let newFormData;\n\n        if (schema.type === \"array\") {\n            newFormData = removeItem({uniqueId})\n        } else {\n            newFormData = getDefaultFormState(itemSchema, {\n                referenceId: undefined,\n                reference: {}\n            })\n        }\n\n        handleChange(newFormData);\n\n    }\n\n    // get template\n\n    const ResultsTemplate = templates && templates[layout]\n\n    if (!ResultsTemplate) {\n        return (\n            <p>No template for {layout}</p>\n        )\n    }\n\n    return (\n        <ResultsTemplate \n            {...props}\n            {...search}\n            selected={modelsSelected}\n            query={query}\n            onAdd={handleAdd}\n            onRemove={handleRemove} />\n    )    \n\n}\n\nexport default DocumentsResults"]},"metadata":{},"sourceType":"module"}