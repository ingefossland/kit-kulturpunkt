{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/Dialog/SearchDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuery } from '../redux/searchById';\nimport DialogBase from \"./DialogBase\";\nimport DialogSearch from \"./DialogSearch\";\nimport DialogHeader from \"./DialogHeader\";\nimport DialogSection from \"./DialogSection\";\nimport SearchResults from \"./SearchResults\";\nimport qs from 'query-string';\nimport _ from \"lodash\";\n\nconst SearchDialog = ({\n  schema,\n  formData,\n  onChange,\n  onClose,\n  query = {},\n  ...props\n}) => {\n  const {\n    t,\n    i18n\n  } = useTranslation(['dialog']);\n  const dispatch = useDispatch();\n  const searchById = useSelector(state => state.searchById);\n  console.log('query', query); // user query\n\n  const [userQ, setUserQ] = useState(\"\");\n\n  const handleQuery = _.debounce((q, event) => {\n    setUserQ(q);\n  }, 500);\n\n  const handleReset = () => {\n    if (q) {\n      setUserQ(\"\");\n    } else if (onClose) {\n      onClose();\n    }\n  }; // set q\n\n\n  let q;\n\n  if (query.q && userQ) {\n    q = query.q + \" \" + userQ.trim() + \"*\";\n  } else if (userQ) {\n    q = userQ.trim() + \"*\";\n  } else if (query.q) {\n    q = query.q;\n  } // sort\n\n\n  const sortOptions = [\"updatedAt DESC\", \"title\"];\n  const [sort, setSort] = useState(sortOptions[0]);\n  const sortSettings = {\n    \"name\": \"sort\",\n    \"value\": sort,\n    \"onChange\": (name, value) => setSort(value),\n    \"options\": sortOptions.map(value => {\n      return {\n        label: t(\"sort:\" + value || value),\n        value: value\n      };\n    })\n  }; // base query\n\n  query = { ...query,\n    id: \"/dialog/search\",\n    start: 0,\n    rows: 20,\n    sort: sort,\n    status: \"NOT trash\",\n    fl: \"uniqueId,source,sourceId,documentType,mediaType,imageUrl,title,description,status,mediaWidth,mediaHeight,updatedAt,updatedByName\",\n    q: q\n  }; // dm\n\n  const dmOwnerOptions = [\"*\", \"AHS\", \"NF\"];\n  const [dmOwner, setDmOwner] = useState(dmOwnerOptions[0]);\n  const dmOwnerSettings = {\n    \"name\": \"dmOwner\",\n    \"value\": dmOwner,\n    \"onChange\": (name, value) => setDmOwner(value),\n    \"options\": dmOwnerOptions.map(value => {\n      return {\n        label: \"owner:\" + value,\n        value: value\n      };\n    })\n  };\n\n  const getMediaSource = source => {\n    const queryId = query.id + \"/\" + source + \"/\" + query.q;\n    return {\n      title: \"media/\" + source,\n      layout: \"gallery\",\n      query: {\n        id: queryId,\n        models: source,\n        siteId: query.siteId,\n        collectionId: query.collectionId,\n        rows: query.rows,\n        q: query.q\n      }\n    };\n  };\n\n  const getMediaType = mediaType => {\n    const queryId = query.id + \"/\" + mediaType + \"/\" + query.q;\n    return {\n      title: \"media/\" + mediaType,\n      layout: mediaType.includes(\"audio\") && \"list\" || \"gallery\",\n      settings: [sortSettings],\n      query: { ...query,\n        id: queryId,\n        mediaType: mediaType\n      }\n    };\n  };\n\n  const getMediaSections = () => {\n    let mediaTypes = [];\n\n    if (Array.isArray(query.mediaType)) {\n      mediaTypes = query.mediaType;\n    } else if (query.mediaType) {\n      mediaTypes = [query.mediaType];\n    } else if (query.models === \"media\") {\n      mediaTypes = ['image*', 'video*', 'audio*'];\n    }\n\n    return mediaTypes && mediaTypes.map(mediaType => {\n      if (mediaType === \"youtube\" || mediaType == \"vimeo\" || mediaType === \"sketchfab\") {\n        return getMediaSource(mediaType);\n      } else {\n        return getMediaType(mediaType);\n      }\n    });\n  }; // get documentSections\n\n\n  const getDocumentSource = source => {\n    return {\n      title: \"documents/\" + source,\n      layout: \"list\",\n      settings: [dmOwnerSettings],\n      query: {\n        models: source,\n        id: query.id + \"/\" + source + \"/\" + query.q,\n        owner: dmOwner,\n        siteId: query.siteId,\n        collectionId: query.collectionId,\n        rows: query.rows,\n        q: query.q\n      }\n    };\n  };\n\n  const getDocumentType = documentType => {\n    return {\n      title: \"documents/\" + documentType,\n      layout: \"list\",\n      settings: [sortSettings],\n      query: { ...query,\n        id: query.id + \"/\" + documentType + \"/\" + query.q,\n        documentType: documentType\n      }\n    };\n  };\n\n  const getDocumentSections = () => {\n    let documentTypes = [];\n\n    if (Array.isArray(query.documentType)) {\n      documentTypes = query.documentType;\n    } else if (query.documentType) {\n      documentTypes = [query.documentType];\n    } else if (query.models === \"documents\") {\n      documentTypes = ['*'];\n    }\n\n    return documentTypes && documentTypes.map(documentType => {\n      if (documentType === \"ekultur\") {\n        return getDocumentSource(documentType);\n      } else {\n        return getDocumentType(documentType);\n      }\n    });\n  };\n\n  let sections = [];\n\n  if (query.models === \"media\") {\n    sections = getMediaSections();\n  } else if (query.models === \"documents\") {\n    sections = getDocumentSections();\n  } else if (query.models === \"ekultur\") {\n    sections = [getDocumentSource(\"ekultur\")];\n  } else if (query.models) {\n    sections = [{\n      title: query.models,\n      query: { ...query,\n        models: query.models,\n        id: query.id + \"/\" + query.models + \"/\" + query.q\n      }\n    }];\n  } // get tabs\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  const currentTab = sections[tabIndex]; // get search count\n\n  const getSearchCount = () => {\n    sections.map((section, index) => {\n      const {\n        query\n      } = section;\n\n      if (query.models === \"media\" && tabIndex !== index) {\n        dispatch(getQuery({ ...query,\n          rows: 0\n        }));\n      }\n\n      if (query.models === \"documents\" && tabIndex !== index) {\n        dispatch(getQuery({ ...query,\n          rows: 0\n        }));\n      }\n    });\n  }; // setup tabs\n\n\n  const handleTab = index => {\n    setTabIndex(index);\n  };\n\n  const tabs = sections.map((section, index) => {\n    const {\n      title,\n      query\n    } = section;\n    const currentSearch = searchById && searchById[query.id];\n    const resultsLoaded = currentSearch && currentSearch.resultsLoaded;\n    let count;\n\n    if (section.layout === \"uploads\") {\n      count = section.count;\n    } else if (currentSearch && currentSearch.count) {\n      count = currentSearch && currentSearch.count;\n    } else if (resultsLoaded && resultsLoaded.length && currentSearch.nextToken) {\n      count = resultsLoaded && resultsLoaded.length && resultsLoaded.length + \"+\";\n    } else if (resultsLoaded && resultsLoaded.length) {\n      count = resultsLoaded && resultsLoaded.length && resultsLoaded.length;\n    }\n\n    return {\n      title: t(title),\n      count: count,\n      onClick: () => handleTab(index)\n    };\n  });\n\n  const getSearch = () => {\n    currentTab && currentTab.query && dispatch(getQuery(currentTab.query));\n  };\n\n  useEffect(() => {\n    getSearch();\n  }, [tabIndex, query.q, query.sort, dmOwner]); // current query and search \n\n  const currentQuery = currentTab && currentTab.query;\n  const currentSearch = currentQuery.id && searchById && searchById[currentQuery.id];\n  useEffect(() => {\n    getSearchCount();\n  }, [query.q]); // handle page\n\n  const handlePage = page => {\n    dispatch(getQuery({ ...currentQuery,\n      page: page,\n      start: currentQuery.rows * (page - 1),\n      nextToken: currentSearch && currentSearch.nextToken\n    }));\n  }; // pages\n\n\n  const [pages, setPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [nextPage, setNextPage] = useState(0);\n\n  const getPages = () => {\n    const pages = Math.ceil(currentSearch.count / currentSearch.rows);\n    const page = Math.ceil((currentSearch.start + currentSearch.rows) / currentSearch.rows);\n    setPages(pages);\n    setCurrentPage(page);\n    let nextPage = 0;\n\n    for (let p = page; p <= pages; p++) {\n      if (!currentSearch.resultsByPage[p]) {\n        nextPage = p;\n        break;\n      }\n    }\n\n    setNextPage(nextPage);\n  };\n\n  useEffect(() => {\n    currentSearch && currentSearch.count && getPages();\n  }, [currentSearch]); // search\n\n  let search = {\n    placeholder: \"Search\"\n  };\n\n  if (!search.placeholder) {\n    if (tabs.length === 1 && currentQuery.models === \"media\" && currentQuery.mediaType) {\n      search.placeholder = t(\"Search media/\" + currentQuery.mediaType);\n    } else if (tabs.length === 1 && currentQuery.models === \"ekultur\") {\n      search.placeholder = t(\"Search ekultur\");\n    } else if (query.models === \"media\") {\n      search.placeholder = t(\"Search media\");\n    } else if (query.models === \"documents\") {\n      search.placeholder = t(\"Search documents\");\n    } else {\n      search.placeholder = t(\"Search models\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(DialogBase, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogSearch, Object.assign({}, search, {\n    expanded: true,\n    onChange: handleQuery,\n    onReset: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DialogHeader, {\n    tabs: tabs,\n    tabIndex: tabIndex,\n    settings: currentTab && currentTab.settings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SearchResults, {\n    schema: schema,\n    formData: formData,\n    onChange: onChange,\n    query: currentQuery,\n    layout: currentTab && currentTab.layout,\n    search: currentSearch,\n    results: { ...currentSearch,\n      pages: pages,\n      page: currentPage,\n      nextPage: nextPage\n    },\n    onPage: handlePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default SearchDialog;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/Dialog/SearchDialog.js"],"names":["React","useState","useEffect","useTranslation","useSelector","useDispatch","getQuery","DialogBase","DialogSearch","DialogHeader","DialogSection","SearchResults","qs","_","SearchDialog","schema","formData","onChange","onClose","query","props","t","i18n","dispatch","searchById","state","console","log","userQ","setUserQ","handleQuery","debounce","q","event","handleReset","trim","sortOptions","sort","setSort","sortSettings","name","value","map","label","id","start","rows","status","fl","dmOwnerOptions","dmOwner","setDmOwner","dmOwnerSettings","getMediaSource","source","queryId","title","layout","models","siteId","collectionId","getMediaType","mediaType","includes","settings","getMediaSections","mediaTypes","Array","isArray","getDocumentSource","owner","getDocumentType","documentType","getDocumentSections","documentTypes","sections","tabIndex","setTabIndex","currentTab","getSearchCount","section","index","handleTab","tabs","currentSearch","resultsLoaded","count","length","nextToken","onClick","getSearch","currentQuery","handlePage","page","pages","setPages","currentPage","setCurrentPage","nextPage","setNextPage","getPages","Math","ceil","p","resultsByPage","search","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getQuery } from '../redux/searchById';\n\nimport DialogBase from \"./DialogBase\"\nimport DialogSearch from \"./DialogSearch\"\n\nimport DialogHeader from \"./DialogHeader\"\nimport DialogSection from \"./DialogSection\"\n\nimport SearchResults from \"./SearchResults\"\n\nimport qs from 'query-string';\nimport _ from \"lodash\"\n\nconst SearchDialog = ({schema, formData, onChange, onClose, query = {}, ...props}) => {\n    const { t, i18n } = useTranslation(['dialog']);\n    const dispatch = useDispatch()\n\n    const searchById = useSelector(state => state.searchById)\n\n    console.log('query', query)\n\n    // user query\n\n    const [userQ, setUserQ] = useState(\"\")\n\n    const handleQuery = _.debounce((q, event) => {\n        setUserQ(q)\n    }, 500)\n\n    const handleReset = () => {\n        if (q) {\n            setUserQ(\"\")\n        } else if (onClose) {\n            onClose()\n        }\n    }\n\n    // set q\n\n    let q\n\n    if (query.q && userQ) {\n        q = query.q + \" \" + userQ.trim() + \"*\";\n    } else if (userQ) {\n        q = userQ.trim() + \"*\"\n    } else if (query.q) {\n        q = query.q\n    }\n\n    // sort\n\n    const sortOptions = [\n        \"updatedAt DESC\",\n        \"title\", \n    ]\n\n    const [sort, setSort] = useState(sortOptions[0])\n\n    const sortSettings =  {\n        \"name\": \"sort\",\n        \"value\": sort,\n        \"onChange\": (name, value) => setSort(value),\n        \"options\": sortOptions.map(value => {\n            return {\n                label: t(\"sort:\"+value || value),\n                value: value\n            }\n        })\n    }\n\n    // base query\n\n    query = {\n        ...query,\n        id: \"/dialog/search\",\n        start: 0,\n        rows: 20,\n        sort: sort,\n        status: \"NOT trash\",\n        fl: \"uniqueId,source,sourceId,documentType,mediaType,imageUrl,title,description,status,mediaWidth,mediaHeight,updatedAt,updatedByName\",\n        q: q,\n    }\n\n    // dm\n\n    const dmOwnerOptions = [\n        \"*\",\n        \"AHS\",\n        \"NF\", \n    ]\n\n    const [dmOwner, setDmOwner] = useState(dmOwnerOptions[0])\n\n    const dmOwnerSettings =  {\n        \"name\": \"dmOwner\",\n        \"value\": dmOwner,\n        \"onChange\": (name, value) => setDmOwner(value),\n        \"options\": dmOwnerOptions.map(value => {\n            return {\n                label: \"owner:\" + value,\n                value: value\n            }\n        })\n    }\n\n\n    const getMediaSource = (source) => {\n        const queryId = query.id + \"/\" + source + \"/\" + query.q\n\n        return {\n            title: \"media/\" + source,\n            layout: \"gallery\",\n            query: {\n                id: queryId,\n                models: source,\n                siteId: query.siteId,\n                collectionId: query.collectionId,\n                rows: query.rows,\n                q: query.q\n            }\n        }\n\n    }\n\n    const getMediaType = (mediaType) => {\n        const queryId = query.id + \"/\" + mediaType + \"/\" + query.q\n\n        return {\n            title: \"media/\" + mediaType,\n            layout: mediaType.includes(\"audio\") && \"list\" || \"gallery\",\n            settings: [\n                sortSettings\n            ],\n            query: {\n                ...query,\n                id: queryId,\n                mediaType: mediaType\n            }\n        }\n\n    }\n\n    const getMediaSections = () => {\n\n        let mediaTypes = []\n\n        if (Array.isArray(query.mediaType)) {\n            mediaTypes = query.mediaType\n        } else if (query.mediaType) {\n            mediaTypes = [query.mediaType]\n        } else if (query.models === \"media\") {\n            mediaTypes = ['image*','video*','audio*']\n        }\n\n        return mediaTypes && mediaTypes.map(mediaType => {\n            if (mediaType === \"youtube\" || mediaType == \"vimeo\" || mediaType === \"sketchfab\") {\n                return getMediaSource(mediaType)\n            } else {\n                return getMediaType(mediaType)\n            }\n        })\n\n    }\n\n    // get documentSections\n\n    const getDocumentSource = (source) => {\n        return {\n            title: \"documents/\" + source,\n            layout: \"list\",\n            settings: [\n                dmOwnerSettings\n            ],\n            query: {\n                models: source,\n                id: query.id + \"/\" + source + \"/\" + query.q,\n                owner: dmOwner,\n                siteId: query.siteId,\n                collectionId: query.collectionId,\n                rows: query.rows,\n                q: query.q\n            }\n        }\n        \n    }    \n\n    const getDocumentType = (documentType) => {\n        return {\n            title: \"documents/\" + documentType,\n            layout: \"list\",\n            settings: [\n                sortSettings\n            ],\n            query: {\n                ...query,\n                id: query.id + \"/\" + documentType + \"/\" + query.q,\n                documentType: documentType\n            }\n        }\n    }\n\n    const getDocumentSections = () => {\n        let documentTypes = []\n\n        if (Array.isArray(query.documentType)) {\n            documentTypes = query.documentType\n        } else if (query.documentType) {\n            documentTypes = [query.documentType]\n        } else if (query.models === \"documents\") {\n            documentTypes = ['*']\n        }\n\n        return documentTypes && documentTypes.map(documentType => {\n            if (documentType === \"ekultur\") {\n                return getDocumentSource(documentType)\n            } else {\n                return getDocumentType(documentType)\n            }\n        })   \n\n    }\n\n\n    let sections = []\n\n    if (query.models === \"media\") {\n        sections = getMediaSections()\n    } else if (query.models === \"documents\") {\n        sections = getDocumentSections()\n    } else if (query.models === \"ekultur\") {\n        sections = [getDocumentSource(\"ekultur\")]\n    } else if (query.models) {\n        sections = [\n            {\n                title: query.models,\n                query: {\n                    ...query,\n                    models: query.models,\n                    id: query.id + \"/\" + query.models + \"/\" + query.q,\n                }\n            }\n        ]\n    }\n    // get tabs\n\n    const [tabIndex, setTabIndex] = useState(0)\n    const currentTab = sections[tabIndex]\n\n    // get search count\n\n    const getSearchCount = () => {\n        sections.map((section, index) => {\n            const { query } = section;\n\n            if (query.models === \"media\" && tabIndex !== index) {\n                dispatch(getQuery({...query, rows: 0}))\n            }\n\n            if (query.models === \"documents\" && tabIndex !== index) {\n                dispatch(getQuery({...query, rows: 0}))\n            }\n\n        })\n        \n    }\n\n    // setup tabs\n\n    const handleTab = (index) => {\n        setTabIndex(index)\n    }\n\n    const tabs = sections.map((section, index) => {\n        const { title, query } = section;\n\n        const currentSearch = searchById && searchById[query.id]\n        const resultsLoaded = currentSearch && currentSearch.resultsLoaded\n        \n        let count;\n\n        if (section.layout === \"uploads\") {\n            count = section.count\n        } else if (currentSearch && currentSearch.count) {\n            count = currentSearch && currentSearch.count\n        } else if (resultsLoaded && resultsLoaded.length && currentSearch.nextToken) {\n            count = resultsLoaded && resultsLoaded.length && resultsLoaded.length + \"+\";\n        } else if (resultsLoaded && resultsLoaded.length) {\n            count = resultsLoaded && resultsLoaded.length && resultsLoaded.length;\n        }\n\n        return {\n            title: t(title),\n            count: count,\n            onClick: () => handleTab(index)\n        }\n\n    })\n\n    const getSearch = () => {\n        currentTab && currentTab.query && dispatch(getQuery(currentTab.query))\n    }\n\n    useEffect(() => {\n        getSearch()\n    }, [tabIndex, query.q, query.sort, dmOwner])\n\n    // current query and search \n\n    const currentQuery = currentTab && currentTab.query\n    const currentSearch = currentQuery.id && searchById && searchById[currentQuery.id];\n\n    useEffect(() => {\n        getSearchCount()\n    }, [query.q])\n\n    // handle page\n\n    const handlePage = (page) => {\n        dispatch(getQuery({\n            ...currentQuery,\n            page: page,\n            start: currentQuery.rows * (page-1),\n            nextToken: currentSearch && currentSearch.nextToken\n        }))\n    }\n\n    // pages\n    \n    const [pages, setPages] = useState(0)\n    const [currentPage, setCurrentPage] = useState(0)\n    const [nextPage, setNextPage] = useState(0)\n\n    const getPages = () => {\n        const pages = Math.ceil(currentSearch.count/currentSearch.rows)\n        const page = Math.ceil((currentSearch.start+currentSearch.rows)/currentSearch.rows)\n\n        setPages(pages)\n        setCurrentPage(page)\n\n        let nextPage = 0\n\n        for (let p = page; p <= pages; p++) {\n            if (!currentSearch.resultsByPage[p]) {\n                nextPage = p\n                break\n            }\n        }    \n\n        setNextPage(nextPage)\n    \n    }\n\n    useEffect(() => {\n        currentSearch && currentSearch.count && getPages()\n    }, [currentSearch])\n\n    // search\n\n    let search = {\n        placeholder: \"Search\"\n    }\n\n    if (!search.placeholder) {\n\n        if (tabs.length === 1 && currentQuery.models === \"media\" && currentQuery.mediaType) {\n            search.placeholder = t(\"Search media/\" + currentQuery.mediaType)\n        } else if (tabs.length === 1 && currentQuery.models === \"ekultur\" ) {\n            search.placeholder = t(\"Search ekultur\")\n        } else if (query.models === \"media\") {\n            search.placeholder = t(\"Search media\")\n        } else if (query.models === \"documents\") {\n            search.placeholder = t(\"Search documents\")\n        } else {\n            search.placeholder = t(\"Search models\")\n        }\n\n    }\n\n    return (\n        <DialogBase>\n            <DialogSection>\n                <DialogSearch \n                    {...search} \n                    expanded={true}\n                    onChange={handleQuery}\n                    onReset={handleReset} />\n                <DialogHeader \n                    tabs={tabs}\n                    tabIndex={tabIndex}\n                    settings={currentTab && currentTab.settings} />\n                <SearchResults \n                    schema={schema}\n                    formData={formData}\n                    onChange={onChange}\n                    query={currentQuery}\n                    layout={currentTab && currentTab.layout}\n                    search={currentSearch}\n                    results={{\n                        ...currentSearch,\n                        pages: pages,\n                        page: currentPage,\n                        nextPage: nextPage\n                    }}\n                    onPage={handlePage}                    \n                    />\n            </DialogSection>\n        </DialogBase>        \n    )\n\n}\n\n\nexport default SearchDialog"]},"metadata":{},"sourceType":"module"}