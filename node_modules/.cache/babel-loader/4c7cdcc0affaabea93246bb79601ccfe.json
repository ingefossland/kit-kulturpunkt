{"ast":null,"code":"import { formatMediaSize, formatMediaTime } from \"../../utils\";\nexport default {\n  \"select\": {\n    \"source\": \"source\",\n    \"sourceId\": \"sourceId\",\n    \"imageUrl\": \"imageUrl\",\n    \"title\": \"title\",\n    \"typeLabel\": \"typeLabel\",\n    \"metadata\": \"metadata\",\n    \"filename\": \"filename\",\n    \"duration\": \"duration\"\n  },\n  prepare: function prepare(_ref) {\n    var formData = _ref.formData,\n        formContext = _ref.formContext;\n    var uploadProgress = formData.uploadProgress,\n        uploadStatus = formData.uploadStatus,\n        title = formData.title,\n        description = formData.description,\n        mediaType = formData.mediaType,\n        mediaSize = formData.mediaSize,\n        mediaWidth = formData.mediaWidth,\n        mediaHeight = formData.mediaHeight,\n        mimeType = formData.mimeType,\n        imageUrl = formData.imageUrl,\n        filename = formData.filename,\n        duration = formData.duration,\n        content = formData.content;\n    var t = formContext && formContext.t;\n    var defaultLocale = formContext && formContext.defaultLocale;\n    var currentLocale = formContext && formContext.currentLocale;\n    var locale = currentLocale || defaultLocale;\n    var localeId = locale && \"locale:\" + locale;\n\n    if (content) {\n      title = content.title && content.title[localeId] || content.filename || title;\n      description = content.description && content.description[localeId] || description;\n      duration = content.duration || duration;\n      filename = content.filename || filename;\n    }\n\n    if (content && content.artwork && content.artwork[0] && content.artwork[0].media && content.artwork[0].media.imageUrl) {\n      imageUrl = content.artwork[0].media.imageUrl;\n    }\n\n    var typeLabel;\n\n    if (mediaType) {\n      typeLabel = mediaType;\n    }\n\n    if (mediaType === \"misc\" && mimeType) {\n      typeLabel = mimeType;\n    } // meta\n\n\n    var metadata = [];\n\n    if (uploadProgress) {\n      metadata.push(uploadProgress + \"%\");\n    } else if (uploadStatus && uploadStatus !== \"done\") {\n      metadata.push(t && t(\"uploadStatus:\" + uploadStatus || uploadStatus));\n    }\n\n    if (mediaWidth && mediaHeight) {\n      metadata.push(mediaWidth + \"x\" + mediaHeight);\n    } else if (mediaSize) {\n      metadata.push(formatMediaSize(mediaSize));\n    }\n\n    if (duration) {\n      metadata.push(formatMediaTime(duration));\n    }\n\n    if (content && content.captions && content.captions.length) {\n      metadata.push(content.captions.length + \" undertekster\");\n    }\n\n    return {\n      source: undefined,\n      sourceId: undefined,\n      imageUrl: imageUrl,\n      title: title,\n      typeLabel: typeLabel,\n      metadata: metadata,\n      filename: filename,\n      duration: duration\n    };\n  }\n};","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/es/Media/schemas/media/uiPreview.js"],"names":["formatMediaSize","formatMediaTime","prepare","_ref","formData","formContext","uploadProgress","uploadStatus","title","description","mediaType","mediaSize","mediaWidth","mediaHeight","mimeType","imageUrl","filename","duration","content","t","defaultLocale","currentLocale","locale","localeId","artwork","media","typeLabel","metadata","push","captions","length","source","undefined","sourceId"],"mappings":"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","sourcesContent":["import { formatMediaSize, formatMediaTime } from \"../../utils\";\nexport default {\n  \"select\": {\n    \"source\": \"source\",\n    \"sourceId\": \"sourceId\",\n    \"imageUrl\": \"imageUrl\",\n    \"title\": \"title\",\n    \"typeLabel\": \"typeLabel\",\n    \"metadata\": \"metadata\",\n    \"filename\": \"filename\",\n    \"duration\": \"duration\"\n  },\n  prepare: function prepare(_ref) {\n    var formData = _ref.formData,\n        formContext = _ref.formContext;\n    var uploadProgress = formData.uploadProgress,\n        uploadStatus = formData.uploadStatus,\n        title = formData.title,\n        description = formData.description,\n        mediaType = formData.mediaType,\n        mediaSize = formData.mediaSize,\n        mediaWidth = formData.mediaWidth,\n        mediaHeight = formData.mediaHeight,\n        mimeType = formData.mimeType,\n        imageUrl = formData.imageUrl,\n        filename = formData.filename,\n        duration = formData.duration,\n        content = formData.content;\n    var t = formContext && formContext.t;\n    var defaultLocale = formContext && formContext.defaultLocale;\n    var currentLocale = formContext && formContext.currentLocale;\n    var locale = currentLocale || defaultLocale;\n    var localeId = locale && \"locale:\" + locale;\n\n    if (content) {\n      title = content.title && content.title[localeId] || content.filename || title;\n      description = content.description && content.description[localeId] || description;\n      duration = content.duration || duration;\n      filename = content.filename || filename;\n    }\n\n    if (content && content.artwork && content.artwork[0] && content.artwork[0].media && content.artwork[0].media.imageUrl) {\n      imageUrl = content.artwork[0].media.imageUrl;\n    }\n\n    var typeLabel;\n\n    if (mediaType) {\n      typeLabel = mediaType;\n    }\n\n    if (mediaType === \"misc\" && mimeType) {\n      typeLabel = mimeType;\n    } // meta\n\n\n    var metadata = [];\n\n    if (uploadProgress) {\n      metadata.push(uploadProgress + \"%\");\n    } else if (uploadStatus && uploadStatus !== \"done\") {\n      metadata.push(t && t(\"uploadStatus:\" + uploadStatus || uploadStatus));\n    }\n\n    if (mediaWidth && mediaHeight) {\n      metadata.push(mediaWidth + \"x\" + mediaHeight);\n    } else if (mediaSize) {\n      metadata.push(formatMediaSize(mediaSize));\n    }\n\n    if (duration) {\n      metadata.push(formatMediaTime(duration));\n    }\n\n    if (content && content.captions && content.captions.length) {\n      metadata.push(content.captions.length + \" undertekster\");\n    }\n\n    return {\n      source: undefined,\n      sourceId: undefined,\n      imageUrl: imageUrl,\n      title: title,\n      typeLabel: typeLabel,\n      metadata: metadata,\n      filename: filename,\n      duration: duration\n    };\n  }\n};"]},"metadata":{},"sourceType":"module"}