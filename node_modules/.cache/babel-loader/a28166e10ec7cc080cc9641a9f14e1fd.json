{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/SizeSettings/SizeSettings.js\";\nimport React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"@kit-ui/core\";\nimport Button from '@material-ui/core/ButtonBase';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nconst sizes = {\n  \"xlarge\": \"4:4\",\n  \"xl\": \"4:4\",\n  \"large\": \"4:3\",\n  \"l\": \"4:3\",\n  \"l-m\": \"4:2\",\n  \"m-l\": \"2:4\",\n  \"medium\": \"2:2\",\n  \"m\": \"2:2\",\n  \"m-s\": \"2:1\",\n  \"s-m\": \"1:2\",\n  \"small\": \"1:1\",\n  \"s\": \"1:1\",\n  \"xsmall\": \"0.5:0.5\",\n  \"xs\": \"0.5:0.5\"\n};\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: theme.spacing(1.5)\n  },\n  list: {\n    position: \"relative\",\n    padding: 0,\n    margin: 0,\n    width: props => {\n      return props.cols * theme.spacing(7);\n    },\n    height: props => {\n      return props.rows * theme.spacing(7);\n    }\n  },\n  listItem: {\n    position: \"absolute\",\n    display: \"block\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.125)\",\n    zIndex: props => {\n      return props.zIndex;\n    },\n    outline: \"1px solid white\",\n    width: props => {\n      return props.cols * theme.spacing(7);\n    },\n    height: props => {\n      return props.rows * theme.spacing(7);\n    },\n    \"&:hover\": {\n      backgroundColor: \"rgba(0,0,0,.5)\",\n      color: \"white\"\n    },\n    \"&[aria-selected=true]\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"white\"\n    }\n  },\n  label: {\n    position: \"absolute\",\n    top: 'auto',\n    right: 0,\n    bottom: 0,\n    left: 'auto',\n    fontFamily: \"Akkurat, sans-serif\",\n    textTransform: \"uppercase\",\n    fontSize: '12px',\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst ListSettings = ({\n  value,\n  options,\n  onChange\n}) => {\n  const {\n    variant,\n    enumOptions,\n    enumDisabled\n  } = options;\n\n  if (!value) {\n    value = enumOptions[0].value;\n  }\n\n  const [expanded, setExpanded] = useState(false);\n  const anchorRef = useRef(null);\n\n  const _onSelect = value => {\n    onChange && onChange(value);\n    setExpanded(false);\n  };\n\n  const _onToggle = event => {\n    setExpanded(prevExpanded => !prevExpanded);\n  };\n\n  const _onCollapse = event => {\n    setExpanded(false);\n  };\n\n  const maxRows = 4;\n  const maxCols = 4;\n\n  const ListOption = option => {\n    const {\n      label,\n      value,\n      selected\n    } = option;\n    const grid = sizes && sizes[value] && sizes[value].split(':') || [4, 4];\n    const cols = grid[0];\n    const rows = grid[1];\n    const zIndex = maxRows * maxCols - cols * rows;\n    const classes = useStyles({\n      cols,\n      rows,\n      zIndex\n    });\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.listItem,\n      \"aria-selected\": selected,\n      onClick: () => _onSelect(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: classes.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, label));\n  };\n\n  const classes = useStyles({\n    cols: maxCols,\n    rows: maxRows\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    onClick: _onToggle,\n    ref: anchorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, value), /*#__PURE__*/React.createElement(Dropdown, {\n    expanded: expanded,\n    anchorEl: anchorRef.current,\n    onClickAway: _onCollapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, enumOptions && enumOptions.map((option, index) => {\n    return /*#__PURE__*/React.createElement(ListOption, Object.assign({}, option, {\n      key: index,\n      selected: option.value === value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 32\n      }\n    }));\n  }))));\n};\n\nListSettings.defaultProps = {};\nListSettings.propTypes = {};\nListSettings.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ListSettings\"\n};\nexport default ListSettings;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/SizeSettings/SizeSettings.js\"] = {\n    name: \"ListSettings\",\n    docgenInfo: ListSettings.__docgenInfo,\n    path: \"src/components/SizeSettings/SizeSettings.js\"\n  };\n}","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/SizeSettings/SizeSettings.js"],"names":["React","forwardRef","useState","useEffect","useRef","PropTypes","Dropdown","Button","IconButton","Icon","List","ListItem","ListItemIcon","ListItemText","makeStyles","sizes","useStyles","theme","button","padding","spacing","list","position","margin","width","props","cols","height","rows","listItem","display","top","left","backgroundColor","zIndex","outline","color","palette","primary","main","label","right","bottom","fontFamily","textTransform","fontSize","ListSettings","value","options","onChange","variant","enumOptions","enumDisabled","expanded","setExpanded","anchorRef","_onSelect","_onToggle","event","prevExpanded","_onCollapse","maxRows","maxCols","ListOption","option","selected","grid","split","classes","current","map","index","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React, { forwardRef, useState, useEffect, useRef } from 'react';\nimport PropTypes from \"prop-types\"\nimport { Dropdown } from \"@kit-ui/core\"\n\nimport Button from '@material-ui/core/ButtonBase';\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Icon from \"@material-ui/core/Icon\"\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst sizes = {\n    \"xlarge\": \"4:4\",\n    \"xl\": \"4:4\",\n    \"large\": \"4:3\",\n    \"l\": \"4:3\",\n    \"l-m\": \"4:2\",\n    \"m-l\": \"2:4\",\n    \"medium\": \"2:2\",\n    \"m\": \"2:2\",\n    \"m-s\": \"2:1\",\n    \"s-m\": \"1:2\",\n    \"small\": \"1:1\",\n    \"s\": \"1:1\",\n    \"xsmall\": \"0.5:0.5\",\n    \"xs\": \"0.5:0.5\",\n}\n\nconst useStyles = makeStyles(theme => ({\n\n    button: {\n        padding: theme.spacing(1.5)\n    },\n\n    list: {\n        position: \"relative\",\n        padding: 0,\n        margin: 0,\n        width: props => { return props.cols * theme.spacing(7) },\n        height: props => { return props.rows * theme.spacing(7) },\n    },\n\n    listItem: {\n        position: \"absolute\",\n        display: \"block\",\n        top: 0,\n        left: 0,\n        backgroundColor: \"rgba(0,0,0,.125)\",\n        zIndex: props => { return props.zIndex },\n\n        outline: \"1px solid white\",\n        width: props => { return props.cols * theme.spacing(7) },\n        height: props => { return props.rows * theme.spacing(7) },\n\n        \"&:hover\": {\n            backgroundColor: \"rgba(0,0,0,.5)\",\n            color: \"white\",\n        },\n        \"&[aria-selected=true]\": {\n            backgroundColor: theme.palette.primary.main,\n            color: \"white\"\n        }\n    },\n\n    label: {\n        position: \"absolute\",\n        top: 'auto',\n        right: 0,\n        bottom: 0,\n        left: 'auto',\n        fontFamily: \"Akkurat, sans-serif\",\n        textTransform: \"uppercase\",\n        fontSize: '12px',\n        padding: theme.spacing(0.5)\n    }\n\n}));\n\nconst ListSettings = ({\n    value, \n    options,\n    onChange\n}) => {\n\n    const {\n        variant,\n        enumOptions,\n        enumDisabled\n    } = options;\n\n    if (!value) {\n        value = enumOptions[0].value\n    }\n     \n    const [expanded, setExpanded] = useState(false);\n    const anchorRef = useRef(null)\n\n    const _onSelect = (value) => {\n        onChange && onChange(value)\n        setExpanded(false)\n    }\n\n    const _onToggle = (event) => {\n        setExpanded(prevExpanded => !prevExpanded);\n    }\n\n    const _onCollapse = (event) => {\n        setExpanded(false);\n    };\n\n    const maxRows = 4;\n    const maxCols = 4;\n\n\n    const ListOption = (option) => {\n        const { label, value, selected } = option\n\n        const grid = sizes && sizes[value]&& sizes[value].split(':') || [4,4]\n\n        const cols = grid[0]\n        const rows = grid[1]\n\n        const zIndex = maxRows*maxCols - cols*rows\n\n        const classes = useStyles({cols, rows, zIndex})\n\n        return (\n            <li className={classes.listItem} aria-selected={selected} onClick={() => _onSelect(value)}>\n                <b className={classes.label}>{label}</b>\n            </li>\n        )\n\n    }\n\n    const classes = useStyles({cols: maxCols, rows: maxRows})\n\n    return (\n        <React.Fragment>\n            <Button className={classes.button} onClick={_onToggle} ref={anchorRef}>{value}</Button>\n            <Dropdown expanded={expanded} anchorEl={anchorRef.current} onClickAway={_onCollapse}>\n                <ul className={classes.list}>\n                    { enumOptions && enumOptions.map((option, index) => {\n                        return <ListOption {...option} key={index} selected={option.value === value}/>\n                    })}\n                </ul>\n            </Dropdown>\n        </React.Fragment>\n    )\n\n}\n\nListSettings.defaultProps = {\n}\n\nListSettings.propTypes = {\n}\n\nexport default ListSettings;"]},"metadata":{},"sourceType":"module"}