{"ast":null,"code":"var _jsxFileName = \"/Users/inge/Sites/kit-kulturpunkt/src/components/NavSettings/GridSettingsList.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nconst gridUnit = 56;\nconst useStyles = makeStyles(theme => ({\n  list: {\n    position: \"relative\",\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0,\n    width: props => {\n      return props.cols * gridUnit + \"px\";\n    },\n    height: props => {\n      return props.rows * gridUnit + \"px\";\n    }\n  },\n  item: {\n    position: \"absolute\",\n    display: \"block\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.125)\"\n  },\n  button: {\n    outline: \"1px solid white\",\n    width: props => {\n      return props.cols * gridUnit + \"px\";\n    },\n    height: props => {\n      return props.rows * gridUnit + \"px\";\n    },\n    \"&:hover\": {\n      backgroundColor: \"rgba(0,0,0,.5)\",\n      color: \"white\"\n    },\n    \"&[aria-selected=true]\": {\n      backgroundColor: \"blue\",\n      color: \"white\"\n    }\n  },\n  label: {\n    position: \"absolute\",\n    top: 'auto',\n    right: 0,\n    bottom: 0,\n    left: 'auto',\n    fontFamily: \"Akkurat, sans-serif\",\n    fontSize: '12px',\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst GridItem = ({\n  size,\n  value,\n  label,\n  selected,\n  onClick,\n  ...props\n}) => {\n  const classes = useStyles(props);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    className: classes.button,\n    \"data-size\": size,\n    \"aria-selected\": selected,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, label)));\n};\n\nconst GridList = ({\n  children,\n  ...props\n}) => {\n  const classes = useStyles(props);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nconst OptionsGrid = ({\n  cols,\n  rows,\n  value,\n  options = [],\n  onSelect,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(GridList, {\n    cols: cols,\n    rows: rows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, options.map((item, index) => /*#__PURE__*/React.createElement(GridItem, Object.assign({}, item, {\n    selected: item.value === value,\n    key: index,\n    onClick: () => onSelect(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), item.value)));\n};\n\nexport default OptionsGrid;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/src/components/NavSettings/GridSettingsList.js"],"names":["React","makeStyles","ButtonBase","gridUnit","useStyles","theme","list","position","listStyle","padding","margin","width","props","cols","height","rows","item","display","top","left","backgroundColor","button","outline","color","label","right","bottom","fontFamily","fontSize","spacing","GridItem","size","value","selected","onClick","classes","GridList","children","OptionsGrid","options","onSelect","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nconst gridUnit = 56;\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        position: \"relative\",\n        listStyle: \"none\",\n        padding: 0,\n        margin: 0,\n        width: props => { return props.cols * gridUnit + \"px\" },\n        height: props => { return props.rows * gridUnit + \"px\" },\n    },\n    item: {\n        position: \"absolute\",\n        display: \"block\",\n        top: 0,\n        left: 0,\n        backgroundColor: \"rgba(0,0,0,.125)\",\n    },\n    button: {\n        outline: \"1px solid white\",\n        width: props => { return props.cols * gridUnit + \"px\" },\n        height: props => { return props.rows * gridUnit + \"px\" },\n\n        \"&:hover\": {\n            backgroundColor: \"rgba(0,0,0,.5)\",\n            color: \"white\",\n        },\n        \"&[aria-selected=true]\": {\n            backgroundColor: \"blue\",\n            color: \"white\"\n        }\n    },\n    label: {\n        position: \"absolute\",\n        top: 'auto',\n        right: 0,\n        bottom: 0,\n        left: 'auto',\n        fontFamily: \"Akkurat, sans-serif\",\n        fontSize: '12px',\n        padding: theme.spacing(0.5)\n    }\n}));\n\nconst GridItem = ({size, value, label, selected, onClick, ...props}) => {\n    const classes = useStyles(props)\n    return (\n        <li className={classes.item}>\n            <ButtonBase className={classes.button} data-size={size} aria-selected={selected} onClick={onClick}>\n                <b className={classes.label}>{label}</b>\n            </ButtonBase>\n        </li>\n    )\n}\n\nconst GridList = ({children, ...props}) => {\n    const classes = useStyles(props)\n    return (\n        <ul className={classes.list}>\n            {children}\n        </ul>\n    )\n}\n\nconst OptionsGrid = ({cols, rows, value, options = [], onSelect, ...props}) => {\n\n    return (\n        <GridList cols={cols} rows={rows}>\n            {options.map((item, index) => (\n                <GridItem {...item} selected={item.value === value} key={index} onClick={() => onSelect(item)}>{item.value}</GridItem>\n            ))}\n        </GridList>\n    )\n\n}\n\nexport default OptionsGrid;"]},"metadata":{},"sourceType":"module"}