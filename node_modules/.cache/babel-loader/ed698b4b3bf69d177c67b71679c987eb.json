{"ast":null,"code":"\"use strict\"; // Make sure lines are splited correctly\n// http://stackoverflow.com/questions/1155678/javascript-string-newline-character\n\nvar NEW_LINE = /\\r\\n|\\n|\\r/;\nvar COLON = \":\"; // var COMMA = \",\";\n// var DQUOTE = \"\\\"\";\n// var SEMICOLON = \";\";\n\nvar SPACE = \" \";\n/**\n * Take ical string data and convert to JSON\n *\n * @param {string} source\n * @returns {Object}\n */\n\nfunction convert(source) {\n  var currentKey = \"\",\n      currentValue = \"\",\n      parentObj = {},\n      splitAt;\n  var output = {};\n  var lines = source.split(NEW_LINE);\n  var currentObj = output;\n  var parents = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n\n    if (line.charAt(0) === SPACE) {\n      currentObj[currentKey] += line.substr(1);\n    } else {\n      splitAt = line.indexOf(COLON);\n\n      if (splitAt < 0) {\n        continue;\n      }\n\n      currentKey = line.substr(0, splitAt);\n      currentValue = line.substr(splitAt + 1);\n\n      switch (currentKey) {\n        case \"BEGIN\":\n          parents.push(parentObj);\n          parentObj = currentObj;\n\n          if (parentObj[currentValue] == null) {\n            parentObj[currentValue] = [];\n          } // Create a new object, store the reference for future uses\n\n\n          currentObj = {};\n          parentObj[currentValue].push(currentObj);\n          break;\n\n        case \"END\":\n          currentObj = parentObj;\n          parentObj = parents.pop();\n          break;\n\n        default:\n          if (currentObj[currentKey]) {\n            if (!Array.isArray(currentObj[currentKey])) {\n              currentObj[currentKey] = [currentObj[currentKey]];\n            }\n\n            currentObj[currentKey].push(currentValue);\n          } else {\n            currentObj[currentKey] = currentValue;\n          }\n\n      }\n    }\n  }\n\n  return output;\n}\n/**\n * Take JSON, revert back to ical\n * @param {Object} object\n * @return {String}\n */\n\n\nfunction revert(object) {\n  var lines = [];\n\n  for (var key in object) {\n    var value = object[key];\n\n    if (Array.isArray(value)) {\n      if (key === \"RDATE\") {\n        value.forEach(function (item) {\n          lines.push(key + \":\" + item);\n        });\n      } else {\n        value.forEach(function (item) {\n          lines.push(\"BEGIN:\" + key);\n          lines.push(revert(item));\n          lines.push(\"END:\" + key);\n        });\n      }\n    } else {\n      var fullLine = key + \":\" + value;\n\n      do {\n        // According to ical spec, lines of text should be no longer\n        // than 75 octets\n        lines.push(fullLine.substr(0, 75));\n        fullLine = SPACE + fullLine.substr(75);\n      } while (fullLine.length > 1);\n    }\n  }\n\n  return lines.join(\"\\n\");\n}\n\nmodule.exports = {\n  revert: revert,\n  convert: convert\n};","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/ical2json/index.js"],"names":["NEW_LINE","COLON","SPACE","convert","source","currentKey","currentValue","parentObj","splitAt","output","lines","split","currentObj","parents","i","length","line","charAt","substr","indexOf","push","pop","Array","isArray","revert","object","key","value","forEach","item","fullLine","join","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// Make sure lines are splited correctly\n// http://stackoverflow.com/questions/1155678/javascript-string-newline-character\nvar NEW_LINE = /\\r\\n|\\n|\\r/;\nvar COLON = \":\";\n// var COMMA = \",\";\n// var DQUOTE = \"\\\"\";\n// var SEMICOLON = \";\";\nvar SPACE = \" \";\n\n/**\n * Take ical string data and convert to JSON\n *\n * @param {string} source\n * @returns {Object}\n */\nfunction convert(source) {\n  var currentKey = \"\",\n    currentValue = \"\",\n    parentObj = {},\n    splitAt;\n\n  var output = {};\n  var lines = source.split(NEW_LINE);\n\n  var currentObj = output;\n  var parents = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    if (line.charAt(0) === SPACE) {\n      currentObj[currentKey] += line.substr(1);\n    } else {\n      splitAt = line.indexOf(COLON);\n\n      if (splitAt < 0) {\n        continue;\n      }\n\n      currentKey = line.substr(0, splitAt);\n      currentValue = line.substr(splitAt + 1);\n\n      switch (currentKey) {\n        case \"BEGIN\":\n          parents.push(parentObj);\n          parentObj = currentObj;\n          if (parentObj[currentValue] == null) {\n            parentObj[currentValue] = [];\n          }\n          // Create a new object, store the reference for future uses\n          currentObj = {};\n          parentObj[currentValue].push(currentObj);\n          break;\n        case \"END\":\n          currentObj = parentObj;\n          parentObj = parents.pop();\n          break;\n        default:\n          if (currentObj[currentKey]) {\n            if (!Array.isArray(currentObj[currentKey])) {\n              currentObj[currentKey] = [currentObj[currentKey]];\n            }\n            currentObj[currentKey].push(currentValue);\n          } else {\n            currentObj[currentKey] = currentValue;\n          }\n      }\n    }\n  }\n  return output;\n}\n\n/**\n * Take JSON, revert back to ical\n * @param {Object} object\n * @return {String}\n */\nfunction revert(object) {\n  var lines = [];\n\n  for (var key in object) {\n    var value = object[key];\n    if (Array.isArray(value)) {\n      if (key === \"RDATE\") {\n        value.forEach(function(item) {\n          lines.push(key + \":\" + item);\n        });\n      } else {\n        value.forEach(function(item) {\n          lines.push(\"BEGIN:\" + key);\n          lines.push(revert(item));\n          lines.push(\"END:\" + key);\n        });\n      }\n    } else {\n      var fullLine = key + \":\" + value;\n      do {\n        // According to ical spec, lines of text should be no longer\n        // than 75 octets\n        lines.push(fullLine.substr(0, 75));\n        fullLine = SPACE + fullLine.substr(75);\n      } while (fullLine.length > 1);\n    }\n  }\n\n  return lines.join(\"\\n\");\n}\n\nmodule.exports = {\n  revert: revert,\n  convert: convert\n};\n"]},"metadata":{},"sourceType":"script"}