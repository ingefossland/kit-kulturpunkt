{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport ListSettings from \"./ListSettings\";\nimport GridSettings from \"./GridSettings\";\nvar templates = {\n  \"list\": ListSettings,\n  \"grid\": GridSettings\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    settings: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexWrap: \"nowrap\"\n    }\n  };\n});\n/** NavSettings renders settings with options. Each setting should have an onChange function. */\n\nvar NavSettings = function NavSettings(_ref) {\n  var className = _ref.className,\n      _ref$settings = _ref.settings,\n      settings = _ref$settings === void 0 ? [] : _ref$settings;\n  var classes = useStyles();\n\n  if (!settings.length) {\n    return false;\n  }\n\n  var renderSettings = function renderSettings(_ref2, index) {\n    var template = _ref2.template,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"template\"]);\n\n    var SettingsTemplate;\n\n    if (template && typeof template === \"function\") {\n      SettingsTemplate = template;\n    } else if (template && templates[template]) {\n      SettingsTemplate = templates[template];\n    } else {\n      SettingsTemplate = ListSettings;\n    }\n\n    return /*#__PURE__*/React.createElement(SettingsTemplate, _extends({}, props, {\n      key: index\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className || classes.settings\n  }, settings && settings.map(function (settingsProps, index) {\n    return renderSettings(settingsProps);\n  }));\n};\n\nNavSettings.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  settings: PropTypes.array\n} : {};\nexport default NavSettings;","map":{"version":3,"sources":["/Users/inge/Sites/kit-kulturpunkt/node_modules/@kit-ui/schema/node_modules/@kit-ui/admin/es/NavSettings/NavSettings.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","makeStyles","PropTypes","ListSettings","GridSettings","templates","useStyles","theme","settings","display","alignItems","justifyContent","flexWrap","NavSettings","_ref","className","_ref$settings","classes","renderSettings","_ref2","index","template","props","SettingsTemplate","createElement","map","settingsProps","propTypes","process","env","NODE_ENV","array"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport ListSettings from \"./ListSettings\";\nimport GridSettings from \"./GridSettings\";\nvar templates = {\n  \"list\": ListSettings,\n  \"grid\": GridSettings\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    settings: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexWrap: \"nowrap\"\n    }\n  };\n});\n/** NavSettings renders settings with options. Each setting should have an onChange function. */\n\nvar NavSettings = function NavSettings(_ref) {\n  var className = _ref.className,\n      _ref$settings = _ref.settings,\n      settings = _ref$settings === void 0 ? [] : _ref$settings;\n  var classes = useStyles();\n\n  if (!settings.length) {\n    return false;\n  }\n\n  var renderSettings = function renderSettings(_ref2, index) {\n    var template = _ref2.template,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"template\"]);\n\n    var SettingsTemplate;\n\n    if (template && typeof template === \"function\") {\n      SettingsTemplate = template;\n    } else if (template && templates[template]) {\n      SettingsTemplate = templates[template];\n    } else {\n      SettingsTemplate = ListSettings;\n    }\n\n    return /*#__PURE__*/React.createElement(SettingsTemplate, _extends({}, props, {\n      key: index\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className || classes.settings\n  }, settings && settings.map(function (settingsProps, index) {\n    return renderSettings(settingsProps);\n  }));\n};\n\nNavSettings.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  settings: PropTypes.array\n} : {};\nexport default NavSettings;"]},"metadata":{},"sourceType":"module"}