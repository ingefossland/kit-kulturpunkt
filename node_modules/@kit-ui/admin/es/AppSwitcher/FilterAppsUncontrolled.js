function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { WidgetSearch, WidgetScroller } from "../";
import AppsList from "./AppsList";
import AppsGrid from "./AppsGrid";
import { makeStyles } from '@material-ui/core/styles';
var useStyles = makeStyles(function (theme) {
  return {
    root: {
      position: "absolute",
      width: "100%",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
    search: {
      display: "flex",
      position: "relative",
      backgroundColor: "transparent",
      color: "black",
      height: "36px",
      overflow: "hidden",
      fontFamily: "Akkurat, sans-serif",
      margin: "12px"
    },
    scroller: {
      position: "absolute",
      zIndex: 1,
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
    results: {
      marginTop: theme.spacing(7),
      display: "flex",
      width: "100%",
      flexWrap: "wrap"
    },
    nohits: {
      fontFamily: "Akkurat, sans-serif",
      fontSize: "14px",
      padding: theme.spacing(1.5)
    }
  };
});

var FilterAppsUncontrolled = function FilterAppsUncontrolled(_ref) {
  var className = _ref.className,
      search = _ref.search,
      q = _ref.q,
      _ref$apps = _ref.apps,
      apps = _ref$apps === void 0 ? [] : _ref$apps,
      _ref$layout = _ref.layout,
      layout = _ref$layout === void 0 ? "list" : _ref$layout,
      onSearch = _ref.onSearch,
      onSelect = _ref.onSelect;
  var classes = useStyles();

  if (!apps.length) {
    return /*#__PURE__*/React.createElement("div", {
      className: className || classes.root
    }, /*#__PURE__*/React.createElement(WidgetSearch, _extends({}, search, {
      value: q,
      onChange: onSearch
    })), /*#__PURE__*/React.createElement(WidgetScroller, {
      className: classes.scroller
    }, /*#__PURE__*/React.createElement("div", {
      className: classes.results
    }, /*#__PURE__*/React.createElement("p", {
      className: classes.nohits
    }, "Ingen treff"))));
  }

  var placeholder = search.placeholder.replace('{hits}', apps.length);
  return /*#__PURE__*/React.createElement("div", {
    className: className || classes.root
  }, /*#__PURE__*/React.createElement(WidgetSearch, _extends({}, search, {
    placeholder: placeholder,
    value: q,
    onChange: onSearch
  })), /*#__PURE__*/React.createElement(WidgetScroller, {
    className: classes.scroller
  }, layout === "grid" && /*#__PURE__*/React.createElement(AppsGrid, {
    className: classes.results,
    apps: apps,
    onSelect: onSelect
  }), layout === "list" && /*#__PURE__*/React.createElement(AppsList, {
    className: classes.results,
    apps: apps,
    onSelect: onSelect
  })));
};

FilterAppsUncontrolled.defaultProps = {
  search: {
    placeholder: "SÃ¸k i {hits} applikasjoner"
  }
};
export default FilterAppsUncontrolled;