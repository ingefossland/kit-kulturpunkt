function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import PropTypes from "prop-types";
import { makeStyles } from '@material-ui/core/styles';
import { withResizeDetector } from 'react-resize-detector';
var useStyles = makeStyles(function (theme) {
  return {
    gallery: {
      display: "block",
      padding: function padding(props) {
        return props.padding && theme.spacing(props.padding);
      },
      width: "100%"
    },
    list: {
      display: "flex",
      flexWrap: "wrap",
      margin: function margin(props) {
        return props.spacing && theme.spacing(props.spacing * -0.5);
      }
    },
    item: {
      width: function width(props) {
        return props.width + "px";
      },
      maxWidth: function maxWidth(props) {
        return props.maxWidth + "px";
      },
      margin: function margin(props) {
        return props.spacing && theme.spacing(props.spacing * 0.5);
      },
      "& > *": {
        maxWidth: "100%"
      }
    }
  };
});

var calculateCutOff = function calculateCutOff(_ref) {
  var rowWidth = _ref.rowWidth,
      delta = _ref.delta,
      spacing = _ref.spacing,
      _ref$row = _ref.row,
      row = _ref$row === void 0 ? [] : _ref$row;
  //    console.log('delta', delta)
  var cutoff = [];
  var cutsum = 0;

  for (var i in row) {
    var item = row[i];
    var fractOfLen = item.maxWidth / rowWidth; //        console.log('fractOfLen', fractOfLen)

    cutoff[i] = Math.floor(fractOfLen * delta);
    cutsum += cutoff[i];
  } //    console.log('cutoff', cutoff)


  var stillToCutOff = delta - cutsum;

  while (stillToCutOff > 0) {
    for (i in cutoff) {
      cutoff[i]++;
      stillToCutOff--;
      if (stillToCutOff < 0) break;
    }
  }

  return cutoff;
};

var getGalleryRow = function getGalleryRow(_ref2) {
  var maxWidth = _ref2.maxWidth,
      gap = _ref2.gap,
      _ref2$items = _ref2.items,
      items = _ref2$items === void 0 ? [] : _ref2$items;
  var rowPlusGap = maxWidth + gap;
  var row = [];
  var rowWidth = 0; //    console.log('items', items)

  while (items.length > 0 && rowWidth < rowPlusGap) {
    var item = items.shift();
    row.push(item);
    rowWidth += item.maxWidth + gap; //        console.log('rowWidth' + rowWidth)
  }

  var delta = rowWidth - rowPlusGap; //    console.log('delta', + delta)

  if (row.length > 0 && delta > 0) {
    var cutoff = calculateCutOff({
      rowWidth: rowWidth,
      gap: gap,
      delta: delta,
      row: row
    });

    for (var i in row) {
      var pixelsToRemove = cutoff[i];
      var _item = row[i];
      _item.maxWidth = _item.maxWidth - pixelsToRemove;
    }
  } else {
    for (var j in row) {
      var _item2 = row[j];
      _item2.maxWidth = _item2.maxWidth;
    }
  }

  return row;
};

var getGalleryItem = function getGalleryItem(_ref3) {
  var props = _ref3.props;
  var maxWidth = props.width || props.mediaWidth;
};

var getGallery = function getGallery(_ref4) {
  var maxWidth = _ref4.maxWidth,
      maxRows = _ref4.maxRows,
      gap = _ref4.gap,
      children = _ref4.children;
  if (!children) return [];
  if (!children.length) return [];
  if (!maxWidth) return [];
  var items = React.Children.toArray(children).map(function (child, index) {
    return _extends({}, child.props, {
      maxWidth: child.props.width * 1
    });
  }); //    console.log('items', items)

  var rows = [];

  while (items.length > 0) {
    rows.push(getGalleryRow({
      maxWidth: maxWidth,
      gap: gap,
      items: items
    }));
  }

  var cols = [];

  for (var r in rows) {
    for (var i in rows[r]) {
      var item = rows[r][i];

      if (maxRows) {
        if (r < maxRows) {
          cols.push(item);
        }
      } else {
        cols.push(item);
      }
    }
  }

  return cols;
};

var GalleryItem = function GalleryItem(_ref5) {
  var _ref5$width = _ref5.width,
      width = _ref5$width === void 0 ? 180 : _ref5$width,
      maxWidth = _ref5.maxWidth,
      _ref5$spacing = _ref5.spacing,
      spacing = _ref5$spacing === void 0 ? 1 : _ref5$spacing,
      children = _ref5.children,
      debug = _ref5.debug,
      props = _objectWithoutPropertiesLoose(_ref5, ["width", "maxWidth", "spacing", "children", "debug"]);

  var classes = useStyles({
    width: width,
    maxWidth: maxWidth,
    spacing: spacing
  });
  return /*#__PURE__*/React.createElement("div", {
    className: classes.item
  }, children, debug && /*#__PURE__*/React.createElement("div", null, width, "/", maxWidth, "/", spacing));
};

var Gallery = function Gallery(_ref6) {
  var width = _ref6.width,
      _ref6$spacing = _ref6.spacing,
      spacing = _ref6$spacing === void 0 ? 1 : _ref6$spacing,
      _ref6$padding = _ref6.padding,
      padding = _ref6$padding === void 0 ? 0 : _ref6$padding,
      children = _ref6.children,
      _ref6$debug = _ref6.debug,
      debug = _ref6$debug === void 0 ? false : _ref6$debug;
  var maxWidth = width - padding * 8 * 2;
  var gap = spacing * 8;
  var classes = useStyles({
    padding: padding,
    spacing: spacing
  });
  var gallery = getGallery({
    maxWidth: maxWidth,
    gap: gap,
    children: children
  });
  return /*#__PURE__*/React.createElement("section", {
    className: classes.gallery,
    "data-layout": "gallery"
  }, /*#__PURE__*/React.createElement("div", {
    className: classes.list
  }, children.map(function (child, index) {
    var maxWidth = gallery[index] && gallery[index].maxWidth;
    return /*#__PURE__*/React.createElement(GalleryItem, _extends({}, child.props, {
      maxWidth: maxWidth,
      debug: debug,
      spacing: spacing,
      key: index
    }), child);
  })));
};

Gallery.propTypes = process.env.NODE_ENV !== "production" ? {
  spacing: PropTypes.number,
  padding: PropTypes.number,
  children: PropTypes.node
} : {};
export default withResizeDetector(Gallery);