function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

export function getImageAnnotationsSchema(props) {
  var defaultSchema = {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "top": {
          "type": "number",
          "default": 50,
          "readonly": true
        },
        "left": {
          "type": "number",
          "default": 50,
          "readonly": true
        },
        "x": {
          "type": "number",
          "default": 0,
          "readonly": true
        },
        "y": {
          "type": "number",
          "default": 0,
          "readonly": true
        },
        "radius": {
          "type": "number",
          "minimum": 1,
          "maximum": 100,
          "default": 1
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    }
  };
  return defaultSchema;
}
export function getImageAnnotationsField(props) {
  var schema = getImageAnnotationsSchema(props);
  return _extends({}, props, {
    schema: schema,
    uiSchema: _extends({}, props.uiSchema, {
      "ui:field": "imageAnnotations"
    })
  });
}