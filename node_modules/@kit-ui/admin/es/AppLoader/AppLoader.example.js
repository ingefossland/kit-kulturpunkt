function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useState } from 'react';
import AppLoader from "./AppLoader";

var AppLoaderExample = function AppLoaderExample(props) {
  var _useState = useState(props.isLoading || true),
      isLoading = _useState[0],
      setIsLoading = _useState[1];

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppLoader, _extends({}, props, {
    isLoading: isLoading
  }), "App loaded"), /*#__PURE__*/React.createElement("button", {
    style: {
      position: "fixed",
      zIndex: 2001,
      bottom: 0,
      right: 0
    },
    onClick: function onClick() {
      return setIsLoading(!isLoading);
    }
  }, "Toggle"));
};

export default AppLoaderExample;