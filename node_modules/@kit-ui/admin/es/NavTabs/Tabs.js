function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import ButtonTab from "./ButtonTab";
import Tabs from '@material-ui/core/Tabs';
import Tab from '@material-ui/core/Tab';
import "./NavTabs.scss";

var NavTabs = /*#__PURE__*/function (_Component) {
  _inheritsLoose(NavTabs, _Component);

  function NavTabs() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "renderTab", function (tab, index) {
      return /*#__PURE__*/React.createElement(Tab, tab);
      return /*#__PURE__*/React.createElement(ButtonTab, _extends({}, tab, {
        role: "tab",
        tabindex: index,
        key: index
      }));
    });

    return _this;
  }

  var _proto = NavTabs.prototype;

  _proto.render = function render() {
    var tabs = this.props.tabs;

    if (!tabs) {
      return false;
    }

    return /*#__PURE__*/React.createElement(Tabs, null, tabs.map(this.renderTab));
    return /*#__PURE__*/React.createElement("nav", {
      className: "nav-tabs"
    }, tabs.map(this.renderTab));
  };

  return NavTabs;
}(Component);

_defineProperty(NavTabs, "defaultProps", {
  tabs: []
});

export default NavTabs;