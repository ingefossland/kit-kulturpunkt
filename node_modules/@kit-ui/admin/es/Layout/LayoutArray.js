function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import LayoutList from "./LayoutList";
import LayoutGrid from "./LayoutGrid";
import LayoutButtons from "./LayoutButtons";

var LayoutArray = function LayoutArray(_ref) {
  var children = _ref.children,
      grid = _ref.grid,
      gridItem = _ref.gridItem,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "grid", "gridItem"]);

  if (grid && gridItem) {
    return /*#__PURE__*/React.createElement(LayoutGrid, _extends({
      grid: grid,
      gridItem: gridItem
    }, props), children, /*#__PURE__*/React.createElement(LayoutButtons, _extends({}, props, {
      buttonGroupProps: {
        fullWidth: true
      }
    })));
  }

  return /*#__PURE__*/React.createElement(LayoutList, props, children);
};

LayoutArray.defaultProps = {
  padding: 0,
  spacing: 0
};
export default LayoutArray;