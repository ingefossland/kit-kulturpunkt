function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import Path from "./Path";
import PathFilters from "./PathFilters";
import PathItem from "./PathItem";

var NavPath = function NavPath(_ref) {
  var className = _ref.className,
      parents = _ref.parents,
      filters = _ref.filters,
      title = _ref.title,
      onSelect = _ref.onSelect,
      children = _ref.children;

  var handleSelect = function handleSelect(item) {
    item.onClick && item.onClick();
    onSelect && onSelect(item);
  };

  return /*#__PURE__*/React.createElement(Path, {
    className: className
  }, parents && parents.map(function (parent, index) {
    return /*#__PURE__*/React.createElement(PathItem, _extends({}, parent, {
      onClick: function onClick() {
        return handleSelect(parent);
      },
      key: index
    }), parent.label || parent.title);
  }), filters && /*#__PURE__*/React.createElement(PathFilters, {
    filters: filters,
    onSelect: handleSelect
  }), title && /*#__PURE__*/React.createElement(PathItem, null, title), children);
};

export default NavPath;