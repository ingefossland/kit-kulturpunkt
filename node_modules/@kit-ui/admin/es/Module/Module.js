var _ref2;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import EditableModule from "./EditableModule";
import ExpandedModule from "./ExpandedModule";
import ListModule from "./ListModule";
import TableModule from "./TableModule";
import GridModule from "./GridModule";
import CardModule from "./CardModule";
var templates = {
  "list": ListModule,
  "table": TableModule,
  "grid": GridModule,
  "card": CardModule
};

var Module = function Module(_ref) {
  var variant = _ref.variant,
      expanded = _ref.expanded,
      editable = _ref.editable,
      editing = _ref.editing,
      children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, ["variant", "expanded", "editable", "editing", "children"]);

  if (editable && editing) {
    return /*#__PURE__*/React.createElement(EditableModule, _extends({}, props, {
      editing: true
    }), children);
  }

  if (expanded) {
    return /*#__PURE__*/React.createElement(ExpandedModule, _extends({}, props, {
      editable: editable,
      editing: editing
    }), children);
  }

  var ModuleTemplate = templates && templates[variant] || ListModule;
  return /*#__PURE__*/React.createElement(ModuleTemplate, _extends({}, props, {
    editable: editable,
    editing: editing
  }));
};

Module.defaultProps = {
  variant: "list",
  expanded: false,
  editable: false,
  editing: false
};
Module.propTypes = process.env.NODE_ENV !== "production" ? (_ref2 = {
  variant: PropTypes.oneOf(["list", "table", "grid", "card"]),
  expanded: PropTypes.bool,
  editable: PropTypes.bool,
  editing: PropTypes.bool,
  title: PropTypes.string,
  description: PropTypes.string,
  label: PropTypes.any,
  status: PropTypes.string,
  datetime: PropTypes.string,
  author: PropTypes.string
}, _ref2["status"] = PropTypes.string, _ref2) : {};
export default Module;