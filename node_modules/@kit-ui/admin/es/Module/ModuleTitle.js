import React from 'react';
import PropTypes from "prop-types";
import Typography from '@material-ui/core/Typography';
import Link from '@material-ui/core/Link';
import { makeStyles } from '@material-ui/core/styles';
var useStyles = makeStyles(function (theme) {
  return {
    root: {
      fontFamily: "Akkurat, sans-serif",
      fontSize: "16px",
      lineHeight: "24px",
      fontWeight: "bold",
      maxWidth: "100%",
      color: theme.palette.text.primary
    },
    link: {
      color: "inherit",
      "&:hover": {
        cursor: "pointer"
      }
    }
  };
});

var ModuleTitle = function ModuleTitle(_ref) {
  var className = _ref.className,
      title = _ref.title,
      _ref$untitled = _ref.untitled,
      untitled = _ref$untitled === void 0 ? "Untitled" : _ref$untitled,
      status = _ref.status,
      onClick = _ref.onClick,
      children = _ref.children;
  var classes = useStyles();

  if (!title && children) {
    title = children;
  }

  if (!title && untitled) {
    title = untitled;
  }

  if (onClick) {
    return /*#__PURE__*/React.createElement(Typography, {
      "data-name": "title",
      className: className || classes.root,
      component: "h2",
      noWrap: true
    }, /*#__PURE__*/React.createElement(Link, {
      className: classes.link,
      onClick: onClick
    }, title));
  }

  return /*#__PURE__*/React.createElement(Typography, {
    "data-name": "title",
    className: className || classes.root,
    component: "h2",
    noWrap: true
  }, title);
};

ModuleTitle.propTypes = process.env.NODE_ENV !== "production" ? {
  untitled: PropTypes.string,
  title: PropTypes.string,
  onClick: PropTypes.func
} : {};
ModuleTitle.defaultProps = {
  onClick: undefined
};
export default ModuleTitle;