import React from 'react';
import PropTypes from "prop-types";
import Paper from '@material-ui/core/Paper';
import { makeStyles } from '@material-ui/core/styles';
var useStyles = makeStyles(function (theme) {
  return {
    root: {
      "&[data-status=trash]": {
        "& figure": {
          opacity: "0.5"
        }
      },
      "&.sortable-helper": {
        boxShadow: theme.shadows[12],
        zIndex: 2000
      }
    }
  };
});
/** ModuleBase is used as a wrapper for all modules, setting common variables that other modules need.  */

var ModuleBase = function ModuleBase(_ref) {
  var id = _ref.id,
      className = _ref.className,
      component = _ref.component,
      status = _ref.status,
      selected = _ref.selected,
      deleted = _ref.deleted,
      erased = _ref.erased,
      expanded = _ref.expanded,
      elevation = _ref.elevation,
      onClick = _ref.onClick,
      children = _ref.children;
  var classes = useStyles();

  if (component === "tr") {
    return /*#__PURE__*/React.createElement("tr", {
      id: id,
      className: className || classes.root,
      "data-status": status,
      "data-deleted": deleted,
      "data-erased": erased,
      "aria-expanded": expanded,
      "aria-selected": selected
    }, children);
  }

  if (!elevation) {
    return /*#__PURE__*/React.createElement("article", {
      id: id,
      className: className || classes.root,
      "data-status": status,
      "data-deleted": deleted,
      "data-erased": erased,
      "aria-expanded": expanded,
      "aria-selected": selected,
      role: onClick && "button",
      onClick: onClick
    }, children);
  }

  return /*#__PURE__*/React.createElement(Paper, {
    id: id,
    component: component,
    className: className || classes.root,
    "data-status": status,
    "data-deleted": deleted,
    "data-erased": erased,
    "data-elevated": true,
    "aria-expanded": expanded,
    "aria-selected": selected,
    elevation: elevation,
    square: true,
    role: onClick && "button",
    onClick: onClick
  }, children);
};

ModuleBase.defaultProps = {
  component: "article",
  elevation: 0
};
ModuleBase.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Id */
  id: PropTypes.string,

  /** className */
  className: PropTypes.string,

  /** Which component to use */
  component: PropTypes.string,

  /** Elevation */
  elevation: PropTypes.number,

  /** Status */
  status: PropTypes.string,

  /** Expanded or not */
  expanded: PropTypes.bool,

  /** Selected or not */
  selected: PropTypes.bool,

  /** Deleted or not */
  deleted: PropTypes.bool,

  /** Erased or not */
  erased: PropTypes.bool,

  /** onClick */
  onClick: PropTypes.func
} : {};
export default ModuleBase;