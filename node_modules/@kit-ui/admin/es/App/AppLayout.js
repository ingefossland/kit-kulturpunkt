function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import PropTypes from "prop-types";
import { AppBase, AppHeader, AppSidebar, AppContent, AppBody } from "../";
import { NavAction, NavMenu } from "../";
import { makeStyles } from '@material-ui/core/styles';
var useStyles = makeStyles(function (theme) {
  var _ariaExpandedTrue, _ariaExpandedTrue2;

  return {
    app: {
      position: "absolute",
      backgroundColor: theme.palette.background.default,
      zIndex: 1,
      top: 0,
      right: 0,
      left: 0,
      bottom: 0,
      overflow: "hidden",
      display: "flex",
      flexDirection: "column"
    },
    header: {
      position: "absolute",
      height: theme.spacing(8),
      overflow: "hidden",
      marginTop: theme.spacing(-8),
      transition: ".125s ease-out",
      "&[aria-expanded=true]": {
        marginTop: 0,
        "& + *": {
          marginTop: theme.spacing(8)
        }
      }
    },
    body: {
      position: "relative",
      transition: ".125s ease-out",
      display: "flex",
      flexBasis: 0,
      flexGrow: 1
    },
    sidebar: {
      width: function width(props) {
        return props.sidebar.width;
      },
      marginLeft: function marginLeft(props) {
        return props.sidebar.width * -1;
      },
      transition: ".125s ease-out",
      "&[aria-expanded=true]": (_ariaExpandedTrue = {}, _ariaExpandedTrue[theme.breakpoints.up('sm')] = {
        marginLeft: 0
      }, _ariaExpandedTrue),
      "&[aria-expanded=true] + *": (_ariaExpandedTrue2 = {}, _ariaExpandedTrue2[theme.breakpoints.up('sm')] = {//               marginLeft: props => { return props.sidebar.width },
      }, _ariaExpandedTrue2)
    },
    content: {
      flexGrow: 1,
      display: "flex",
      flexDirection: "column",
      position: "relative"
    },
    navAction: {
      position: "relative",
      zIndex: 2,
      margin: theme.spacing(3)
    },
    navCalendar: {
      margin: theme.spacing(2, .5)
    },
    navMenu: {
      margin: theme.spacing(2)
    }
  };
});
/** AppLayout is a wrapper for all apps using AppHeader */

var AppLayout = function AppLayout(_ref) {
  var _ref$app = _ref.app,
      app = _ref$app === void 0 ? {} : _ref$app,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? undefined : _ref$theme,
      _ref$header = _ref.header,
      header = _ref$header === void 0 ? {} : _ref$header,
      _ref$sidebar = _ref.sidebar,
      sidebar = _ref$sidebar === void 0 ? {
    width: 224
  } : _ref$sidebar,
      _ref$search = _ref.search,
      search = _ref$search === void 0 ? undefined : _ref$search,
      _ref$subview = _ref.subview,
      subview = _ref$subview === void 0 ? undefined : _ref$subview,
      _ref$primaryAction = _ref.primaryAction,
      primaryAction = _ref$primaryAction === void 0 ? undefined : _ref$primaryAction,
      menu = _ref.menu,
      _ref$menuByUrl = _ref.menuByUrl,
      menuByUrl = _ref$menuByUrl === void 0 ? {} : _ref$menuByUrl,
      _ref$currentUrl = _ref.currentUrl,
      currentUrl = _ref$currentUrl === void 0 ? undefined : _ref$currentUrl,
      onSelect = _ref.onSelect,
      children = _ref.children;

  if (search && app.search) {
    search = _extends({}, app.search, search);
  }

  if (!menu && app.menu) {
    menu = app.menu;
  }

  if (!primaryAction && app.primaryAction) {
    primaryAction = app.primaryAction;
  }

  header = _extends({
    title: app.title,
    subtitle: app.subtitle,
    subview: subview,
    search: search
  }, header);
  sidebar = _extends({}, sidebar, {
    width: 256
  });
  var classes = useStyles({
    header: header,
    sidebar: sidebar
  });
  return /*#__PURE__*/React.createElement(AppBase, {
    theme: theme,
    className: classes.app
  }, /*#__PURE__*/React.createElement(AppHeader, _extends({}, header, {
    className: classes.header
  })), /*#__PURE__*/React.createElement(AppBody, {
    className: classes.body
  }, /*#__PURE__*/React.createElement(AppSidebar, _extends({}, sidebar, {
    className: classes.sidebar
  }), primaryAction && /*#__PURE__*/React.createElement(NavAction, {
    className: classes.navAction,
    primaryAction: primaryAction,
    onSelect: onSelect
  }), menu && /*#__PURE__*/React.createElement(NavMenu, {
    className: classes.navMenu,
    menu: menu,
    menuByUrl: menuByUrl,
    currentUrl: currentUrl,
    onSelect: onSelect
  })), /*#__PURE__*/React.createElement(AppContent, {
    className: classes.content
  }, children)));
};

AppLayout.defaultProps = {
  app: {},
  header: {
    expanded: true
  }
};
AppLayout.propTypes = process.env.NODE_ENV !== "production" ? {
  /** App properties */
  app: PropTypes.shape({
    uniqueId: PropTypes.string,
    title: PropTypes.string
  }),

  /** Header properties */
  header: PropTypes.shape({
    expanded: PropTypes.bool
  }),

  /** Search properties */
  search: PropTypes.shape({
    expanded: PropTypes.bool
  }),

  /** Subview properties */
  subview: PropTypes.shape({
    expanded: PropTypes.bool
  })
} : {};
export default AppLayout;