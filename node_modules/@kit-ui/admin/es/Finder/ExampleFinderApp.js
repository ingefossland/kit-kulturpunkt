function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import { Switch, Route } from "react-router-dom";
import { LayoutAdmin, FinderLayout } from '../';
import { getMenuByUrl, getParents, getResultsById, getInboxMenu, filterInboxResults } from "../../resources/functions/";

var ExampleFinderApp = /*#__PURE__*/function (_Component) {
  _inheritsLoose(ExampleFinderApp, _Component);

  function ExampleFinderApp() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "state", {
      root: undefined,
      pathname: undefined,
      moduleSize: "large",
      menu: [],
      menuByUrl: {},
      parents: [],
      results: [],
      resultsById: {},
      uniqueId: undefined,
      item: undefined
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidUpdate", function (prevProps, prevState) {
      if (prevProps.app !== _this.props.app) {
        _this.getApp();
      }

      if (prevProps.data !== _this.props.data) {
        _this.getData();
      }

      if (prevProps.location.pathname !== _this.props.location.pathname) {
        _this.getPathname();
      }

      if (prevState.uniqueId !== _this.state.uniqueId) {
        _this.getItem();
      }

      if (prevState.results !== _this.state.results) {
        _this.getCategories();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "getItem", function () {
      var _this$state = _this.state,
          uniqueId = _this$state.uniqueId,
          resultsById = _this$state.resultsById;
      var item;

      if (uniqueId && resultsById[uniqueId]) {
        item = resultsById[uniqueId];
      }

      _this.setState({
        item: item || undefined
      });
    });

    _defineProperty(_assertThisInitialized(_this), "getData", function () {
      var data = _this.props.data;
      var results = data.models || [];
      var resultsById = getResultsById(results);

      _this.setState({
        results: results,
        resultsById: resultsById
      });
    });

    _defineProperty(_assertThisInitialized(_this), "getCategories", function () {
      var _this$state2 = _this.state,
          root = _this$state2.root,
          results = _this$state2.results;
      var menu = getInboxMenu(root, results);

      _this.setState({
        menu: menu
      });
    });

    _defineProperty(_assertThisInitialized(_this), "getApp", function () {
      var app = _this.props.app;
      var layout = _this.props.layout || _this.props.app.layout || undefined;
      var root = _this.props.root || _this.props.app.root || undefined;
      var menu = _this.props.menu || _this.props.app.menu || [];
      var menuByUrl, parents;

      if (menu) {
        menuByUrl = getMenuByUrl(root, menu);
        parents = getParents(menuByUrl, root);
      }

      _this.setState({
        root: root,
        pathname: root,
        app: app,
        layout: layout,
        menu: menu,
        menuByUrl: menuByUrl,
        parents: parents,
        urlPattern: root + "/section/category/:uniqueId"
      });
    });

    _defineProperty(_assertThisInitialized(_this), "getPathname", function () {
      var _this$state3 = _this.state,
          root = _this$state3.root,
          menuByUrl = _this$state3.menuByUrl,
          results = _this$state3.results;
      var pathname = _this.props.location.pathname;
      var parents = getParents(menuByUrl, pathname);
      var url = pathname.slice(root.length);
      var urls = url.split('/');
      var section = urls[1] || undefined;
      var category = urls[2] || undefined;
      var uniqueId = urls[3] || undefined;
      var resultsByCategory;

      if (section) {
        resultsByCategory = filterInboxResults(results, section, category);
      }

      _this.setState({
        pathname: pathname,
        parents: parents,
        uniqueId: uniqueId,
        section: section,
        category: category,
        resultsByCategory: resultsByCategory
      });
    });

    return _this;
  }

  var _proto = ExampleFinderApp.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.getApp();
    this.getData();
  };

  _proto.render = function render() {
    var _this$state4 = this.state,
        results = _this$state4.results,
        resultsByCategory = _this$state4.resultsByCategory;
    return /*#__PURE__*/React.createElement(LayoutAdmin, _extends({}, this.props, this.state), /*#__PURE__*/React.createElement(FinderLayout, this.state, /*#__PURE__*/React.createElement(LayoutModels, {
      models: resultsByCategory || results
    })));
  };

  return ExampleFinderApp;
}(Component);

_defineProperty(ExampleFinderApp, "defaultProps", {
  app: undefined,
  user: undefined,
  owner: undefined,
  data: undefined
});

export default ExampleFinderApp;