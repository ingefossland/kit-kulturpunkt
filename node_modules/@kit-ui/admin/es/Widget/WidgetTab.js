function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import PropTypes from "prop-types";

var WidgetTab = /*#__PURE__*/function (_Component) {
  _inheritsLoose(WidgetTab, _Component);

  function WidgetTab() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "getStyle", function () {
      var _this$props = _this.props,
          selected = _this$props.selected,
          theme = _this$props.theme;

      if (!selected) {
        return {};
      }

      return {
        borderColor: theme.primaryColor || "black"
      };
      var style = {};
    });

    return _this;
  }

  var _proto = WidgetTab.prototype;

  _proto.render = function render() {
    var _this$props2 = this.props,
        selected = _this$props2.selected,
        onClick = _this$props2.onClick;
    var style = this.getStyle();
    return /*#__PURE__*/React.createElement("div", {
      className: "admin-widget__tab",
      style: style,
      "aria-selected": selected,
      onClick: onClick
    }, this.props.children);
  };

  return WidgetTab;
}(Component);

_defineProperty(WidgetTab, "defaultProps", {
  theme: {
    primaryColor: "black"
  },
  selected: false
});

WidgetTab.propTypes = process.env.NODE_ENV !== "production" ? {
  selected: PropTypes.bool
} : {};
export default WidgetTab;