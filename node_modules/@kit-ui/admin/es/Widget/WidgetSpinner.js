function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';

var WidgetSpinner = /*#__PURE__*/function (_Component) {
  _inheritsLoose(WidgetSpinner, _Component);

  function WidgetSpinner() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "getStyle", function () {
      var _this$props = _this.props,
          theme = _this$props.theme,
          style = _this$props.style;

      if (style && style.color) {
        return {
          backgroundColor: style.color
        };
      }

      if (theme && theme.primaryColor) {
        return {
          backgroundColor: theme.primaryColor
        };
      }

      return {};
    });

    return _this;
  }

  var _proto = WidgetSpinner.prototype;

  _proto.render = function render() {
    var style = this.getStyle();
    return /*#__PURE__*/React.createElement("div", {
      className: "admin-widget__spinner"
    }, /*#__PURE__*/React.createElement("div", {
      className: "anim-1",
      style: style
    }), /*#__PURE__*/React.createElement("div", {
      className: "anim-2",
      style: style
    }), /*#__PURE__*/React.createElement("div", {
      className: "anim-3",
      style: style
    }));
  };

  return WidgetSpinner;
}(Component);

export default WidgetSpinner;