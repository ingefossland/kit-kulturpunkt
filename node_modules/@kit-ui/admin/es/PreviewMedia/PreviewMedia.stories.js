function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import PreviewMedia from './PreviewMedia';
import imageData from "../data/media/image";
import videoData from "../data/media/video";
import audioData from "../data/media/audio";
import youtubeData from "../data/media/youtube";
import vimeoData from "../data/media/vimeo";
import sketchfabData from "../data/media/sketchfab";
import pdfData from "../data/media/pdf";
export default {
  title: 'Preview/PreviewMedia',
  component: PreviewMedia,
  args: {
    mediaType: "mediaType"
  },
  argTypes: {}
};

var Template = function Template(args) {
  return /*#__PURE__*/React.createElement(PreviewMedia, args);
};

export var Image = Template.bind({});
Image.args = _extends({}, imageData);
export var Video = Template.bind({});
Video.args = _extends({}, videoData);
export var Audio = Template.bind({});
Audio.args = _extends({}, audioData);
export var Youtube = Template.bind({});
Youtube.args = _extends({}, youtubeData);
export var Vimeo = Template.bind({});
Vimeo.args = _extends({}, vimeoData);
export var Sketchfab = Template.bind({});
Sketchfab.args = _extends({}, sketchfabData);
export var Pdf = Template.bind({});
Pdf.args = _extends({}, pdfData);