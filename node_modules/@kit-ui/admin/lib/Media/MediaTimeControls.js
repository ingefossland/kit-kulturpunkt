"use strict";

exports.__esModule = true;
exports.default = exports.getTime = void 0;

var _react = _interopRequireDefault(require("react"));

var _styles = require("@material-ui/core/styles");

var _Slider = _interopRequireDefault(require("@material-ui/core/Slider"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      display: "flex",
      alignItems: "center"
    },
    time: {
      fontFamily: "Akkurat Mono, monospace",
      fontSize: "14px",
      lineHeight: 1,
      marginTop: theme.spacing(.25)
    },
    progress: {
      flexGrow: 1,
      margin: theme.spacing(0, 2)
    }
  };
});

var getTime = function getTime(timeInSeconds) {
  var pad = function pad(num, size) {
    return ('000' + num).slice(size * -1);
  },
      time = parseFloat(timeInSeconds).toFixed(3),
      hours = Math.floor(time / 60 / 60),
      minutes = Math.floor(time / 60) % 60,
      seconds = Math.floor(time - minutes * 60),
      milliseconds = time.slice(-3); //    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + pad(seconds, 2) + ',' + pad(milliseconds, 3);


  if (hours) {
    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + pad(seconds, 2);
  }

  return minutes + ':' + pad(seconds, 2);
};

exports.getTime = getTime;

var MediaTimeControls = function MediaTimeControls(_ref) {
  var className = _ref.className,
      buffered = _ref.buffered,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 0 : _ref$duration,
      _ref$currentTime = _ref.currentTime,
      currentTime = _ref$currentTime === void 0 ? 0 : _ref$currentTime,
      onChange = _ref.onChange;
  var classes = useStyles();
  var timePlayed = getTime(currentTime);
  var timeTotal = getTime(duration);

  var handleChange = function handleChange(event, value) {
    onChange && onChange(value);
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: className || classes.root
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.time
  }, timePlayed), /*#__PURE__*/_react.default.createElement(_Slider.default, {
    className: classes.progress,
    min: 0,
    max: duration,
    value: currentTime,
    onChange: handleChange
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.time
  }, timeTotal));
};

var _default = MediaTimeControls;
exports.default = _default;