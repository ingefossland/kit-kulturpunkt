"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/core/styles");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      position: "absolute",
      width: function width(props) {
        return theme.spacing(props.size);
      },
      height: function height(props) {
        return theme.spacing(props.size);
      },
      top: function top(props) {
        return props.top + "%" || "50%";
      },
      left: function left(props) {
        return props.left + "%" || "50%";
      },
      pointerEvents: "none"
    },
    point: {
      position: "absolute",
      display: "block",
      width: "100%",
      height: "100%",
      transform: "translate(-50%, -50%)",
      backgroundColor: "white",
      borderRadius: "50%",
      opacity: 0.5
    },
    crosshair: {
      position: "absolute",
      display: "block",
      width: "100%",
      height: "100%",
      transform: "translate(-50%, -50%)"
    },
    crosshairX: {
      display: "block",
      position: "absolute",
      left: "-15%",
      top: "50%",
      backgroundColor: "white",
      width: "130%",
      height: "1px"
    },
    crosshairY: {
      display: "block",
      position: "absolute",
      left: "50%",
      top: "-15%",
      backgroundColor: "white",
      width: "1px",
      height: "130%"
    }
  };
});

var ImageFocalpointReticle = function ImageFocalpointReticle(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? 8 : _ref$size,
      _ref$left = _ref.left,
      left = _ref$left === void 0 ? "50%" : _ref$left,
      _ref$top = _ref.top,
      top = _ref$top === void 0 ? "50%" : _ref$top;
  var classes = useStyles({
    left: left,
    top: top,
    size: size
  });
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.root
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.point
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.crosshair
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.crosshairX
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.crosshairY
  })));
};

var _default = ImageFocalpointReticle;
exports.default = _default;
module.exports = exports.default;