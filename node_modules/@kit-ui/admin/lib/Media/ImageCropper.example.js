"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ImageCropper = _interopRequireDefault(require("./ImageCropper"));

var _ImageBase = _interopRequireDefault(require("./ImageBase"));

var _EditorLayout = _interopRequireDefault(require("../Editor/EditorLayout"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    preview: {
      display: "flex",
      width: "100%",
      "& > *": {
        margin: theme.spacing(1)
      }
    },
    square: {
      position: "relative",
      backgroundColor: "blue",
      paddingBottom: "100%",
      overflow: "hidden"
    },
    landscape: {
      position: "relative",
      backgroundColor: "blue",
      paddingBottom: "50%",
      overflow: "hidden"
    },
    portrait: {
      position: "relative",
      backgroundColor: "blue",
      paddingBottom: "150%",
      overflow: "hidden"
    }
  };
});

var CropperDebug = function CropperDebug(_ref) {
  var formData = _ref.formData;

  if (!formData) {
    return false;
  }

  return /*#__PURE__*/_react.default.createElement("ul", null, /*#__PURE__*/_react.default.createElement("li", null, "top:  ", formData.top), /*#__PURE__*/_react.default.createElement("li", null, "right:  ", formData.right), /*#__PURE__*/_react.default.createElement("li", null, "bottom:  ", formData.bottom), /*#__PURE__*/_react.default.createElement("li", null, "left: ", formData.left), /*#__PURE__*/_react.default.createElement("li", null, "x: ", formData.x), /*#__PURE__*/_react.default.createElement("li", null, "y: ", formData.y), /*#__PURE__*/_react.default.createElement("li", null, "width: ", formData.width), /*#__PURE__*/_react.default.createElement("li", null, "height: ", formData.height), /*#__PURE__*/_react.default.createElement("li", null, "rotate: ", formData.rotate));
};

var ExampleCropper = function ExampleCropper(_ref2) {
  var _ref2$imageUrl = _ref2.imageUrl,
      imageUrl = _ref2$imageUrl === void 0 ? undefined : _ref2$imageUrl,
      _ref2$imageCropdata = _ref2.imageCropdata,
      imageCropdata = _ref2$imageCropdata === void 0 ? {} : _ref2$imageCropdata;
  var classes = useStyles();

  var _useState = (0, _react.useState)(imageCropdata),
      formData = _useState[0],
      setFormData = _useState[1];

  var _onChange = function onChange(formData) {
    setFormData(formData);
  };

  var CropperPreview = function CropperPreview() {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: classes.preview
    }, /*#__PURE__*/_react.default.createElement("div", null, "square", /*#__PURE__*/_react.default.createElement(_ImageBase.default, {
      className: classes.square,
      imageUrl: imageUrl,
      imageCropdata: formData
    }), "square/cover", /*#__PURE__*/_react.default.createElement(_ImageBase.default, {
      className: classes.square,
      imageUrl: imageUrl,
      imageCropdata: formData,
      objectFit: "cover"
    })), /*#__PURE__*/_react.default.createElement("div", null, "landscape", /*#__PURE__*/_react.default.createElement(_ImageBase.default, {
      className: classes.landscape,
      imageUrl: imageUrl,
      imageCropdata: formData
    }), "landscape/cover", /*#__PURE__*/_react.default.createElement(_ImageBase.default, {
      className: classes.landscape,
      imageUrl: imageUrl,
      imageCropdata: formData,
      objectFit: "cover"
    })), /*#__PURE__*/_react.default.createElement("div", null, "portrait", /*#__PURE__*/_react.default.createElement(_ImageBase.default, {
      className: classes.portrait,
      imageUrl: imageUrl,
      imageCropdata: formData
    }), "portrait/cover", /*#__PURE__*/_react.default.createElement(_ImageBase.default, {
      className: classes.portrait,
      imageUrl: imageUrl,
      imageCropdata: formData,
      objectFit: "cover"
    })));
  };

  return /*#__PURE__*/_react.default.createElement(_EditorLayout.default, {
    title: "ImageCropper",
    preview: {
      children: /*#__PURE__*/_react.default.createElement(CropperPreview, null)
    }
  }, /*#__PURE__*/_react.default.createElement(_ImageCropper.default, {
    imageUrl: imageUrl,
    imageCropdata: formData,
    onChange: function onChange(formData) {
      return _onChange(formData);
    }
  }));
};

var _default = ExampleCropper;
exports.default = _default;
module.exports = exports.default;