"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _AppsGridItem = _interopRequireDefault(require("./AppsGridItem"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      display: "flex",
      flexWrap: "wrap",
      justifyContent: "center",
      padding: theme.spacing(3.5)
    },
    grid: {
      display: "flex",
      flexWrap: "wrap",
      margin: "auto"
    }
  };
});

var AppsGrid = function AppsGrid(_ref) {
  var className = _ref.className,
      _ref$apps = _ref.apps,
      apps = _ref$apps === void 0 ? undefined : _ref$apps,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? "large" : _ref$size,
      children = _ref.children,
      onSelect = _ref.onSelect;
  var classes = useStyles();
  return /*#__PURE__*/_react.default.createElement("div", {
    className: className || classes.root
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.grid
  }, apps && apps.length && apps.map(function (app) {
    return /*#__PURE__*/_react.default.createElement(_AppsGridItem.default, _extends({}, app, {
      size: size,
      onClick: function onClick() {
        return onSelect(app);
      }
    }));
  }), children));
};

AppsGrid.defaultProps = {
  size: "large"
};
var _default = AppsGrid;
exports.default = _default;
module.exports = exports.default;