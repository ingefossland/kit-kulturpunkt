"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ButtonBase = _interopRequireDefault(require("@material-ui/core/ButtonBase"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _icons = require("@kit-ui/icons");

var _styles = require("@material-ui/core/styles");

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      width: "100%",
      listStyle: "none",
      display: "flex",
      alignItems: "center",
      justifyContent: "left",
      padding: theme.spacing(1.25),
      margin: 0
    },
    icon: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "relative",
      fontSize: "36px",
      "& > svg": {
        fontSize: "1em"
      }
    },
    label: {
      fontSize: "14px",
      fontWeight: "bold",
      margin: theme.spacing(1)
    }
  };
});

var OwnersListItem = function OwnersListItem(_ref) {
  var title = _ref.title,
      onClick = _ref.onClick,
      props = _objectWithoutPropertiesLoose(_ref, ["title", "onClick"]);

  var classes = useStyles();
  return /*#__PURE__*/_react.default.createElement(_ButtonBase.default, {
    className: classes.root,
    onClick: onClick
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.icon
  }, (0, _utils.getOwnerIcon)(props)), /*#__PURE__*/_react.default.createElement(_Typography.default, {
    className: classes.label,
    noWrap: true
  }, title));
};

var _default = OwnersListItem;
exports.default = _default;
module.exports = exports.default;