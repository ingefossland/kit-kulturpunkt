"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Paper = _interopRequireDefault(require("@material-ui/core/Paper"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      "&[data-status=trash]": {
        "& figure": {
          opacity: "0.5"
        }
      },
      "&.sortable-helper": {
        boxShadow: theme.shadows[12],
        zIndex: 2000
      }
    }
  };
});
/** ModuleBase is used as a wrapper for all modules, setting common variables that other modules need.  */

var ModuleBase = function ModuleBase(_ref) {
  var id = _ref.id,
      className = _ref.className,
      component = _ref.component,
      status = _ref.status,
      selected = _ref.selected,
      expanded = _ref.expanded,
      elevation = _ref.elevation,
      onClick = _ref.onClick,
      children = _ref.children;
  var classes = useStyles();

  if (component === "tr") {
    return /*#__PURE__*/_react.default.createElement("tr", {
      id: id,
      className: className || classes.root,
      "data-status": status,
      "aria-expanded": expanded,
      "aria-selected": selected
    }, children);
  }

  if (!elevation) {
    return /*#__PURE__*/_react.default.createElement("article", {
      id: id,
      className: className || classes.root,
      "data-status": status,
      "aria-expanded": expanded,
      "aria-selected": selected,
      role: onClick && "button",
      onClick: onClick
    }, children);
  }

  return /*#__PURE__*/_react.default.createElement(_Paper.default, {
    id: id,
    component: component,
    className: className || classes.root,
    "data-status": status,
    "data-elevated": true,
    "aria-expanded": expanded,
    "aria-selected": selected,
    elevation: elevation,
    square: true,
    role: onClick && "button",
    onClick: onClick
  }, children);
};

ModuleBase.defaultProps = {
  component: "article",
  elevation: 0
};
ModuleBase.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Id */
  id: _propTypes.default.string,

  /** className */
  className: _propTypes.default.string,

  /** Which component to use */
  component: _propTypes.default.string,

  /** Elevation */
  elevation: _propTypes.default.number,

  /** Status */
  status: _propTypes.default.string,

  /** Selected or not */
  selected: _propTypes.default.bool,

  /** Expanded or not */
  expanded: _propTypes.default.bool,

  /** onClick */
  onClick: _propTypes.default.func
} : {};
var _default = ModuleBase;
exports.default = _default;
module.exports = exports.default;