"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _styles = require("@material-ui/core/styles");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var _Icon = _interopRequireDefault(require("@material-ui/core/Icon"));

var _ButtonSelect = _interopRequireDefault(require("./ButtonSelect"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import ButtonDraggable from "../NavToolbar/ButtonDraggable"
//import ButtonCollapsible from "../NavToolbar/ButtonCollapsible"
var ButtonDraggable = function ButtonDraggable() {
  return /*#__PURE__*/_react.default.createElement("p", null, "drag");
};

var ButtonCollapsible = function ButtonCollapsible() {
  return /*#__PURE__*/_react.default.createElement("p", null, "collapse");
};

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center"
    },
    icon: {
      margin: theme.spacing(1.5)
    }
  };
});

var ModulePrefix = function ModulePrefix(_ref) {
  var className = _ref.className,
      startAdornment = _ref.startAdornment,
      icon = _ref.icon,
      onClick = _ref.onClick,
      selectable = _ref.selectable,
      selected = _ref.selected,
      onSelect = _ref.onSelect;
  var classes = useStyles();

  if (startAdornment) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: className || classes.root
    }, startAdornment);
  }

  if (selectable) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: className || classes.root
    }, selectable && /*#__PURE__*/_react.default.createElement(_ButtonSelect.default, {
      selected: selected,
      onClick: onSelect
    }));
  }

  if (icon && onClick) {
    return /*#__PURE__*/_react.default.createElement(_IconButton.default, {
      className: className || classes.root,
      onClick: onClick
    }, /*#__PURE__*/_react.default.createElement(_Icon.default, null, icon));
  }

  if (icon) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: className || classes.root
    }, /*#__PURE__*/_react.default.createElement(_Icon.default, {
      className: classes.icon
    }, icon));
  }

  return false;
};

ModulePrefix.propTypes = process.env.NODE_ENV !== "production" ? {
  className: _propTypes.default.string,
  startAdornment: _propTypes.default.node,
  selectable: _propTypes.default.bool,
  selected: _propTypes.default.bool,
  onSelect: _propTypes.default.func,
  icon: _propTypes.default.string,
  onClick: _propTypes.default.func
} : {};
var _default = ModulePrefix;
exports.default = _default;
module.exports = exports.default;