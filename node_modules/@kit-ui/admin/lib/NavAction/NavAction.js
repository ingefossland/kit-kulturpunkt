"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _NavActionButtongroup = _interopRequireDefault(require("./NavActionButtongroup"));

var _NavActionItem = _interopRequireDefault(require("./NavActionItem"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/** Action menu component */
var NavAction = function NavAction(_ref) {
  var className = _ref.className,
      _ref$icons = _ref.icons,
      icons = _ref$icons === void 0 ? {} : _ref$icons,
      _ref$menu = _ref.menu,
      menu = _ref$menu === void 0 ? [] : _ref$menu,
      menuByUrl = _ref.menuByUrl,
      onSelect = _ref.onSelect,
      onToggle = _ref.onToggle;

  var _onSelect = function _onSelect(item, event) {
    onSelect && onSelect(item);
  };

  var _onToggle = function _onToggle(item, event) {
    onToggle && onToggle(item);
  };

  var renderItem = function renderItem(item, index) {
    if (item.url && menuByUrl && menuByUrl[item.url]) {
      item = _extends({}, menuByUrl[item.url], item);
    }

    if (item.icon && icons[item.icon]) {
      item = _extends({}, item, {
        icon: icons[item.icon]
      });
    }

    return /*#__PURE__*/_react.default.createElement(_NavActionItem.default, _extends({}, item, {
      icons: icons,
      menuByUrl: menuByUrl,
      key: index,
      onSelect: _onSelect
    }));
  };

  if (!menu || !menu.length) {
    return false;
  }

  return /*#__PURE__*/_react.default.createElement(_NavActionButtongroup.default, {
    variant: "contained",
    className: className
  }, menu.map(renderItem));
};

NavAction.defaultProps = {
  menu: [],
  menuByUrl: {}
};
NavAction.propTypes = process.env.NODE_ENV !== "production" ? {
  /** ClassName */
  className: _propTypes.default.string,

  /** Custom icons */
  icons: _propTypes.default.object,

  /** The menu array */
  menu: _propTypes.default.array,

  /** Menu items, indexed by url */
  menuByUrl: _propTypes.default.object,

  /** Current URL selected */
  currentUrl: _propTypes.default.string,

  /** Select function */
  onSelect: _propTypes.default.func,

  /** Toggle function */
  onToggle: _propTypes.default.func
} : {};
var _default = NavAction;
exports.default = _default;
module.exports = exports.default;