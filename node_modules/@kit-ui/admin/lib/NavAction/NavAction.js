"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/core/styles");

var _NavActionButton = _interopRequireDefault(require("./NavActionButton"));

var _NavActionDropdown = _interopRequireDefault(require("./NavActionDropdown"));

var _NavActionMenu = _interopRequireDefault(require("./NavActionMenu"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      fontSize: "14px"
    }
  };
});

var NavAction = function NavAction(_ref) {
  var className = _ref.className,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? "contained" : _ref$variant,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? "primary" : _ref$color,
      _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? "bottom-start" : _ref$placement,
      primaryAction = _ref.primaryAction,
      _ref$menu = _ref.menu,
      menu = _ref$menu === void 0 ? [] : _ref$menu,
      onSelect = _ref.onSelect;

  var _useState = (0, _react.useState)(false),
      expanded = _useState[0],
      setExpanded = _useState[1];

  var anchorRef = (0, _react.useRef)(null);
  var classes = useStyles();

  var handleToggle = function handleToggle(event) {
    setExpanded(function (prevExpanded) {
      return !prevExpanded;
    });
  };

  var handleSelect = function handleSelect(_ref2) {
    var onClick = _ref2.onClick,
        item = _objectWithoutPropertiesLoose(_ref2, ["onClick"]);

    onClick && onClick() || onSelect && onSelect(item);
    setExpanded(false);
  };

  if (!primaryAction && menu.length) {
    primaryAction = menu[0];
  }

  if (primaryAction && primaryAction.children) {
    var _menu = primaryAction.children;
    var role = primaryAction.role;

    if (role !== "button") {
      return /*#__PURE__*/_react.default.createElement("nav", {
        className: className || classes.root
      }, /*#__PURE__*/_react.default.createElement(_NavActionButton.default, _extends({}, primaryAction, {
        variant: primaryAction.variant || variant,
        color: color,
        expanded: expanded,
        forwardedRef: anchorRef,
        onToggle: handleToggle
      })), /*#__PURE__*/_react.default.createElement(_NavActionDropdown.default, {
        open: expanded,
        anchorEl: anchorRef.current,
        placement: placement,
        onClickAway: handleToggle
      }, /*#__PURE__*/_react.default.createElement(_NavActionMenu.default, {
        menu: _menu,
        onSelect: handleSelect
      })));
    }

    return /*#__PURE__*/_react.default.createElement("nav", {
      className: className || classes.root
    }, /*#__PURE__*/_react.default.createElement(_NavActionButton.default, _extends({}, primaryAction, {
      variant: primaryAction.variant || variant,
      color: color,
      expanded: expanded,
      forwardedRef: anchorRef,
      onClick: function onClick() {
        return handleSelect(primaryAction);
      },
      onToggle: handleToggle
    })), /*#__PURE__*/_react.default.createElement(_NavActionDropdown.default, {
      open: expanded,
      anchorEl: anchorRef.current,
      placement: placement,
      onClickAway: handleToggle
    }, /*#__PURE__*/_react.default.createElement(_NavActionMenu.default, {
      menu: _menu,
      onSelect: handleSelect
    })));
  }

  if (primaryAction) {
    return /*#__PURE__*/_react.default.createElement("nav", {
      className: className || classes.root
    }, /*#__PURE__*/_react.default.createElement(_NavActionButton.default, _extends({}, primaryAction, {
      variant: primaryAction.variant || variant,
      color: color,
      onClick: function onClick() {
        return handleSelect(primaryAction);
      }
    })));
  }

  return null;
};

var _default = NavAction;
exports.default = _default;
module.exports = exports.default;