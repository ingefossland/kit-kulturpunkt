"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _color = _interopRequireDefault(require("color"));

var _WidgetGrid = _interopRequireDefault(require("./WidgetGrid"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Widget = /*#__PURE__*/function (_Component) {
  _inheritsLoose(Widget, _Component);

  function Widget() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "getThemeStyle", function () {
      var style = _this.props.style;
      var backgroundColor = style.backgroundColor || "white";
      backgroundColor = (0, _color.default)(backgroundColor);
      var themeStyle;

      if (backgroundColor.isDark()) {
        themeStyle = "dark";
      } else {
        themeStyle = "light";
      }

      return themeStyle;
    });

    _defineProperty(_assertThisInitialized(_this), "getStyle", function () {
      var _this$props = _this.props,
          style = _this$props.style,
          cols = _this$props.cols,
          rows = _this$props.rows,
          area = _this$props.area;

      if (!style) {
        return false;
      }

      return style;
    });

    _defineProperty(_assertThisInitialized(_this), "getClassName", function () {
      var _this$props2 = _this.props,
          widgetType = _this$props2.widgetType,
          widgetSize = _this$props2.widgetSize;
      var classNames = [];
      classNames.push('admin-widget');

      if (widgetType) {
        classNames.push('admin-widget--' + widgetType);
      }

      return classNames.join(' ');
    });

    _defineProperty(_assertThisInitialized(_this), "getSize", function () {
      var widgetSize = _this.props.widgetSize;

      if (!widgetSize) {
        return {};
      }

      var sizes = {
        "xs": 2,
        "s": 4,
        "m": 8,
        "l": 12,
        "xl": 16
      };
      var grid = widgetSize.split(":");
      var cols = grid[0];
      var rows = grid[1];
      cols = sizes[cols] || parseInt(cols);
      rows = sizes[rows] || parseInt(rows);
      return {
        cols: cols,
        rows: rows
      };
    });

    return _this;
  }

  var _proto = Widget.prototype;

  _proto.render = function render() {
    var _this$props3 = this.props,
        id = _this$props3.id,
        expanded = _this$props3.expanded,
        selected = _this$props3.selected,
        style = _this$props3.style,
        widgetSize = _this$props3.widgetSize;

    var _this$getSize = this.getSize(),
        cols = _this$getSize.cols,
        rows = _this$getSize.rows;

    var themeStyle = this.getThemeStyle();
    var className = this.getClassName();
    return /*#__PURE__*/_react.default.createElement("div", {
      className: className,
      style: style,
      onClick: this.props.onClick,
      "data-theme": themeStyle,
      "data-size": widgetSize,
      "data-cols": cols,
      "data-rows": rows,
      "aria-expanded": expanded,
      "aria-selected": selected
    }, /*#__PURE__*/_react.default.createElement(_WidgetGrid.default, null, this.props.children));
  };

  return Widget;
}(_react.Component);

_defineProperty(Widget, "defaultProps", {
  id: "widget",
  expanded: false,
  selected: false,
  widgetType: undefined,
  widgetSize: "1:1",
  style: {}
});

var _default = Widget;
exports.default = _default;
module.exports = exports.default;