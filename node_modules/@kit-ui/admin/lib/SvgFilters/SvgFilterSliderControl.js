"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Slider = _interopRequireDefault(require("@material-ui/core/Slider"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var SvgFilterSlider = (0, _styles.withStyles)({
  root: {},
  thumb: {},
  active: {},
  valueLabel: {
    fontFamily: "Akkurat, sans-serif",
    fontSize: "16px",
    "& $circle": {
      width: 480,
      height: 480
    }
  },
  track: {},
  rail: {},
  mark: {},
  markLabel: {
    fontFamily: "Akkurat, sans-serif"
    /*
    fontSize: "12px",
    lineHeight: 2,
    textAlign: "center" */

  }
})(_Slider.default);
var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      width: "100%"
    },
    label: {},
    connector: {
      position: "absolute",
      top: 0,
      left: 0,
      bottom: 0,
      right: 0,
      margin: "auto",
      backgroundColor: "currentColor",
      opacity: .5,
      width: "2px" //        height: theme.spacing(6)

    }
  };
});

var FilterSliderControl = function FilterSliderControl(_ref) {
  var id = _ref.id,
      min = _ref.min,
      max = _ref.max,
      marks = _ref.marks,
      label = _ref.label,
      value = _ref.value,
      onChange = _ref.onChange;
  var classes = useStyles();
  return /*#__PURE__*/_react.default.createElement(SvgFilterSlider, {
    id: id,
    defaultValue: value,
    "aria-labelledby": id,
    valueLabelDisplay: "off",
    min: min,
    max: max,
    marks: marks,
    onChange: onChange
  });
};

FilterSliderControl.defaultProps = {
  min: -100,
  max: 100,
  value: 0,
  marks: [{
    value: -100,
    label: '-100'
  }, {
    value: -90
  }, {
    value: -80
  }, {
    value: -70
  }, {
    value: -60
  }, {
    value: -50
  }, {
    value: -40
  }, {
    value: -30
  }, {
    value: -20
  }, {
    value: -10
  }, {
    value: 0,
    label: '0'
  }, {
    value: 10
  }, {
    value: 20
  }, {
    value: 30
  }, {
    value: 40
  }, {
    value: 50
  }, {
    value: 60
  }, {
    value: 70
  }, {
    value: 80
  }, {
    value: 90
  }, {
    value: 100,
    label: '100'
  }]
};
var _default = FilterSliderControl;
exports.default = _default;
module.exports = exports.default;