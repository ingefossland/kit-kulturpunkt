function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

export var uiFormContext = function uiFormContext(props) {
  var idPrefix = props.idPrefix,
      idSchema = props.idSchema,
      schema = props.schema,
      formData = props.formData,
      formContext = props.formContext;

  var buttonProps = _extends({}, props, {
    id: idSchema && idSchema.$id
  });

  var uiFormContext = {};
  formContext && Object.keys(formContext).map(function (name) {
    if (name.startsWith('on') && typeof formContext[name] === "function") {
      uiFormContext[name] = function () {
        return formContext[name](buttonProps);
      };
    } else {
      uiFormContext[name] = formContext[name];
    }
  });
  return uiFormContext;
};
export default uiFormContext;