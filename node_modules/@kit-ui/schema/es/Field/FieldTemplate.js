function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from "react";
import FormControl from "@material-ui/core/FormControl";
import FormHelperText from "@material-ui/core/FormHelperText";
import List from "@material-ui/core/List";
import ListItem from "@material-ui/core/ListItem";
import Typography from "@material-ui/core/Typography";

var FieldTemplate = function FieldTemplate(_ref) {
  var id = _ref.id,
      children = _ref.children,
      displayLabel = _ref.displayLabel,
      required = _ref.required,
      _ref$rawErrors = _ref.rawErrors,
      rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors,
      rawHelp = _ref.rawHelp,
      rawDescription = _ref.rawDescription,
      props = _objectWithoutPropertiesLoose(_ref, ["id", "children", "displayLabel", "required", "rawErrors", "rawHelp", "rawDescription"]);

  return children;
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(FormControl, {
    fullWidth: true,
    error: rawErrors.length ? true : false,
    required: required
  }, children, displayLabel && rawDescription ? /*#__PURE__*/React.createElement(Typography, {
    variant: "caption",
    color: "textSecondary"
  }, rawDescription) : null, rawErrors.length > 0 && /*#__PURE__*/React.createElement(List, {
    dense: true,
    disablePadding: true
  }, rawErrors.map(function (error, i) {
    return /*#__PURE__*/React.createElement(ListItem, {
      key: i,
      disableGutters: true
    }, /*#__PURE__*/React.createElement(FormHelperText, {
      id: id
    }, error));
  })), rawHelp && /*#__PURE__*/React.createElement(FormHelperText, {
    id: id
  }, rawHelp)));
};

export default FieldTemplate;