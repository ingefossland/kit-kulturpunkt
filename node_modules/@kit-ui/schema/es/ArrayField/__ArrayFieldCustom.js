function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useState, useEffect } from "react";
import ArrayField from "@rjsf/core/lib/components/fields/ArrayField";

var CustomArrayField = function CustomArrayField(props) {
  /* Add onChange to formContext to enable sorting, etc. */
  var _onAddItem = function _onAddItem(item) {
    console.log("onAddItem", item);
    var newFormData = props.formData || [];
    newFormData.push(item);
    props.onChange(newFormData);
  };

  var registry = _extends({}, props.registry, {
    formContext: _extends({}, props.registry.formContext, {
      onAddItem: _onAddItem,
      onArrayChange: props.onChange
    })
  });

  var _useState = useState(props.formData),
      formData = _useState[0],
      setFormData = _useState[1];

  useEffect(function () {
    setFormData(props.formData);
  }, [props.formData]);
  return /*#__PURE__*/React.createElement(ArrayField, _extends({}, props, {
    formData: formData,
    registry: registry
  }));
};

export default CustomArrayField;