function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from "react";
import ButtonGroup from "@material-ui/core/ButtonGroup";
import Button from '@material-ui/core/Button';
import { makeStyles } from '@material-ui/core/styles';
var useStyles = makeStyles(function (theme) {
  return {
    buttongroup: {
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      width: "100%",
      height: "100%",
      borderColor: "inherit",
      color: "inherit"
    },
    button: {
      fontFamily: "Akkurat, sans-serif",
      fontSize: "14px",
      fontWeight: "bold",
      textTransform: "none",
      letterSpacing: 0,
      borderRadius: 1,
      minWidth: theme.spacing(16),
      minHeight: theme.spacing(7),
      borderColor: "inherit",
      color: "inherit"
    }
  };
});

var MediaButtons = function MediaButtons(_ref) {
  var _ref$buttons = _ref.buttons,
      buttons = _ref$buttons === void 0 ? [] : _ref$buttons;
  var classes = useStyles();

  var MediaButton = function MediaButton(_ref2) {
    var title = _ref2.title,
        _ref2$color = _ref2.color,
        color = _ref2$color === void 0 ? "primary" : _ref2$color,
        _ref2$variant = _ref2.variant,
        variant = _ref2$variant === void 0 ? "outlined" : _ref2$variant,
        props = _objectWithoutPropertiesLoose(_ref2, ["title", "color", "variant"]);

    return /*#__PURE__*/React.createElement(Button, _extends({
      className: classes.button,
      variant: variant
    }, props), title);
  };

  return /*#__PURE__*/React.createElement("footer", {
    className: classes.buttongroup
  }, buttons && buttons.map(function (button, index) {
    return /*#__PURE__*/React.createElement(MediaButton, _extends({}, button, {
      key: index
    }));
  }));
};

export default MediaButtons;