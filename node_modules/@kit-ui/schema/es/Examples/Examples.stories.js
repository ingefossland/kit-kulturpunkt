function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Schema from "../SchemaEditor/";
import { samples } from "@rjsf/playground/lib/samples";
export default {
  title: 'Examples',
  component: Schema,
  args: {},
  argTypes: {}
};

var Template = function Template(args) {
  return /*#__PURE__*/React.createElement(Schema, args);
};

export var Simple = Template.bind({});
Simple.args = _extends({}, samples["Simple"]);
export var Nested = Template.bind({});
Nested.args = _extends({}, samples["Nested"]);
export var Arrays = Template.bind({});
Arrays.args = _extends({}, samples["Arrays"]);
export var Numbers = Template.bind({});
Numbers.args = _extends({}, samples["Numbers"]);
export var Widgets = Template.bind({});
Widgets.args = _extends({}, samples["Widgets"]);
export var Ordering = Template.bind({});
Ordering.args = _extends({}, samples["Ordering"]);
export var References = Template.bind({});
References.args = _extends({}, samples["References"]);
export var Custom = Template.bind({});
Custom.args = _extends({}, samples["Custom"]);
export var Errors = Template.bind({});
Errors.args = _extends({}, samples["Errors"]);
export var Examples = Template.bind({});
Examples.args = _extends({}, samples["Examples"]);
export var Large = Template.bind({});
Large.args = _extends({}, samples["Large"]);
export var AnyOf = Template.bind({});
AnyOf.args = _extends({}, samples["Any Of"]);
export var OneOf = Template.bind({});
OneOf.args = _extends({}, samples["One Of"]);