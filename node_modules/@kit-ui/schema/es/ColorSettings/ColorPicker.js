import React, { useState, useEffect } from 'react';
import { CustomPicker } from 'react-color';
import ColorInput from "./ColorInput";
import ColorSwatches from "./ColorSwatches";
import ColorHelper from 'react-color/lib/helpers/color';
import { makeStyles } from '@material-ui/core/styles';
var useStyles = makeStyles(function (theme) {
  return {
    picker: {
      width: theme.spacing(25),
      display: "flex",
      flexDirection: "column"
    },
    input: {
      fontFamily: "Akkurat Mono, monospace",
      backgroundColor: function backgroundColor(props) {
        return props.backgroundColor;
      },
      color: function color(props) {
        return props.color;
      },
      minHeight: theme.spacing(14),
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      "& input": {
        border: "none",
        backgroundColor: "transparent",
        color: "inherit",
        fontFamily: "inherit",
        fontSize: "inherit",
        lineHeight: "1",
        width: "100%",
        //            minHeight: theme.spacing(7),
        textAlign: "center"
      }
    }
  };
});

var ColorPicker = function ColorPicker(_ref) {
  var _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? "default" : _ref$variant,
      hex = _ref.hex,
      rgb = _ref.rgb,
      hsl = _ref.hsl,
      hsv = _ref.hsv,
      backgroundColor = _ref.backgroundColor,
      _ref$colors = _ref.colors,
      colors = _ref$colors === void 0 ? [] : _ref$colors,
      onChange = _ref.onChange;

  var getContrastColor = function getContrastColor() {
    if (!ColorHelper.isValidHex(hex)) {
      return false;
    }

    if (hex === 'transparent') {
      return 'rgba(0,0,0,0.4)';
    }

    var yiq = (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
    return yiq >= 128 ? '#000' : '#fff';
  };

  var contrastColor = getContrastColor();
  var color;

  if (variant === "text") {
    backgroundColor = backgroundColor || contrastColor;
    color = hex;
  } else {
    backgroundColor = hex;
    color = contrastColor;
  }

  var classes = useStyles({
    backgroundColor: backgroundColor,
    color: color
  });
  return /*#__PURE__*/React.createElement("div", {
    className: classes.picker
  }, /*#__PURE__*/React.createElement(ColorInput, {
    className: classes.input,
    variant: variant,
    color: hex,
    onChange: onChange
  }), colors && /*#__PURE__*/React.createElement(ColorSwatches, {
    variant: variant,
    backgroundColor: backgroundColor,
    color: hex,
    colors: colors,
    onChange: onChange
  }));
};

export default CustomPicker(ColorPicker);