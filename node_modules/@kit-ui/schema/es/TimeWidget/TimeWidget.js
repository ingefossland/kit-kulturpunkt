function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import TextWidget from "../TextWidget";
import moment from "moment";

var getEnumOptions = function getEnumOptions(_ref) {
  var _ref$min = _ref.min,
      min = _ref$min === void 0 ? "00:00" : _ref$min,
      _ref$max = _ref.max,
      max = _ref$max === void 0 ? "24:00" : _ref$max,
      _ref$interval = _ref.interval,
      interval = _ref$interval === void 0 ? 15 : _ref$interval;
  var enumOptions = [];
  var start = moment().startOf('day');
  var end = moment().endOf('day');

  while (start.add(interval, 'minutes').diff(end) < 0) {
    enumOptions.push(start.format("HH:mm"));
  }

  return enumOptions;
};

var TimeWidget = function TimeWidget(props) {
  return /*#__PURE__*/React.createElement(TextWidget, _extends({
    type: "time",
    InputLabelProps: {
      shrink: true
    }
  }, props));
};

export default TimeWidget;