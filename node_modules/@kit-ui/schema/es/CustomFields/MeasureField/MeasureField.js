function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useState, useEffect } from "react";
import { getDefaultFormState } from "../../utils";
import model from "./MeasureField.model";
import { getMeasureFromString } from "./utils";

var MasureField = function MasureField(props) {
  var ObjectField = props.registry.fields.ObjectField;
  var formData = props.formData;
  var schema = props.schema;

  var _useState = useState(formData.text),
      text = _useState[0],
      setText = _useState[1];

  var _useState2 = useState(formData.list),
      list = _useState2[0],
      setList = _useState2[1];

  useEffect(function () {
    var newList = getMeasureFromString(text);
    setList(newList);
  }, [text]);

  var _onChange = function _onChange(formData) {
    if (formData.text !== text) {
      setText(formData.text);
    } else {}
  };

  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(ObjectField, _extends({}, props, {
    formData: _extends({}, formData, {
      text: text,
      list: list
    }),
    onChange: _onChange
  })), "List: ", JSON.stringify(list));
};

MasureField.defaultProps = {
  formData: {}
};
export default MasureField;