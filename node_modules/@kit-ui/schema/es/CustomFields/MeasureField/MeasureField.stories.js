function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Schema from "../../SchemaEditor";
import MeasureField from "./MeasureField";
import model from "./MeasureField.model";
export default {
  title: 'Fields/CustomFields/MeasureField',
  component: Schema,
  args: _extends({}, model, {
    "uiSchema": _extends({}, model.uiSchema, {
      "ui:field": MeasureField
    })
  }),
  argTypes: {}
};

var Template = function Template(args) {
  return /*#__PURE__*/React.createElement(Schema, args);
};

export var Default = Template.bind({});
Default.args = {
  formData: {
    text: "Forside:  12x12x12cm, Bakside: 12x12x12cm, Topp: 12x12x12cm"
  }
};