function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react'; //import _ from 'lodash';

import { retrieveSchema, getDefaultFormState, getUiOptions, getUiLayout, getUiContext, getUiActions, getUiPreview, getUiToolbar, getUiSettings, getUiFieldset, getUiMenu } from "../utils";
import SchemaFieldset from "../SchemaFieldset/SchemaFieldset";

var DefaultLayout = function DefaultLayout(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React.createElement("div", null, children);
};

var LayoutField = function LayoutField(props) {
  var id = props.id,
      idPrefix = props.idPrefix,
      idSchema = props.idSchema,
      schema = props.schema,
      uiSchema = props.uiSchema,
      formData = props.formData,
      formContext = props.formContext,
      children = props.children,
      registry = props.registry;
  var uiLayout = getUiLayout(props);
  var uiMenu = uiLayout.nav && getUiMenu(props);
  var layout = uiLayout && uiLayout.layout;
  var fieldset = uiLayout && uiLayout.fieldset;

  var getLayoutTemplate = function getLayoutTemplate(layout) {
    if (typeof layout === "function") {
      return layout;
    }
    /* Layout field = layout+Layout */


    var fields = registry.fields;
    var fieldLayout = layout + "Layout";

    if (typeof layout === "string" && fields[fieldLayout]) {
      return fields[fieldLayout];
    }

    return DefaultLayout;
  };

  var LayoutTemplate = layout && getLayoutTemplate(layout);

  if (!LayoutTemplate) {
    return /*#__PURE__*/React.createElement("p", null, "Missing layout: ", layout);
  }

  var uiPreview = getUiPreview(props);
  var uiContext = getUiContext(props);
  var uiActions = getUiActions(props);
  var uiSettings = getUiSettings(props);
  var uiToolbar = getUiToolbar(props);

  if (fieldset && fieldset.length) {
    return /*#__PURE__*/React.createElement(LayoutTemplate, _extends({}, uiContext, uiActions, uiLayout, uiPreview, {
      menu: uiMenu,
      toolbar: uiToolbar,
      settings: uiSettings
    }), /*#__PURE__*/React.createElement(SchemaFieldset, _extends({}, props, {
      fieldset: fieldset
    })));
  }

  return /*#__PURE__*/React.createElement(LayoutTemplate, _extends({}, uiLayout, uiPreview, uiActions, {
    menu: uiMenu,
    settings: uiSettings
  }), children);
};

export default LayoutField;