function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import ObjectField from "@rjsf/core/lib/components/fields/ObjectField";

var CustomObjectField = function CustomObjectField(props) {
  var LayoutField = props.registry.fields.LayoutField;

  var newRegistry = _extends({}, props.registry, {
    formContext: _extends({}, props.formContext, {
      parentSchema: props.schema,
      parentFormData: props.formData,
      onParentChange: props.onChange
    })
  });

  return /*#__PURE__*/React.createElement(LayoutField, _extends({}, props, {
    registry: newRegistry,
    formContext: newRegistry.formContext
  }), /*#__PURE__*/React.createElement(ObjectField, _extends({}, props, {
    registry: newRegistry,
    formContext: newRegistry.formContext
  })));
};

export default CustomObjectField;