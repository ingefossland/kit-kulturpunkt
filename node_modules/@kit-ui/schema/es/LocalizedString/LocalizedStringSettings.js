import React, { forwardRef, useState, useEffect, useRef } from 'react';
import PropTypes from "prop-types";
import { Dropdown } from "@kit-ui/core";
import { getUiOptions, getDefaultFormState } from "../utils";
import IconButton from "@material-ui/core/IconButton";
import { makeStyles } from '@material-ui/core/styles';
var useStyles = makeStyles(function (theme) {
  return {
    button: {},
    icon: {
      fontSize: ".75em",
      width: "1em",
      height: "1em",
      border: "1px solid"
    }
  };
});

var LocalizedStringSettings = function LocalizedStringSettings(props) {
  var schema = props.schema,
      uiSchema = props.uiSchema,
      formData = props.formData,
      formContext = props.formContext;
  var uiOptions = getUiOptions(uiSchema);
  var languages = formContext.languages || ["en"];
  var defaultLocale = formContext.defaultLocale || languages[0];
  var currentLocale = formContext.currentLocale || defaultLocale;

  var _useState = useState(false),
      expanded = _useState[0],
      setExpanded = _useState[1];

  var anchorRef = useRef(null);

  var _onToggle = function _onToggle(event) {
    setExpanded(function (prevExpanded) {
      return !prevExpanded;
    });
  };

  var _onCollapse = function _onCollapse(event) {
    setExpanded(false);
  };

  var classes = useStyles();
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {
    className: classes.button,
    onClick: _onToggle,
    ref: anchorRef
  }, /*#__PURE__*/React.createElement("i", {
    className: classes.icon
  }, currentLocale)), /*#__PURE__*/React.createElement(Dropdown, {
    expanded: expanded,
    anchorEl: anchorRef.current,
    onClickAway: _onCollapse
  }, JSON.stringify(formData)));
};

LocalizedStringSettings.defaultProps = {};
LocalizedStringSettings.propTypes = process.env.NODE_ENV !== "production" ? {} : {};
export default LocalizedStringSettings;