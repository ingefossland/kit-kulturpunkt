"use strict";

exports.__esModule = true;
exports.default = void 0;

var _utils = require("../../utils");

var _default = {
  "select": {
    "source": "source",
    "sourceId": "sourceId",
    "imageUrl": "imageUrl",
    "title": "title",
    "typeLabel": "typeLabel",
    "metadata": "metadata",
    "filename": "filename",
    "duration": "duration"
  },
  prepare: function prepare(_ref) {
    var formData = _ref.formData,
        formContext = _ref.formContext;
    var uploadProgress = formData.uploadProgress,
        uploadStatus = formData.uploadStatus,
        title = formData.title,
        description = formData.description,
        mediaType = formData.mediaType,
        mediaSize = formData.mediaSize,
        mediaWidth = formData.mediaWidth,
        mediaHeight = formData.mediaHeight,
        mimeType = formData.mimeType,
        imageUrl = formData.imageUrl,
        filename = formData.filename,
        duration = formData.duration,
        content = formData.content;
    var t = formContext && formContext.t;
    var defaultLocale = formContext && formContext.defaultLocale;
    var currentLocale = formContext && formContext.currentLocale;
    var locale = currentLocale || defaultLocale;
    var localeId = locale && "locale:" + locale;

    if (content) {
      title = content.title && content.title[localeId] || content.filename || title;
      description = content.description && content.description[localeId] || description;
      duration = content.duration || duration;
      filename = content.filename || filename;
    }

    if (content && content.artwork && content.artwork[0] && content.artwork[0].media && content.artwork[0].media.imageUrl) {
      imageUrl = content.artwork[0].media.imageUrl;
    }

    var typeLabel;

    if (mediaType) {
      typeLabel = mediaType;
    }

    if (mediaType === "misc" && mimeType) {
      typeLabel = mimeType;
    } // meta


    var metadata = [];

    if (uploadProgress) {
      metadata.push(uploadProgress + "%");
    } else if (uploadStatus && uploadStatus !== "done") {
      metadata.push(t && t("uploadStatus:" + uploadStatus || uploadStatus));
    }

    if (mediaWidth && mediaHeight) {
      metadata.push(mediaWidth + "x" + mediaHeight);
    } else if (mediaSize) {
      metadata.push((0, _utils.formatMediaSize)(mediaSize));
    }

    if (duration) {
      metadata.push((0, _utils.formatMediaTime)(duration));
    }

    if (content && content.captions && content.captions.length) {
      metadata.push(content.captions.length + " undertekster");
    }

    return {
      source: undefined,
      sourceId: undefined,
      imageUrl: imageUrl,
      title: title,
      typeLabel: typeLabel,
      metadata: metadata,
      filename: filename,
      duration: duration
    };
  }
};
exports.default = _default;
module.exports = exports.default;