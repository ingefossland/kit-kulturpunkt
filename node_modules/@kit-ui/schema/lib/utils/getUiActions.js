"use strict";

exports.__esModule = true;
exports.default = exports.getUiActions = void 0;

var _utils = require("../utils");

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var getUiActions = function getUiActions(props) {
  var idSchema = props.idSchema,
      schema = props.schema,
      formData = props.formData,
      formContext = props.formContext;

  var buttonProps = _extends({}, props, {
    id: idSchema && idSchema.$id
  });

  var uiActions = {};
  formContext && Object.keys(formContext).map(function (name) {
    if (name.startsWith('on') && typeof formContext[name] === "function") {
      uiActions[name] = function () {
        return formContext[name](buttonProps);
      };
    }
  });

  var onPropertyChange = function onPropertyChange(name, value) {
    if (schema.type === "object") {
      var _extends2;

      props.onChange && props.onChange((0, _utils.getDefaultFormState)(schema, _extends({}, formData, (_extends2 = {}, _extends2[name] = value, _extends2))));
    }
  };

  uiActions.onPropertyChange = onPropertyChange;

  uiActions.onReset = function () {
    props.onChange && props.onChange((0, _utils.getDefaultFormState)(schema, {}));
  };

  uiActions.onRemove = function () {
    if (schema.type === "object") {
      props.onChange && props.onChange((0, _utils.getDefaultFormState)(schema, {}));
    }
  };

  uiActions.onDelete = function () {
    return onPropertyChange('_action', 'delete');
  };

  uiActions.onRestore = function () {
    return onPropertyChange('_action', 'restore');
  };

  uiActions.onHide = function () {
    return onPropertyChange('hidden', true);
  };

  uiActions.onUnhide = function () {
    return onPropertyChange('hidden', false);
  };

  return uiActions;
};

exports.getUiActions = getUiActions;
var _default = getUiActions;
exports.default = _default;