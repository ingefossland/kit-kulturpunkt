"use strict";

exports.__esModule = true;
exports.default = void 0;

var _utils = require("../utils");

var _cropdata = require("./cropdata");

var _focalpoint = require("./focalpoint");

var _filters = require("./filters");

var _annotations = require("./annotations");

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var getMediaField = function getMediaField(_ref) {
  var schema = _ref.schema,
      _ref$uiSchema = _ref.uiSchema,
      uiSchema = _ref$uiSchema === void 0 ? {} : _ref$uiSchema,
      props = _objectWithoutPropertiesLoose(_ref, ["schema", "uiSchema"]);

  var _schema = schema,
      mediaType = _schema.mediaType;
  var uiOptions = (0, _utils.getUiOptions)(uiSchema);
  var imageCropdata = schema.cropdata || schema.imageCropdata || uiOptions.imageCropdata || undefined;
  var imageFocalpoint = schema.focalpoint || schema.imageFocalpoint || uiOptions.imageFocalpoint || undefined;
  var imageAnnotations = schema.annotations || schema.imageAnnotations || uiOptions.imageAnnotations || undefined;
  var imageFilters = schema.filters || schema.imageFilters || uiOptions.imageFilters || undefined;
  schema = {
    "type": "object",
    "properties": {
      "mediaId": {
        "type": "string",
        "readonly": true
      },
      "media": {
        "type": "object",
        "properties": {
          "mediaType": {
            "type": "string",
            "default": mediaType,
            "readonly": true
          }
        }
      }
    }
  };

  if (mediaType === "image" && imageCropdata) {
    schema = _extends({}, schema, {
      properties: _extends({}, schema.properties, {
        "imageCropdata": (0, _cropdata.getCropdataSchema)()
      })
    });
  }

  if (mediaType === "image" && imageFocalpoint) {
    schema = _extends({}, schema, {
      properties: _extends({}, schema.properties, {
        "imageFocalpoint": (0, _focalpoint.getFocalpointSchema)()
      })
    });
  }

  if (mediaType === "image" && imageAnnotations) {
    schema = _extends({}, schema, {
      properties: _extends({}, schema.properties, {
        "imageAnnotations": (0, _annotations.getAnnotationsSchema)()
      })
    });
  }

  if (mediaType === "image" && imageFilters) {
    schema = _extends({}, schema, {
      properties: _extends({}, schema.properties, {
        "imageFilters": (0, _filters.getFiltersSchema)({
          filters: imageFilters
        })
      })
    });
  }

  var formData = (0, _utils.getDefaultFormState)(schema, _extends({}, props.formData));
  return _extends({}, props, {
    formData: formData,
    schema: schema,
    uiSchema: _extends({
      "ui:field": "media"
    }, uiSchema)
  });
};

var _default = getMediaField;
exports.default = _default;
module.exports = exports.default;