"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ArrayField = _interopRequireDefault(require("@rjsf/core/lib/components/fields/ArrayField"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var CustomArrayField = function CustomArrayField(props) {
  /* Add onChange to formContext to enable sorting, etc. */
  var _onAddItem = function _onAddItem(item) {
    console.log("onAddItem", item);
    var newFormData = props.formData || [];
    newFormData.push(item);
    props.onChange(newFormData);
  };

  var registry = _extends({}, props.registry, {
    formContext: _extends({}, props.registry.formContext, {
      onAddItem: _onAddItem,
      onArrayChange: props.onChange
    })
  });

  var _useState = (0, _react.useState)(props.formData),
      formData = _useState[0],
      setFormData = _useState[1];

  (0, _react.useEffect)(function () {
    setFormData(props.formData);
  }, [props.formData]);
  return /*#__PURE__*/_react.default.createElement(_ArrayField.default, _extends({}, props, {
    formData: formData,
    registry: registry
  }));
};

var _default = CustomArrayField;
exports.default = _default;
module.exports = exports.default;