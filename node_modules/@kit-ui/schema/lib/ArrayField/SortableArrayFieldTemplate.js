"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _utils = require("../utils");

var _reactSortableHoc = require("react-sortable-hoc");

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var _DragHandle = _interopRequireDefault(require("@material-ui/icons/DragHandle"));

var _arrayMove = _interopRequireDefault(require("array-move"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var SortableHandle = (0, _reactSortableHoc.sortableHandle)(function () {
  return /*#__PURE__*/_react.default.createElement(_IconButton.default, null, /*#__PURE__*/_react.default.createElement(_DragHandle.default, null));
});
var SortableItem = (0, _reactSortableHoc.sortableElement)(function (_ref) {
  var props = _ref.props,
      sortIndex = _ref.sortIndex,
      item = _objectWithoutPropertiesLoose(_ref, ["props", "sortIndex"]);

  item = _extends({}, item, {
    index: sortIndex
  });
  var _item = item,
      hasToolbar = _item.hasToolbar,
      hasMoveUp = _item.hasMoveUp,
      hasMoveDown = _item.hasMoveDown,
      hasRemove = _item.hasRemove;
  var _item2 = item,
      onAddIndexClick = _item2.onAddIndexClick,
      onDropIndexClick = _item2.onDropIndexClick,
      onReorderClick = _item2.onReorderClick;
  var itemUiSchema = item.children.props && item.children.props.uiSchema || {};

  var uiSchema = _extends({}, itemUiSchema, {
    "ui:removable": hasRemove
  });

  var itemProps = _extends({}, item.children.props, {
    formContext: props.formContext,
    hasToolbar: hasToolbar,
    hasMoveUp: false,
    hasMoveDown: false,
    hasRemove: hasRemove,
    onAddIndexClick: onAddIndexClick,
    onDropIndexClick: onDropIndexClick,
    onReorderClick: onReorderClick
  });

  var uiOptions = (0, _utils.getUiOptions)(uiSchema || {});
  var uiToolbar = (0, _utils.getUiToolbar)(_extends({}, itemProps, {
    "uiSchema": uiSchema
  }));
  var ArrayItemLayout = props.registry.fields.ArrayItemLayout;

  var arrayItem = _react.default.cloneElement(item.children, _extends({}, itemProps, {
    uiSchema: _extends({}, uiSchema, {
      "ui:sortableHandle": /*#__PURE__*/_react.default.createElement(SortableHandle, null),
      "ui:startAdornment": /*#__PURE__*/_react.default.createElement(SortableHandle, null),
      "ui:toolbar": uiToolbar,
      "ui:layout": uiOptions.layout || ArrayItemLayout
    })
  }));

  return arrayItem;
});
var SortableList = (0, _reactSortableHoc.sortableContainer)(function (_ref2) {
  var _ref2$items = _ref2.items,
      items = _ref2$items === void 0 ? [] : _ref2$items,
      props = _objectWithoutPropertiesLoose(_ref2, ["items"]);

  return /*#__PURE__*/_react.default.createElement("div", {
    key: "array-item-list-" + props.idSchema.$id
  }, items.map(function (item, index) {
    return /*#__PURE__*/_react.default.createElement(SortableItem, _extends({
      key: "item-" + index,
      sortIndex: index
    }, item, {
      props: props
    }));
  }));
});

var SortableArrayFieldTemplate = function SortableArrayFieldTemplate(props) {
  var formData = props.formData,
      onChange = props.onChange;

  var _onSortEnd = function _onSortEnd(_ref3) {
    var oldIndex = _ref3.oldIndex,
        newIndex = _ref3.newIndex;
    var newFormData = (0, _arrayMove.default)(formData, oldIndex, newIndex);
    onChange(newFormData);
  };

  var uiOptions = (0, _utils.getUiOptions)(props.uiSchema || {});
  var _props$registry$field = props.registry.fields,
      LayoutField = _props$registry$field.LayoutField,
      ArrayLayout = _props$registry$field.ArrayLayout;

  var uiSchema = _extends({}, props.uiSchema, {
    "ui:buttons": (0, _utils.getArrayButtons)(props),
    "ui:layout": uiOptions.layout || ArrayLayout
  });

  return /*#__PURE__*/_react.default.createElement(LayoutField, _extends({}, props, {
    uiSchema: uiSchema
  }), /*#__PURE__*/_react.default.createElement(SortableList, _extends({}, props, {
    onSortEnd: _onSortEnd,
    helperClass: "sortable-helper",
    useDragHandle: true
  })));
};

var _default = SortableArrayFieldTemplate;
exports.default = _default;
module.exports = exports.default;