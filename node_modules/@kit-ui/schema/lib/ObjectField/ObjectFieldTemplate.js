"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _styles = require("@material-ui/core/styles");

var _Grid = _interopRequireDefault(require("@material-ui/core/Grid"));

var _FormLabel = _interopRequireDefault(require("@material-ui/core/FormLabel"));

var _FormGroup = _interopRequireDefault(require("@material-ui/core/FormGroup"));

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    fieldset: {
      padding: function padding(props) {
        return theme.spacing(props.padding);
      }
    },
    nav: {
      "& > [aria-hidden=true]": {
        display: function display(props) {
          return !props.hasFormat && "none";
        },
        opacity: 0,
        pointerEvents: "none"
      }
    },
    flex: {
      display: "flex",
      flexDirection: function flexDirection(props) {
        return !props.inline && "column";
      },
      alignItems: function alignItems(props) {
        return props.inline && "center";
      },
      margin: function margin(props) {
        return theme.spacing(props.spacing * -1 / 2);
      },
      "& > *": {
        margin: function margin(props) {
          return theme.spacing(props.spacing * 1 / 2);
        }
      }
    },
    flexItem: {//        margin: props => { return theme.spacing(props.spacing * 1/2) }   
    }
  };
});

var ObjectFieldTemplate = function ObjectFieldTemplate(props) {
  var uiOptions = (0, _utils.getUiOptions)(props.uiSchema);
  var nav = uiOptions.nav,
      grid = uiOptions.grid,
      _uiOptions$inline = uiOptions.inline,
      inline = _uiOptions$inline === void 0 ? false : _uiOptions$inline,
      _uiOptions$spacing = uiOptions.spacing,
      spacing = _uiOptions$spacing === void 0 ? 0 : _uiOptions$spacing,
      _uiOptions$padding = uiOptions.padding,
      padding = _uiOptions$padding === void 0 ? 0 : _uiOptions$padding,
      direction = uiOptions.direction,
      justify = uiOptions.justify,
      alignItems = uiOptions.alignItems,
      format = uiOptions.format,
      minHeight = uiOptions.minHeight;
  var hasFormat = format || minHeight || false;
  var classes = useStyles({
    inline: inline,
    padding: padding,
    spacing: spacing,
    direction: direction,
    justify: justify,
    alignItems: alignItems,
    hasFormat: hasFormat
  }); // nav

  if (nav) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: classes.nav,
      role: "tablist"
    }, props.properties.map(function (field, index) {
      var fieldUiSchema = field.uiSchema || props.uiSchema[field.name] || {};
      var fieldUiOptions = (0, _utils.getUiOptions)(fieldUiSchema) || {};
      return /*#__PURE__*/_react.default.createElement("div", {
        role: "tab",
        "data-name": field.name,
        "aria-hidden": !fieldUiOptions.selected,
        key: index
      }, field.content);
    }));
  } // grid


  if (grid) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: classes.fieldset
    }, /*#__PURE__*/_react.default.createElement(_Grid.default, {
      className: classes.grid,
      container: true,
      spacing: spacing,
      direction: direction || "row",
      justify: justify || "flex-start",
      alignItems: alignItems || "flex-start"
    }, props.properties.map(function (field, index) {
      var _React$createElement;

      var fieldUiSchema = field.uiSchema || props.uiSchema[field.name] || {};
      var fieldUiOptions = (0, _utils.getUiOptions)(fieldUiSchema) || {};
      var xs = fieldUiOptions.xs,
          sm = fieldUiOptions.sm,
          md = fieldUiOptions.md,
          lg = fieldUiOptions.lg,
          xl = fieldUiOptions.xl;
      return /*#__PURE__*/_react.default.createElement(_Grid.default, (_React$createElement = {
        "data-name": field.name,
        item: true,
        key: index,
        xs: xs,
        sm: sm,
        md: md,
        lg: lg,
        xl: xl
      }, _React$createElement["key"] = index, _React$createElement), field.content);
    })));
  } // flex


  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.fieldset
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.flex
  }, props.properties.map(function (field, index) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: classes.flexItem,
      "data-name": field.name,
      key: index
    }, field.content);
  })));
};

var _default = ObjectFieldTemplate;
exports.default = _default;
module.exports = exports.default;