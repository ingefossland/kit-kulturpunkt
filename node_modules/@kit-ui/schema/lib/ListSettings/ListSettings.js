"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@kit-ui/core");

var _ButtonBase = _interopRequireDefault(require("@material-ui/core/ButtonBase"));

var _ListOptions = _interopRequireDefault(require("./ListOptions"));

var _styles = require("@material-ui/core/styles");

var _core2 = require("@rjsf/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var getUiOptions = _core2.utils.getUiOptions;
var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    button: {
      padding: theme.spacing(1.5),
      fontFamily: "Akkurat, sans-serif",
      fontSize: 12,
      fontWeight: "bold",
      lineHeight: 1
    }
  };
});

var ListSettings = function ListSettings(_ref) {
  var value = _ref.value,
      options = _ref.options,
      uiSchema = _ref.uiSchema,
      onChange = _ref.onChange;
  var uiOptions = getUiOptions(uiSchema);
  var enumOptions = options.enumOptions.map(function (option) {
    var icon = uiOptions.enumIcons && uiOptions.enumIcons[option.value];
    return _extends({}, option, {
      icon: icon
    });
  });

  if (!value) {
    value = enumOptions[0].value;
  }

  var label;
  enumOptions.map(function (option) {
    if (option.value === value) {
      label = option.label;
    }
  });

  var _useState = (0, _react.useState)(false),
      expanded = _useState[0],
      setExpanded = _useState[1];

  var anchorRef = (0, _react.useRef)(null);

  var _onChange = function _onChange(value) {
    onChange && onChange(value);
    setExpanded(false);
  };

  var _onToggle = function _onToggle(event) {
    setExpanded(function (prevExpanded) {
      return !prevExpanded;
    });
  };

  var _onCollapse = function _onCollapse(event) {
    setExpanded(false);
  };

  var classes = useStyles();
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ButtonBase.default, {
    className: classes.button,
    onClick: _onToggle,
    ref: anchorRef
  }, label || value), /*#__PURE__*/_react.default.createElement(_core.Dropdown, {
    expanded: expanded,
    anchorEl: anchorRef.current,
    onClickAway: _onCollapse
  }, /*#__PURE__*/_react.default.createElement(_ListOptions.default, {
    options: uiOptions.enumOptions || enumOptions,
    onChange: _onChange
  })));
};

ListSettings.defaultProps = {};
ListSettings.propTypes = process.env.NODE_ENV !== "production" ? {} : {};
var _default = ListSettings;
exports.default = _default;
module.exports = exports.default;