"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/core/styles");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    sectionBody: {
      paddingLeft: function paddingLeft(props) {
        return theme.spacing(props.padding);
      },
      paddingRight: function paddingRight(props) {
        return theme.spacing(props.padding);
      },
      paddingBottom: function paddingBottom(props) {
        return theme.spacing(props.padding);
      },
      "& > * + *": {
        marginTop: function marginTop(props) {
          return theme.spacing(props.spacing);
        }
      }
    }
  };
});

var SectionBody = function SectionBody(_ref) {
  var className = _ref.className,
      _ref$padding = _ref.padding,
      padding = _ref$padding === void 0 ? 0 : _ref$padding,
      _ref$spacing = _ref.spacing,
      spacing = _ref$spacing === void 0 ? 0 : _ref$spacing,
      children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, ["className", "padding", "spacing", "children"]);

  var classes = useStyles({
    padding: padding,
    spacing: spacing
  });

  if (!children) {
    return "";
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: className || classes.sectionBody
  }, children);
};

var _default = SectionBody;
exports.default = _default;
module.exports = exports.default;