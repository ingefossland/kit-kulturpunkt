"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactColor = require("react-color");

var _ColorInput = _interopRequireDefault(require("./ColorInput"));

var _ColorSwatches = _interopRequireDefault(require("./ColorSwatches"));

var _color = _interopRequireDefault(require("react-color/lib/helpers/color"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    picker: {
      width: theme.spacing(25),
      display: "flex",
      flexDirection: "column"
    },
    input: {
      fontFamily: "Akkurat Mono, monospace",
      backgroundColor: function backgroundColor(props) {
        return props.backgroundColor;
      },
      color: function color(props) {
        return props.color;
      },
      minHeight: theme.spacing(14),
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      "& input": {
        border: "none",
        backgroundColor: "transparent",
        color: "inherit",
        fontFamily: "inherit",
        fontSize: "inherit",
        lineHeight: "1",
        width: "100%",
        //            minHeight: theme.spacing(7),
        textAlign: "center"
      }
    }
  };
});

var ColorPicker = function ColorPicker(_ref) {
  var _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? "default" : _ref$variant,
      hex = _ref.hex,
      rgb = _ref.rgb,
      hsl = _ref.hsl,
      hsv = _ref.hsv,
      backgroundColor = _ref.backgroundColor,
      _ref$colors = _ref.colors,
      colors = _ref$colors === void 0 ? [] : _ref$colors,
      onChange = _ref.onChange;

  var getContrastColor = function getContrastColor() {
    if (!_color.default.isValidHex(hex)) {
      return false;
    }

    if (hex === 'transparent') {
      return 'rgba(0,0,0,0.4)';
    }

    var yiq = (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
    return yiq >= 128 ? '#000' : '#fff';
  };

  var contrastColor = getContrastColor();
  var color;

  if (variant === "text") {
    backgroundColor = backgroundColor || contrastColor;
    color = hex;
  } else {
    backgroundColor = hex;
    color = contrastColor;
  }

  var classes = useStyles({
    backgroundColor: backgroundColor,
    color: color
  });
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.picker
  }, /*#__PURE__*/_react.default.createElement(_ColorInput.default, {
    className: classes.input,
    variant: variant,
    color: hex,
    onChange: onChange
  }), colors && /*#__PURE__*/_react.default.createElement(_ColorSwatches.default, {
    variant: variant,
    backgroundColor: backgroundColor,
    color: hex,
    colors: colors,
    onChange: onChange
  }));
};

var _default = (0, _reactColor.CustomPicker)(ColorPicker);

exports.default = _default;
module.exports = exports.default;