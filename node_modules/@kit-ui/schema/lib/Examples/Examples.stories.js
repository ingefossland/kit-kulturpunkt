"use strict";

exports.__esModule = true;
exports.OneOf = exports.AnyOf = exports.Large = exports.Examples = exports.Errors = exports.Custom = exports.References = exports.Ordering = exports.Widgets = exports.Numbers = exports.Arrays = exports.Nested = exports.Simple = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _SchemaEditor = _interopRequireDefault(require("../SchemaEditor/"));

var _samples = require("@rjsf/playground/lib/samples");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _default = {
  title: 'Examples',
  component: _SchemaEditor.default,
  args: {},
  argTypes: {}
};
exports.default = _default;

var Template = function Template(args) {
  return /*#__PURE__*/_react.default.createElement(_SchemaEditor.default, args);
};

var Simple = Template.bind({});
exports.Simple = Simple;
Simple.args = _extends({}, _samples.samples["Simple"]);
var Nested = Template.bind({});
exports.Nested = Nested;
Nested.args = _extends({}, _samples.samples["Nested"]);
var Arrays = Template.bind({});
exports.Arrays = Arrays;
Arrays.args = _extends({}, _samples.samples["Arrays"]);
var Numbers = Template.bind({});
exports.Numbers = Numbers;
Numbers.args = _extends({}, _samples.samples["Numbers"]);
var Widgets = Template.bind({});
exports.Widgets = Widgets;
Widgets.args = _extends({}, _samples.samples["Widgets"]);
var Ordering = Template.bind({});
exports.Ordering = Ordering;
Ordering.args = _extends({}, _samples.samples["Ordering"]);
var References = Template.bind({});
exports.References = References;
References.args = _extends({}, _samples.samples["References"]);
var Custom = Template.bind({});
exports.Custom = Custom;
Custom.args = _extends({}, _samples.samples["Custom"]);
var Errors = Template.bind({});
exports.Errors = Errors;
Errors.args = _extends({}, _samples.samples["Errors"]);
var Examples = Template.bind({});
exports.Examples = Examples;
Examples.args = _extends({}, _samples.samples["Examples"]);
var Large = Template.bind({});
exports.Large = Large;
Large.args = _extends({}, _samples.samples["Large"]);
var AnyOf = Template.bind({});
exports.AnyOf = AnyOf;
AnyOf.args = _extends({}, _samples.samples["Any Of"]);
var OneOf = Template.bind({});
exports.OneOf = OneOf;
OneOf.args = _extends({}, _samples.samples["One Of"]);