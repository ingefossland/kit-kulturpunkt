"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _RRulesField = _interopRequireDefault(require("./RRulesField.model"));

var _utils = require("./utils");

var _core = require("@rjsf/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var getUiOptions = _core.utils.getUiOptions,
    getDefaultFormState = _core.utils.getDefaultFormState;

var RRulesField = function RRulesField(props) {
  var schema = _extends({}, _RRulesField.default.schema, props.schema);

  var uiSchema = _extends({}, _RRulesField.default.uiSchema, props.uiSchema);

  var getFormData = function getFormData(formData) {
    if (props.schema.type === "string") {
      return (0, _utils.getFormDataFromRRule)(formData);
    } else {
      return getDefaultFormState(schema, formData);
    }
  };

  var _useState = (0, _react.useState)(getFormData(props.formData)),
      formData = _useState[0],
      setFormData = _useState[1]; // onChange


  var _onChange = function _onChange(formData) {
    setFormData(formData);

    if (props.schema.type === "string") {
      props.onChange((0, _utils.getRRuleFromFormData)(formData));
    } else {
      props.onChange(formData);
    }
  }; // formData


  var ObjectField = props.registry.fields.ObjectField;
  return /*#__PURE__*/_react.default.createElement(ObjectField, _extends({}, props, {
    formData: formData,
    schema: schema,
    uiSchema: uiSchema,
    onChange: _onChange
  }));
};

RRulesField.defaultProps = {
  formData: {}
};
var _default = RRulesField;
exports.default = _default;
module.exports = exports.default;