"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _moment = _interopRequireDefault(require("moment"));

var _utils = require("./utils");

var _EventField = _interopRequireDefault(require("./EventField.model"));

var _core = require("@rjsf/core");

var _object = require("core-js/fn/object");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var getUiOptions = _core.utils.getUiOptions,
    getDefaultFormState = _core.utils.getDefaultFormState;
var byWeekday = ["MO", "TU", "WE", "TH", "FR", "SA", "SU"];

var EventField = function EventField(props) {
  var formData = props.formData;

  var schema = _extends({}, _EventField.default.schema, props.schema);

  var uiSchema = _extends({}, _EventField.default.uiSchema, props.uiSchema); // set initial dtStart + rrule + rrules


  var _useState = (0, _react.useState)(formData.rrule),
      rrule = _useState[0],
      setRRule = _useState[1];

  var _useState2 = (0, _react.useState)(rrule),
      rruleText = _useState2[0],
      setRRuleText = _useState2[1];

  var _useState3 = (0, _react.useState)(formData.rrules),
      rrules = _useState3[0],
      setRRules = _useState3[1]; // onChange


  var _onChange = function _onChange(formData) {
    var _formData = formData,
        allDay = _formData.allDay,
        date = _formData.date,
        _formData$startTime = _formData.startTime,
        startTime = _formData$startTime === void 0 ? "00:00" : _formData$startTime,
        _formData$endTime = _formData.endTime,
        endTime = _formData$endTime === void 0 ? "00:00" : _formData$endTime,
        dtStart = _formData.dtStart,
        dtEnd = _formData.dtEnd;

    if (date) {
      dtStart = date + " " + startTime;
      dtEnd = date + " " + endTime;
    }

    var formatDate = function formatDate(date) {
      return date && allDay && (0, _moment.default)(date).format('YYYY-MM-DD') || date && (0, _moment.default)(date).format('YYYY-MM-DDTHH:mm:ss') || undefined;
    };

    if (!dtEnd && dtStart || (0, _moment.default)(dtEnd).isBefore((0, _moment.default)(dtStart))) {
      dtEnd = dtStart;
    }

    var time = allDay && "Hele dagen" || startTime !== endTime && startTime + "–" + endTime || startTime;
    formData = _extends({}, formData, {
      time: time,
      dtStart: formatDate(dtStart),
      dtEnd: formatDate(dtEnd)
    });
    props.onChange(formData);
  }; // rrules from rrule


  (0, _react.useEffect)(function () {
    var rrules;

    if (formData.rrule && formData.rrule !== "custom") {
      rrules = (0, _utils.getFormDataFromRRule)(formData.rrule);
    } else if (!formData.rrule) {
      rrules = getDefaultFormState({
        schema: schema.properties.rrules
      });
    }

    rrules && setRRules(rrules);
    setRRule(formData.rrule);
  }, [formData.rrule]); // rrule from rrules

  (0, _react.useEffect)(function () {
    var rrule;

    if (formData.rrule === "custom") {
      rrule = (0, _utils.getRRuleFromFormData)(formData.rrules);
    }

    rrule && setRRule(rrule);
    rrule && setRRuleText((0, _utils.getRRuleText)(rrule));
    setRRules(formData.rrules);
  }, [formData.rrules]); // get dtStart rules

  var _useState4 = (0, _react.useState)([]),
      dtEnum = _useState4[0],
      setDtEnum = _useState4[1];

  var _useState5 = (0, _react.useState)([]),
      dtEnumNames = _useState5[0],
      setDtEnumNames = _useState5[1];

  (0, _react.useEffect)(function () {
    var isoWeekday = (0, _moment.default)(formData.dtStart).isoWeekday();
    var isoMonth = (0, _moment.default)(formData.dtStart).month() + 1;
    var dayOfMonth = (0, _moment.default)(formData.dtStart).format('D');
    var weekly = "FREQ=WEEKLY;BYDAY=" + byWeekday[isoWeekday - 1];
    var monthly = "FREQ=MONTHLY;BYMONTHDAY=" + dayOfMonth;
    var yearly = "FREQ=YEARLY;BYMONTH=" + isoMonth + ";BYMONTHDAY=" + dayOfMonth;
    setDtEnum([weekly, monthly, yearly]);
  }, [formData.dtStart]); // get rrules enum

  var getRRuleSchema = function getRRuleSchema() {
    var rruleSchema = schema.properties.rrule;
    var defaultRRuleEnum = rruleSchema && rruleSchema.enum;
    var defaultRRuleEnumNames = rruleSchema && rruleSchema.enumNames; //        const customRule = defaultRRuleEnum.includes("custom")
    //        const customRuleIndex = customRule && defaultRRuleEnum.indexOf("custom")
    //        const customRulesName = customRuleIndex && defaultRRuleEnumNames[customRuleIndex] || customRule

    var rruleEnum = defaultRRuleEnum.concat(dtEnum);

    if (rrule && rrule !== "custom" && !rruleEnum.includes(rrule)) {
      rruleEnum.push(rrule);
    }

    var rruleEnumNames = rruleEnum.map(function (rrule, index) {
      if (defaultRRuleEnumNames && defaultRRuleEnumNames[index]) {
        return defaultRRuleEnumNames[index];
      }

      return (0, _utils.getRRuleText)(rrule);
    });
    return _extends({}, rruleSchema, {
      enum: rruleEnum,
      enumNames: rruleEnumNames
    });
  }; // schema, formData, etc


  var newSchema = _extends({}, schema, {
    properties: _extends({}, schema.properties, {
      rrule: getRRuleSchema()
    })
  });

  var newFormData = _extends({}, formData, {
    //        rrule: rrule,
    rrules: rrules
  }); // formData


  var ObjectField = props.registry.fields.ObjectField;
  return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(ObjectField, _extends({}, props, {
    schema: newSchema,
    uiSchema: uiSchema,
    formData: newFormData,
    onChange: _onChange
  })), /*#__PURE__*/_react.default.createElement("hr", null), JSON.stringify(dtEnum), /*#__PURE__*/_react.default.createElement("hr", null), "RRULE: ", JSON.stringify(rrule), /*#__PURE__*/_react.default.createElement("hr", null), "TEXT: ", rruleText, /*#__PURE__*/_react.default.createElement("hr", null), "RRULES: ", JSON.stringify(rrules));
};

EventField.defaultProps = {
  formData: {}
};
var _default = EventField;
exports.default = _default;
module.exports = exports.default;