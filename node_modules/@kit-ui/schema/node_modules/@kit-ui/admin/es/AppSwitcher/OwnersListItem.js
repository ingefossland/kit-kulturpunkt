function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { Component } from 'react';
import ButtonBase from '@material-ui/core/ButtonBase';
import Typography from '@material-ui/core/Typography';
import { OwnerIcon } from "@kit-ui/icons";
import { makeStyles } from '@material-ui/core/styles';
import { getOwnerIcon } from "../utils";
var useStyles = makeStyles(function (theme) {
  return {
    root: {
      width: "100%",
      listStyle: "none",
      display: "flex",
      alignItems: "center",
      justifyContent: "left",
      padding: theme.spacing(1.25),
      margin: 0
    },
    icon: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      position: "relative",
      fontSize: "36px",
      "& > svg": {
        fontSize: "1em"
      }
    },
    label: {
      fontSize: "14px",
      fontWeight: "bold",
      margin: theme.spacing(1)
    }
  };
});

var OwnersListItem = function OwnersListItem(_ref) {
  var title = _ref.title,
      onClick = _ref.onClick,
      props = _objectWithoutPropertiesLoose(_ref, ["title", "onClick"]);

  var classes = useStyles();
  return /*#__PURE__*/React.createElement(ButtonBase, {
    className: classes.root,
    onClick: onClick
  }, /*#__PURE__*/React.createElement("div", {
    className: classes.icon
  }, getOwnerIcon(props)), /*#__PURE__*/React.createElement(Typography, {
    className: classes.label,
    noWrap: true
  }, title));
};

export default OwnersListItem;