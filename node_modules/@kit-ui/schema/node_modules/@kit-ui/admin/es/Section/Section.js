function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from "prop-types";
import CollapsibleSection from "./CollapsibleSection";
import DefaultSection from "./DefaultSection";
var templates = {
  "collapsible": CollapsibleSection,
  "default": DefaultSection
};

var Section = function Section(_ref) {
  var collapsible = _ref.collapsible,
      children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, ["collapsible", "children"]);

  if (collapsible) {
    return /*#__PURE__*/React.createElement(CollapsibleSection, props, children);
  }

  return /*#__PURE__*/React.createElement(DefaultSection, props, children);
};

Section.propTypes = process.env.NODE_ENV !== "production" ? {
  collapsible: PropTypes.bool
} : {};
Section.defaultProps = {
  collapsible: false
};
export default Section;