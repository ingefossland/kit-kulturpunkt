function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from "prop-types";
import SectionBase from "./SectionBase";
import SectionHeader from "./SectionHeader";
import SectionBody from "./SectionBody";
import SectionFooter from "./SectionFooter";
import SectionButtons from "./SectionButtons";
import Collapse from '@material-ui/core/Collapse';

var CollapsibleSection = function CollapsibleSection(_ref) {
  var _ref$position = _ref.position,
      position = _ref$position === void 0 ? "relative" : _ref$position,
      _ref$collapsible = _ref.collapsible,
      collapsible = _ref$collapsible === void 0 ? true : _ref$collapsible,
      _ref$expanded = _ref.expanded,
      expanded = _ref$expanded === void 0 ? false : _ref$expanded,
      title = _ref.title,
      description = _ref.description,
      buttons = _ref.buttons,
      children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, ["position", "collapsible", "expanded", "title", "description", "buttons", "children"]);

  return /*#__PURE__*/React.createElement(SectionBase, {
    position: position,
    collapsible: collapsible,
    expanded: expanded
  }, /*#__PURE__*/React.createElement(SectionHeader, _extends({}, props, {
    title: title,
    description: description,
    collapsible: collapsible,
    expanded: expanded
  })), /*#__PURE__*/React.createElement(Collapse, {
    in: expanded,
    timeout: "auto",
    unmountOnExit: true
  }, /*#__PURE__*/React.createElement(SectionBody, _extends({
    position: position
  }, props), children), expanded && /*#__PURE__*/React.createElement(SectionFooter, null, /*#__PURE__*/React.createElement(SectionButtons, {
    buttons: buttons
  }))));
};

CollapsibleSection.propTypes = process.env.NODE_ENV !== "production" ? {
  expanded: PropTypes.bool,
  onToggle: PropTypes.func
} : {};
CollapsibleSection.defaultProps = {
  padding: 2,
  spacing: 0
};
export default CollapsibleSection;