function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import AppLoader from './AppLoader';
import AppLoaderExample from './AppLoader.example';
import appDefault from "../data/apps/app";
import appDm from "../data/apps/dm";
import appCalendar from "../data/apps/calendar";
import appHof from "../data/apps/hof";
import { EditorIcon } from "@kit-ui/icons";
import { getRandomTheme } from "..";
var theme = getRandomTheme();
export default {
  title: 'App/AppLoader',
  component: AppLoader,
  args: {
    title: "App title",
    description: "Loading text"
  },
  argTypes: {}
};

var Template = function Template(args) {
  return /*#__PURE__*/React.createElement("div", {
    style: {
      minHeight: '320px'
    }
  }, /*#__PURE__*/React.createElement(AppLoaderExample, args, JSON.stringify(args)));
};

export var Default = Template.bind({});
Default.args = _extends({}, appDefault);
export var LoadingDm = Template.bind({});
LoadingDm.args = _extends({}, appDm);
export var LoadingDmEditor = Template.bind({});
LoadingDmEditor.args = _extends({}, appDm, {
  icon: /*#__PURE__*/React.createElement(EditorIcon, {
    color: appDm.theme.palette.primary.main
  }),
  description: "Loading editor"
});
export var LoadingHof = Template.bind({});
LoadingHof.args = _extends({}, appHof);
export var LoadingHofEditor = Template.bind({});
LoadingHofEditor.args = _extends({}, appHof, {
  icon: /*#__PURE__*/React.createElement(EditorIcon, {
    color: appHof.theme.palette.primary.main
  }),
  description: "Loading editor"
});
export var LoadingCalendar = Template.bind({});
LoadingCalendar.args = _extends({}, appCalendar);