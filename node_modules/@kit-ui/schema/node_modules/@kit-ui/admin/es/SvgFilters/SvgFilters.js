function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import { v4 as uuidv4 } from 'uuid';
import { makeStyles } from '@material-ui/core/styles';
import ContrastFilter from "./ContrastFilter";
import BrightnessFilter from "./BrightnessFilter";
import VignetteFilter from "./VignetteFilter";
import SaturationFilter from "./SaturationFilter";
import ColorMatrixFilter from "./ColorMatrixFilter";
import OpacityFilter from "./OpacityFilter";
import DuotoneFilter from "./DuotoneFilter";
import BlurFilter from "./BlurFilter";
var templates = {
  "contrast": ContrastFilter,
  "brightness": BrightnessFilter,
  "vignette": VignetteFilter,
  "opacity": OpacityFilter,
  "blur": BlurFilter,
  "saturation": SaturationFilter,
  "duotone": DuotoneFilter,
  "colorMatrix": ColorMatrixFilter
};
var useStyles = makeStyles(function (theme) {
  return {
    svgFilters: {
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }
  };
});

var SvgFilters = function SvgFilters(_ref) {
  var className = _ref.className,
      width = _ref.width,
      height = _ref.height,
      _ref$imageFilters = _ref.imageFilters,
      imageFilters = _ref$imageFilters === void 0 ? {} : _ref$imageFilters,
      imageRef = _ref.imageRef,
      cropboxRef = _ref.cropboxRef,
      children = _ref.children;
  var uniqueId = uuidv4();
  var classes = useStyles();
  var styleFilter = [];

  if (!Object.keys(imageFilters).length >= 1) {
    return children;
  }

  var filters = [];
  imageFilters && Object.keys(imageFilters).map(function (name) {
    var id = name + "-" + uniqueId;
    var filter = name && imageFilters[name];

    if (templates[name]) {
      styleFilter.push("url(#" + id + ")");
      filters.push(_extends({}, filter, {
        name: name,
        imageRef: imageRef,
        cropboxRef: cropboxRef,
        width: width,
        height: height,
        id: id
      }));
    }
  });
  var filterStyle = {
    filter: styleFilter.join(' ')
  };
  var childrenWithProps = React.Children.map(children, function (child) {
    if (React.isValidElement(child)) {
      return React.cloneElement(child, {
        style: _extends({}, child.props.style, filterStyle)
      });
    }

    return child;
  });
  return /*#__PURE__*/React.createElement("div", {
    className: className || classes.svgFilters
  }, /*#__PURE__*/React.createElement("svg", null, filters.map(function (_ref2) {
    var id = _ref2.id,
        name = _ref2.name,
        filter = _objectWithoutPropertiesLoose(_ref2, ["id", "name"]);

    var FilterTemplate = name && templates[name];
    return /*#__PURE__*/React.createElement(FilterTemplate, _extends({
      id: id
    }, filter)) || "";
  })), childrenWithProps);
};

SvgFilters.defaultProps = {
  filters: {}
};
export default SvgFilters;