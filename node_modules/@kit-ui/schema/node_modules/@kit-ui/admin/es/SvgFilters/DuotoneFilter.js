import React from "react";
import Color from 'color';

var DuotoneFilter = function DuotoneFilter(_ref) {
  var id = _ref.id,
      values = _ref.values,
      _ref$colors = _ref.colors,
      colors = _ref$colors === void 0 ? ["blue", "red"] : _ref$colors;
  var color1 = colors && colors[0] && Color(colors[0]).color;
  var color2 = colors && colors[0] && Color(colors[1]).color;
  console.log(color1);
  values = [color2[0] / 256 - color1[0] / 256, 0, 0, 0, color1[0] / 256, color2[1] / 256 - color1[1] / 256, 0, 0, 0, color1[1] / 256, color2[2] / 256 - color1[2] / 256, 0, 0, 0, color1[2] / 256, 0, 0, 0, 1, 0];
  /*
  
  const getMatrix = (color1, color2) => {
      return [
        (color2[0] / 256) - (color1[0] / 256), 0, 0, 0, color1[0] / 256,
        (color2[1] / 256) - (color1[1] / 256), 0, 0, 0, color1[1] / 256,
        (color2[2] / 256) - (color1[2] / 256), 0, 0, 0, color1[2] / 256,
        0, 0, 0, 1, 0,
      ];
    }
  
   */

  return /*#__PURE__*/React.createElement("filter", {
    id: id,
    x: "-20%",
    y: "-20%",
    width: "140%",
    height: "140%",
    filterUnits: "objectBoundingBox",
    primitiveUnits: "userSpaceOnUse",
    "color-interpolation-filters": "linearRGB"
  }, /*#__PURE__*/React.createElement("feColorMatrix", {
    type: "matrix",
    values: values,
    result: "duotone"
  }));
};

DuotoneFilter.defaultProps = {
  values: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]
};
export default DuotoneFilter;