function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import "./FinderGrid.scss";

var FinderGrid = /*#__PURE__*/function (_Component) {
  _inheritsLoose(FinderGrid, _Component);

  function FinderGrid() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "getStyle", function () {
      var _this$props = _this.props,
          style = _this$props.style,
          cols = _this$props.cols,
          rows = _this$props.rows,
          gap = _this$props.gap,
          areas = _this$props.areas;
      return _extends({}, style, {
        display: "grid",
        gridGap: gap,
        gridTemplateColumns: cols,
        gridTemplateRows: rows,
        gridTemplateAreas: areas
      });
    });

    return _this;
  }

  var _proto = FinderGrid.prototype;

  _proto.render = function render() {
    var style = this.getStyle();
    return /*#__PURE__*/React.createElement("section", {
      className: "admin-finder__grid",
      style: style
    }, this.props.children);
  };

  return FinderGrid;
}(Component);

_defineProperty(FinderGrid, "defaultProps", {
  style: {},
  gap: undefined,
  cols: undefined,
  rows: undefined,
  areas: undefined
});

export default FinderGrid;