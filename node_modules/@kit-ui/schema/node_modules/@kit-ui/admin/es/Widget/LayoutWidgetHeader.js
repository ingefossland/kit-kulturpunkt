function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import { Widget, WidgetHeader, WidgetMedia, WidgetTitle, WidgetDescription } from "../";

var LayoutWidgetHeader = /*#__PURE__*/function (_Component) {
  _inheritsLoose(LayoutWidgetHeader, _Component);

  function LayoutWidgetHeader() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "getPreview", function () {
      var _this$props = _this.props,
          formData = _this$props.formData,
          imageUrl = _this$props.imageUrl,
          icon = _this$props.icon,
          image = _this$props.image,
          name = _this$props.name,
          title = _this$props.title,
          description = _this$props.description,
          widgetType = _this$props.widgetType,
          widgetSize = _this$props.widgetSize;

      if (formData && formData.icon) {
        icon = formData.icon;
      }

      if (formData && formData.image && formData.image.media && formData.image.media.imageUrl) {
        imageUrl = formData.image.media.imageUrl;
      }

      if (formData && formData.widgetType) {
        widgetType = formData.widgetType;
      }

      if (formData && formData.widgetSize) {
        widgetSize = formData.widgetSize;
      }

      return _extends({}, _this.props, {
        widgetSize: widgetSize,
        widgetType: widgetType,
        icon: icon,
        imageUrl: imageUrl,
        title: title,
        description: description
      });
    });

    return _this;
  }

  var _proto = LayoutWidgetHeader.prototype;

  _proto.render = function render() {
    var _this$getPreview = this.getPreview(),
        expanded = _this$getPreview.expanded,
        widgetType = _this$getPreview.widgetType,
        imageUrl = _this$getPreview.imageUrl,
        icon = _this$getPreview.icon,
        name = _this$getPreview.name,
        title = _this$getPreview.title,
        description = _this$getPreview.description;

    return /*#__PURE__*/React.createElement(WidgetHeader, {
      expanded: expanded
    }, /*#__PURE__*/React.createElement(WidgetMedia, {
      widgetType: widgetType,
      name: title || name,
      imageUrl: imageUrl,
      icon: icon
    }), /*#__PURE__*/React.createElement(WidgetTitle, {
      title: title || name
    }), /*#__PURE__*/React.createElement(WidgetDescription, {
      description: description
    }));
  };

  return LayoutWidgetHeader;
}(Component);

_defineProperty(LayoutWidgetHeader, "defaultProps", {
  id: false,
  expanded: false
});

export default LayoutWidgetHeader;