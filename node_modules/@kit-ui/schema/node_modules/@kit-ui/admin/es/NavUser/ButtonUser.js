function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import IconButton from '@material-ui/core/IconButton';
import { makeStyles } from '@material-ui/core/styles';
import { UserIcon } from "@kit-ui/icons";
var useStyles = makeStyles(function (theme) {
  return {
    icon: {
      width: "36px",
      height: "36px",
      margin: "-6px"
    }
  };
});

var ButtonUser = function ButtonUser(_ref) {
  var onClick = _ref.onClick,
      expanded = _ref.expanded,
      forwardedRef = _ref.forwardedRef,
      props = _objectWithoutPropertiesLoose(_ref, ["onClick", "expanded", "forwardedRef"]);

  var classes = useStyles();
  return /*#__PURE__*/React.createElement(IconButton, {
    className: classes.root,
    onClick: onClick,
    "aria-expanded": expanded,
    ref: forwardedRef
  }, /*#__PURE__*/React.createElement(UserIcon, _extends({}, props, {
    className: classes.icon
  })));
};

export default ButtonUser;