function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { getImageSchema, getVideoSchema, getAudioSchema } from "./";
export var getMediaSchema = function getMediaSchema(props) {
  var schema = props.schema;
  var mediaType = schema.mediaType,
      properties = schema.properties;
  var defaultSchema = {
    "type": "object",
    "properties": {
      "mediaId": {
        "type": "string",
        "readonly": true
      },
      "media": {
        "type": "object",
        "properties": {
          "uploadProgress": {
            "type": "number",
            "readonly": true
          },
          "mediaType": {
            "type": "string",
            "readonly": true
          },
          "uniqueId": {
            "type": "string",
            "readonly": true
          }
        }
      }
    }
  };

  if (mediaType && mediaType === "image") {
    return getImageSchema(props);
  }

  return _extends({}, defaultSchema, {
    properties: _extends({}, defaultSchema.properties, properties)
  });
};
export function getMediaField(props) {
  var schema = getMediaSchema(props);
  return _extends({}, props, {
    schema: schema,
    uiSchema: _extends({}, props.uiSchema, {
      "ui:field": "media"
    })
  });
}