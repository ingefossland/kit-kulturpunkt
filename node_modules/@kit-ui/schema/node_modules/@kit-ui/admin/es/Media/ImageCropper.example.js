import React, { useState } from 'react';
import ImageCropper from "./ImageCropper";
import ImageBase from "./ImageBase";
import EditorLayout from "../Editor/EditorLayout";
import { makeStyles } from '@material-ui/core/styles';
var useStyles = makeStyles(function (theme) {
  return {
    preview: {
      display: "flex",
      width: "100%",
      "& > *": {
        margin: theme.spacing(1)
      }
    },
    square: {
      position: "relative",
      backgroundColor: "blue",
      paddingBottom: "100%",
      overflow: "hidden"
    },
    landscape: {
      position: "relative",
      backgroundColor: "blue",
      paddingBottom: "50%",
      overflow: "hidden"
    },
    portrait: {
      position: "relative",
      backgroundColor: "blue",
      paddingBottom: "150%",
      overflow: "hidden"
    }
  };
});

var CropperDebug = function CropperDebug(_ref) {
  var formData = _ref.formData;

  if (!formData) {
    return false;
  }

  return /*#__PURE__*/React.createElement("ul", null, /*#__PURE__*/React.createElement("li", null, "top:  ", formData.top), /*#__PURE__*/React.createElement("li", null, "right:  ", formData.right), /*#__PURE__*/React.createElement("li", null, "bottom:  ", formData.bottom), /*#__PURE__*/React.createElement("li", null, "left: ", formData.left), /*#__PURE__*/React.createElement("li", null, "x: ", formData.x), /*#__PURE__*/React.createElement("li", null, "y: ", formData.y), /*#__PURE__*/React.createElement("li", null, "width: ", formData.width), /*#__PURE__*/React.createElement("li", null, "height: ", formData.height), /*#__PURE__*/React.createElement("li", null, "rotate: ", formData.rotate));
};

var ExampleCropper = function ExampleCropper(_ref2) {
  var _ref2$imageUrl = _ref2.imageUrl,
      imageUrl = _ref2$imageUrl === void 0 ? undefined : _ref2$imageUrl,
      _ref2$imageCropdata = _ref2.imageCropdata,
      imageCropdata = _ref2$imageCropdata === void 0 ? {} : _ref2$imageCropdata;
  var classes = useStyles();

  var _useState = useState(imageCropdata),
      formData = _useState[0],
      setFormData = _useState[1];

  var _onChange = function onChange(formData) {
    setFormData(formData);
  };

  var CropperPreview = function CropperPreview() {
    return /*#__PURE__*/React.createElement("div", {
      className: classes.preview
    }, /*#__PURE__*/React.createElement("div", null, "square", /*#__PURE__*/React.createElement(ImageBase, {
      className: classes.square,
      imageUrl: imageUrl,
      imageCropdata: formData
    }), "square/cover", /*#__PURE__*/React.createElement(ImageBase, {
      className: classes.square,
      imageUrl: imageUrl,
      imageCropdata: formData,
      objectFit: "cover"
    })), /*#__PURE__*/React.createElement("div", null, "landscape", /*#__PURE__*/React.createElement(ImageBase, {
      className: classes.landscape,
      imageUrl: imageUrl,
      imageCropdata: formData
    }), "landscape/cover", /*#__PURE__*/React.createElement(ImageBase, {
      className: classes.landscape,
      imageUrl: imageUrl,
      imageCropdata: formData,
      objectFit: "cover"
    })), /*#__PURE__*/React.createElement("div", null, "portrait", /*#__PURE__*/React.createElement(ImageBase, {
      className: classes.portrait,
      imageUrl: imageUrl,
      imageCropdata: formData
    }), "portrait/cover", /*#__PURE__*/React.createElement(ImageBase, {
      className: classes.portrait,
      imageUrl: imageUrl,
      imageCropdata: formData,
      objectFit: "cover"
    })));
  };

  return /*#__PURE__*/React.createElement(EditorLayout, {
    title: "ImageCropper",
    preview: {
      children: /*#__PURE__*/React.createElement(CropperPreview, null)
    }
  }, /*#__PURE__*/React.createElement(ImageCropper, {
    imageUrl: imageUrl,
    imageCropdata: formData,
    onChange: function onChange(formData) {
      return _onChange(formData);
    }
  }));
};

export default ExampleCropper;