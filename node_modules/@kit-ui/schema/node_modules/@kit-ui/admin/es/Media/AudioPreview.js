function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { useState, useEffect } from 'react';
import { withResizeDetector } from 'react-resize-detector';
import { makeStyles } from '@material-ui/core/styles';
import AudioPlayer from "./AudioPlayer";
var useStyles = makeStyles(function (theme) {
  return {
    figure: {
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      margin: 0
    }
  };
});

var AudioPreview = function AudioPreview(_ref) {
  var className = _ref.className,
      width = _ref.width,
      height = _ref.height,
      props = _objectWithoutPropertiesLoose(_ref, ["className", "width", "height"]);

  var classes = useStyles();
  return /*#__PURE__*/React.createElement("figure", {
    className: className || classes.figure
  }, /*#__PURE__*/React.createElement(AudioPlayer, props));
};

export default withResizeDetector(AudioPreview);