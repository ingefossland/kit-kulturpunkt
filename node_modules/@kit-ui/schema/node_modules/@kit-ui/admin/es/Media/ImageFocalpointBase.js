import React, { useRef, useState, useEffect } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import ImageBase from "./ImageBase";
import ImageFocalpointReticle from "./ImageFocalpointReticle";
import { getImagePointEvent } from "./utils/getImagePoint";
var useStyles = makeStyles(function (theme) {
  return {
    root: {}
  };
});

var ImageFocalpoint = function ImageFocalpoint(_ref) {
  var className = _ref.className,
      imageUrl = _ref.imageUrl,
      imageCropdata = _ref.imageCropdata,
      imageFilters = _ref.imageFilters,
      _ref$imageFocalpoint = _ref.imageFocalpoint,
      imageFocalpoint = _ref$imageFocalpoint === void 0 ? {
    x: 0,
    y: 0,
    left: 50,
    top: 50
  } : _ref$imageFocalpoint,
      onChange = _ref.onChange;

  var _useState = useState(imageFocalpoint),
      focalpoint = _useState[0],
      setFocalpoint = _useState[1];

  var handleClick = function handleClick(event) {
    imageFocalpoint = getImagePointEvent(event);
    setFocalpoint(imageFocalpoint);
    onChange && onChange(imageFocalpoint);
  };

  var classes = useStyles();

  if (!imageUrl) {
    return /*#__PURE__*/React.createElement("p", null, "No imageUrl for focalpoint");
  }

  return /*#__PURE__*/React.createElement(ImageBase, {
    imageUrl: imageUrl,
    imageCropdata: imageCropdata,
    imageFilters: imageFilters,
    onClick: handleClick
  }, /*#__PURE__*/React.createElement(ImageFocalpointReticle, focalpoint));
};

export default ImageFocalpoint;