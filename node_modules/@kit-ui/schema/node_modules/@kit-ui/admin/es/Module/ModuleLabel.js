import React from 'react';
import Color from 'color';
import PropTypes from "prop-types";
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import { getContrastColor } from "../utils";
var useStyles = makeStyles(function (theme) {
  return {
    root: {
      display: "inline-block",
      fontSize: "12px"
    },
    label: {
      fontFamily: "Akkurat, sans-serif",
      fontSize: "inherit",
      fontWeight: "bold",
      padding: ".125em .75em",
      border: "1px solid",
      backgroundColor: function backgroundColor(props) {
        return props.color || "transparent";
      },
      borderColor: function borderColor(props) {
        return props.color || theme.palette.divider;
      },
      color: function color(props) {
        return props.color && getContrastColor(props.color) || theme.palette.text.secondary;
      },
      borderRadius: "1.25em"
    }
  };
});

var ModuleLabel = function ModuleLabel(_ref) {
  var className = _ref.className,
      _ref$component = _ref.component,
      component = _ref$component === void 0 ? "h4" : _ref$component,
      label = _ref.label,
      color = _ref.color,
      children = _ref.children;
  var classes = useStyles({
    color: color
  });

  if (!label && children) {
    label = children;
  }

  if (!label) {
    return false;
  }

  return /*#__PURE__*/React.createElement("span", {
    className: className || classes.root
  }, /*#__PURE__*/React.createElement(Typography, {
    className: classes.label,
    noWrap: true,
    component: component
  }, label));
};

ModuleLabel.propTypes = process.env.NODE_ENV !== "production" ? {
  component: PropTypes.string,
  label: PropTypes.string,
  color: PropTypes.string
} : {};
ModuleLabel.defaultProps = {
  label: undefined,
  color: undefined
};
export default ModuleLabel;