function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useEffect } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { useTranslation } from 'react-i18next';
import { ModuleTitle, ModuleLabel, ModuleDescription } from "../";
import MediaPreview from "../Media/MediaPreview";
import MediaMetadata from "../Media/MediaMetadata";
import Typography from "@material-ui/core/Typography";
var useStyles = makeStyles(function (theme) {
  return {
    preview: {
      backgroundColor: theme.palette.background.default,
      color: theme.palette.text.primary,
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      display: "flex",
      flexDirection: "column",
      width: "100%"
    },
    media: {
      flexBasis: "50%",
      position: "relative",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      margin: theme.spacing(1)
    },
    content: {
      display: "flex",
      flexDirection: "column",
      alignItems: "center"
    },
    title: {
      fontSize: "24px"
    },
    metadata: {
      width: "100%",
      fontFamily: "Akkurat, sans-serif",
      fontSize: "16px",
      lineHeight: "24px",
      "& b": {
        fontWeight: "bold"
      },
      "& > p": {
        padding: theme.spacing(1, 0)
      },
      "& > * + *": {
        borderTop: "1px solid",
        borderColor: theme.palette.divider
      }
    }
  };
});

var PreviewMedia = function PreviewMedia(props) {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t,
      i18n = _useTranslation.i18n;

  var classes = useStyles();
  var title = props.title,
      filename = props.filename,
      mimeType = props.mimeType;
  return /*#__PURE__*/React.createElement("article", {
    className: classes.preview
  }, /*#__PURE__*/React.createElement(MediaPreview, _extends({}, props, {
    className: classes.media,
    maxWidth: "100%",
    minHeight: 192
  })), /*#__PURE__*/React.createElement("div", {
    className: classes.content
  }, /*#__PURE__*/React.createElement(Typography, {
    className: classes.title
  }, title || filename), /*#__PURE__*/React.createElement(ModuleLabel, null, mimeType), /*#__PURE__*/React.createElement(MediaMetadata, props)));
};

export default PreviewMedia;