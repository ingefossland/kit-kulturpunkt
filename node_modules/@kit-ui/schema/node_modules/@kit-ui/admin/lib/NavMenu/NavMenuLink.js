"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _ButtonBase = _interopRequireDefault(require("@material-ui/core/ButtonBase"));

var _Icon = _interopRequireDefault(require("@material-ui/core/Icon"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  var _$label;

  return {
    root: {
      boxSizing: "border-box",
      display: "flex",
      width: "100%",
      paddingRight: theme.spacing(3),
      alignItems: "center",
      justifyContent: "start",
      fontFamily: "Akkurat, sans-serif",
      fontSize: "14px",
      lineHeight: "24px",
      color: theme.palette.text.secondary,
      "&[aria-selected=true]": {
        "& $label": (_$label = {
          color: theme.palette.text.primary
        }, _$label["color"] = theme.palette.type === "dark" && theme.palette.primary.light || theme.palette.primary.dark, _$label)
      }
    },
    icon: {
      "&[aria-selected=true]": {
        color: theme.palette.text.primary
      }
    },
    label: {
      display: "block",
      width: "100%",
      flexBasis: "100%",
      fontFamily: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      paddingLeft: "12px",
      paddingRight: "6px"
    },
    count: {
      position: "absolute",
      right: 0,
      fontFamily: "Akkurat, sans-serif",
      fontSize: "12px",
      fontStyle: "normal",
      lineHeight: "24px",
      textAlign: "right",
      color: theme.palette.text.secondary
    }
  };
});

var MenuLink = function MenuLink(_ref) {
  var className = _ref.className,
      selected = _ref.selected,
      icon = _ref.icon,
      label = _ref.label,
      title = _ref.title,
      count = _ref.count,
      onClick = _ref.onClick,
      children = _ref.children;
  var classes = useStyles();

  if (!label && title) {
    label = title;
  }

  var color;

  if (selected) {
    color = "primary";
  }

  return /*#__PURE__*/_react.default.createElement(_ButtonBase.default, {
    color: color,
    className: className || classes.root,
    "aria-selected": selected,
    onClick: onClick
  }, icon && /*#__PURE__*/_react.default.createElement(_Icon.default, {
    className: classes.icon,
    "aria-selected": selected
  }, icon), label && /*#__PURE__*/_react.default.createElement(_Typography.default, {
    component: "b",
    align: "left",
    noWrap: true,
    className: classes.label
  }, label), count && /*#__PURE__*/_react.default.createElement(_Typography.default, {
    component: "i",
    align: "right",
    nowrap: "true",
    className: classes.count
  }, count), children);
};

var _default = MenuLink;
exports.default = _default;
module.exports = exports.default;