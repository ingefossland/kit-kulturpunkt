"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/core/styles");

var _NavTabs = _interopRequireDefault(require("../NavTabs/NavTabs"));

var _ModuleTitle = _interopRequireDefault(require("./ModuleTitle"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//import NavSettings from "../NavSettings/NavSettings"
//import NavToolbar from "../NavToolbar/NavToolbar"
//import NavSettings from "../NavSettings/NavSettings"
//import NavToolbar from "../NavToolbar/NavToolbar"
var NavSettings = function NavSettings() {
  return /*#__PURE__*/_react.default.createElement("p", null, "settings");
};

var NavToolbar = function NavToolbar() {
  return /*#__PURE__*/_react.default.createElement("p", null, "toolbar");
};

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    header: {
      display: "flex",
      zIndex: 2,
      alignItems: "center",
      justifyContent: "flex-start",
      height: theme.spacing(6),
      color: "inherit",
      "& + *": {
        zIndex: 1,
        marginTop: theme.spacing(6)
      }
    },
    title: {
      flexGrow: 1,
      marginLeft: theme.spacing(1),
      marginRight: theme.spacing(1),
      color: "inherit",
      fontFamily: "Akkurat, sans-serif",
      fontSize: "16px",
      lineHeight: "24px",
      fontWeight: "bold"
    },
    tabs: {
      flexGrow: 1,
      marginLeft: theme.spacing(1),
      color: "inherit"
    },
    settings: {
      display: "flex"
    },
    toolbar: {
      display: "flex",
      color: "inherit"
    }
  };
});
/** Used in ExpandedModule, will show a title, menu or list children */

var ModuleHeader = function ModuleHeader(_ref) {
  var className = _ref.className,
      status = _ref.status,
      title = _ref.title,
      menu = _ref.menu,
      settings = _ref.settings,
      toolbar = _ref.toolbar,
      children = _ref.children;
  var classes = useStyles();

  if (children) {
    return /*#__PURE__*/_react.default.createElement("header", {
      className: classes.header
    }, children);
  }

  return /*#__PURE__*/_react.default.createElement("header", {
    className: className || classes.header
  }, menu && /*#__PURE__*/_react.default.createElement(_NavTabs.default, {
    className: classes.tabs,
    tabs: menu
  }), !menu && /*#__PURE__*/_react.default.createElement(_ModuleTitle.default, {
    className: classes.title,
    status: status,
    title: title
  }), settings && /*#__PURE__*/_react.default.createElement(NavSettings, {
    className: classes.settings,
    settings: settings
  }), toolbar && /*#__PURE__*/_react.default.createElement(NavToolbar, {
    className: classes.toolbar,
    toolbar: toolbar
  }));
};

var _default = ModuleHeader;
exports.default = _default;
module.exports = exports.default;