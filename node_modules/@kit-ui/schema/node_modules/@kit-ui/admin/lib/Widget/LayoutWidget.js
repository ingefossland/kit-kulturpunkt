"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ = require("../");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var LayoutWidget = /*#__PURE__*/function (_Component) {
  _inheritsLoose(LayoutWidget, _Component);

  function LayoutWidget() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "onAdd", function () {
      if (_this.props.onAdd) {
        _this.props.onAdd();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onEdit", function () {
      if (_this.props.onEdit) {
        _this.props.onEdit();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onSave", function () {
      if (_this.props.onSave) {
        _this.props.onSave();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "renderSettings", function () {
      var _this$props = _this.props,
          editable = _this$props.editable,
          expanded = _this$props.expanded,
          settings = _this$props.settings;

      if (editable || expanded && settings) {
        return /*#__PURE__*/_react.default.createElement(_.NavSettings, {
          settings: settings
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "renderAdd", function () {
      var addable = _this.props.addable;

      if (addable) {
        return /*#__PURE__*/_react.default.createElement(_.Button, {
          type: "add",
          icon: "add_circle"
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "getPreview", function () {
      var _this$props2 = _this.props,
          formData = _this$props2.formData,
          imageUrl = _this$props2.imageUrl,
          icon = _this$props2.icon,
          media = _this$props2.media,
          name = _this$props2.name,
          title = _this$props2.title,
          description = _this$props2.description,
          widgetType = _this$props2.widgetType,
          widgetSize = _this$props2.widgetSize;

      if (formData && formData.image && formData.image.media && formData.image.media.imageUrl) {
        imageUrl = formData.image.media.imageUrl;
      }

      return _extends({}, _this.props, {
        widgetSize: formData.widgetSize || widgetSize,
        widgetType: formData.widgetType || widgetType,
        imageUrl: imageUrl,
        title: formData.title || title,
        description: formData.description || description
      });
    });

    return _this;
  }

  var _proto = LayoutWidget.prototype;

  _proto.render = function render() {
    var _this$props3 = this.props,
        id = _this$props3.id,
        editable = _this$props3.editable,
        editing = _this$props3.editing,
        expanded = _this$props3.expanded,
        addable = _this$props3.addable,
        settings = _this$props3.settings,
        menu = _this$props3.menu,
        style = _this$props3.style;

    var _this$getPreview = this.getPreview(),
        imageUrl = _this$getPreview.imageUrl,
        title = _this$getPreview.title,
        description = _this$getPreview.description,
        widgetType = _this$getPreview.widgetType,
        widgetSize = _this$getPreview.widgetSize;

    if (editable && editing) {
      return /*#__PURE__*/_react.default.createElement(_.Widget, {
        widgetType: widgetType,
        widgetSize: widgetSize,
        expanded: true,
        style: style
      }, /*#__PURE__*/_react.default.createElement(_.NavAction, {
        buttonType: "secondary",
        button: {
          title: "Save",
          onClick: this.onSave
        }
      }), this.props.children);
    }

    if (expanded) {
      return /*#__PURE__*/_react.default.createElement(_.Widget, {
        widgetType: widgetType,
        widgetSize: widgetSize,
        expanded: true,
        style: style
      }, /*#__PURE__*/_react.default.createElement(_.NavSettings, {
        settings: settings
      }), this.props.children);
    }

    if (addable) {
      return /*#__PURE__*/_react.default.createElement(_.Widget, {
        widgetType: widgetType,
        widgetSize: widgetSize,
        expanded: false,
        onClick: this.onAdd,
        style: style
      }, /*#__PURE__*/_react.default.createElement(_.LayoutWidgetHeader, this.props), this.renderAdd());
    }

    return /*#__PURE__*/_react.default.createElement(_.Widget, {
      widgetType: widgetType,
      widgetSize: widgetSize,
      expanded: false,
      style: style
    }, /*#__PURE__*/_react.default.createElement(_.LayoutWidgetHeader, this.props));
  };

  return LayoutWidget;
}(_react.Component);

_defineProperty(LayoutWidget, "defaultProps", {
  id: false,
  collapsible: true,
  expanded: false,
  editable: false,
  editing: false,
  widgetType: "",
  widgetSize: "",
  formData: {}
});

var _default = LayoutWidget;
exports.default = _default;
module.exports = exports.default;