"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactDraggable = _interopRequireWildcard(require("react-draggable"));

var _styles = require("@material-ui/core/styles");

var _getImagePoint = require("./utils/getImagePoint");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// import "./ImageAnnotationsMarker.scss"
var useStyles = (0, _styles.makeStyles)(function (theme) {
  var _marker;

  return {
    root: {
      position: "absolute",
      zIndex: function zIndex(props) {
        return props.zIndex;
      } //        top: props => { return props.top + "%" || "50%"},
      //        left: props => { return props.left + "%" || "50%"},

    },
    draghandle: {
      position: "absolute",
      display: "block",
      width: function width(props) {
        return theme.spacing(props.size);
      },
      height: function height(props) {
        return theme.spacing(props.size);
      },
      transform: "translate(-50%, -50%)",
      borderRadius: "50%",
      "&:hover": {
        cursor: function cursor(props) {
          return props.cursor || "move";
        }
      }
    },
    marker: (_marker = {
      width: function width(props) {
        return theme.spacing(props.size);
      },
      height: function height(props) {
        return theme.spacing(props.size);
      },
      backgroundColor: theme.palette.primary.main,
      color: theme.palette.primary.contrastText,
      top: "0",
      left: "0",
      position: "absolute",
      display: "block",
      transform: "translate(-50%, -50%)",
      borderRadius: "50%"
    }, _marker["display"] = "flex", _marker.alignItems = "center", _marker.justifyContent = "center", _marker.pointerEvents = "none", _marker),
    label: {
      fontFamily: "Akkurat, sans-serif",
      fontSize: "14px"
    }
  };
});

var ImageAnnotationsMarker = function ImageAnnotationsMarker(_ref) {
  var index = _ref.index,
      position = _ref.position,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 4 : _ref$size,
      onStart = _ref.onStart,
      onDrag = _ref.onDrag,
      onStop = _ref.onStop;

  var _useState = (0, _react.useState)("grab"),
      cursor = _useState[0],
      setCursor = _useState[1];

  var handleStart = function handleStart(event, data) {
    setCursor('grabbing');
    onStart && onStart(event, data);
  };

  var handleDrag = function handleDrag(event, data) {
    onDrag && onDrag(event, data);
  };

  var handleStop = function handleStop(event, data) {
    setCursor('grab');
    onStop && onStop(event, data);
  };

  var classes = useStyles({
    size: size,
    zIndex: index,
    cursor: cursor
  });

  if (!position) {
    return false;
  }

  return /*#__PURE__*/_react.default.createElement(_reactDraggable.default, {
    bounds: "parent",
    handle: ".draghandle",
    position: position,
    onStart: handleStart,
    onDrag: handleDrag,
    onStop: handleStop
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.root
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.draghandle + " draghandle"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.marker
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.label
  }, index + 1))));
};

var _default = ImageAnnotationsMarker;
exports.default = _default;
module.exports = exports.default;