"use strict";

exports.__esModule = true;
exports.default = exports.getImageFiltersStyle = void 0;

var _duotone = _interopRequireDefault(require("../filters/duotone.svg"));

var _vignette = _interopRequireDefault(require("../filters/vignette.svg"));

var _grayscale = _interopRequireDefault(require("../filters/grayscale.svg"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getImageFiltersStyle = function getImageFiltersStyle(_ref) {
  var imageFilters = _ref.imageFilters;

  if (!imageFilters) {
    return;
  }

  var brightness = imageFilters.brightness,
      contrast = imageFilters.contrast,
      saturation = imageFilters.saturation,
      opacity = imageFilters.opacity,
      blur = imageFilters.blur,
      duotone = imageFilters.duotone,
      vignette = imageFilters.vignette,
      grayscale = imageFilters.grayscale;
  var filters = [];

  if (duotone) {
    filters.push('url(' + _duotone.default + '#duotone)');
  }

  if (grayscale) {
    filters.push('url(' + _duotone.default + '#grayscale)');
  }

  if (vignette) {
    filters.push('url(' + _vignette.default + '#vignette)');
  }

  if (brightness) {
    brightness = brightness + 100;
    filters.push('brightness(' + brightness + '%)');
  }

  if (contrast) {
    contrast = contrast + 100;
    filters.push('contrast(' + contrast + '%)');
  }

  if (saturation) {
    saturation = saturation + 100;
    filters.push('saturate(' + saturation + '%)');
  }

  if (opacity) {
    filters.push('opacity(' + opacity + '%)');
  }

  if (blur) {
    filters.push('blur(' + blur + 'px)');
  }

  if (!filters) {
    return undefined;
  }

  return {
    filter: filters.join(' ')
  };
};

exports.getImageFiltersStyle = getImageFiltersStyle;
var _default = getImageFiltersStyle;
exports.default = _default;