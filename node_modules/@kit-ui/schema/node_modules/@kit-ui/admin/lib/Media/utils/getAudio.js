"use strict";

exports.__esModule = true;
exports.getAudioSchema = getAudioSchema;
exports.getAudioField = getAudioField;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function getAudioSchema(props) {
  var schema = props.schema;
  var defaultSchema = {
    "type": "object",
    "properties": {
      "uploadProgress": {
        "type": "number",
        "readonly": true,
        "default": 100
      },
      "mediaId": {
        "type": "string",
        "readonly": true
      },
      "media": {
        "type": "object",
        "properties": {
          "mediaType": {
            "type": "string",
            "default": "audio",
            "readonly": true
          },
          "uniqueId": {
            "type": "string",
            "readonly": true
          }
        }
      }
    }
  };
  return _extends({}, defaultSchema, {
    properties: _extends({}, defaultSchema.properties, schema.properties)
  });
  return defaultSchema;
}

function getAudioField(props) {
  return _extends({}, props, {
    schema: getAudioSchema(props),
    uiSchema: _extends({}, props.uiSchema, {
      "ui:field": "media"
    })
  });
}