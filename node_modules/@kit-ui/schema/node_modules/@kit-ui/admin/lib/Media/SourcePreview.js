"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _core = require("@kit-ui/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      width: "100%",
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }
  };
});

var SketchfabPreview = function SketchfabPreview(_ref) {
  var sourceId = _ref.sourceId;
  var embedUrl = "https://sketchfab.com/models/" + sourceId + "/embed";
  return /*#__PURE__*/_react.default.createElement(_core.Iframe, {
    url: embedUrl
  });
};

var YouTubePreview = function YouTubePreview(_ref2) {
  var sourceId = _ref2.sourceId;
  var embedUrl = "https://www.youtube.com/embed/" + sourceId; // content.playerUrl 

  return /*#__PURE__*/_react.default.createElement(_core.Iframe, {
    url: embedUrl
  });
};

var VimeoPreview = function VimeoPreview(_ref3) {
  var sourceId = _ref3.sourceId;
  var embedUrl = "https://player.vimeo.com/video/" + sourceId;
  return /*#__PURE__*/_react.default.createElement(_core.Iframe, {
    url: embedUrl
  });
};

var templates = {
  "vimeo": VimeoPreview,
  "youtube": YouTubePreview,
  "sketchfab": SketchfabPreview
};
/** Preview template for media sources (vimeo, youtube, sketchfab) */

var SourcePreview = function SourcePreview(_ref4) {
  var className = _ref4.className,
      source = _ref4.source,
      sourceId = _ref4.sourceId,
      props = _objectWithoutPropertiesLoose(_ref4, ["className", "source", "sourceId"]);

  var classes = useStyles();
  var PreviewTemplate = source && templates[source];

  if (!PreviewTemplate) {
    return /*#__PURE__*/_react.default.createElement("figure", {
      className: className || classes.root
    }, /*#__PURE__*/_react.default.createElement("p", null, "No template for ", source));
  }

  return /*#__PURE__*/_react.default.createElement("figure", {
    className: className || classes.root
  }, /*#__PURE__*/_react.default.createElement(PreviewTemplate, {
    sourceId: sourceId
  }));
};

SourcePreview.defaultProps = {
  source: undefined,
  sourceId: undefined
};
SourcePreview.propTypes = process.env.NODE_ENV !== "production" ? {
  className: _propTypes.default.string,
  source: _propTypes.default.string,
  sourceId: _propTypes.default.string
} : {};
var _default = SourcePreview;
exports.default = _default;
module.exports = exports.default;