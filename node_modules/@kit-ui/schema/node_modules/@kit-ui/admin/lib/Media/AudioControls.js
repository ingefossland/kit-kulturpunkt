"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _MediaPlayPauseButton = _interopRequireDefault(require("./MediaPlayPauseButton"));

var _MediaVolumeControls = _interopRequireDefault(require("./MediaVolumeControls"));

var _MediaTimeControls = _interopRequireDefault(require("./MediaTimeControls"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      width: "100%",
      zindex: 2,
      display: "flex",
      flexDirection: "column",
      justifyContent: "space-between"
    },
    header: {
      display: "flex",
      width: "100%",
      alignItems: "center"
    },
    footer: {
      margin: theme.spacing(0, 1)
    },
    playPauseButton: {
      width: theme.spacing(6),
      height: theme.spacing(6),
      backgroundColor: theme.palette.primary.main,
      color: theme.palette.primary.contrastText,
      margin: theme.spacing(1),
      "&:hover": {
        backgroundColor: theme.palette.primary.dark
      }
    },
    info: {
      flexGrow: 1,
      display: "flex",
      flexDirection: "column",
      margin: theme.spacing(0, 1)
    },
    title: {
      fontFamily: "Akkurat, sans-serif",
      fontWeight: "bold",
      color: theme.palette.text.primary
    },
    description: {
      fontFamily: "Akkurat, sans-serif",
      color: theme.palette.text.secondary
    }
  };
});

var AudioControls = function AudioControls(_ref) {
  var className = _ref.className,
      title = _ref.title,
      untitled = _ref.untitled,
      description = _ref.description,
      _ref$paused = _ref.paused,
      paused = _ref$paused === void 0 ? false : _ref$paused,
      buffered = _ref.buffered,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 0 : _ref$duration,
      _ref$currentTime = _ref.currentTime,
      currentTime = _ref$currentTime === void 0 ? 0 : _ref$currentTime,
      onPlayPause = _ref.onPlayPause,
      onSeek = _ref.onSeek,
      muted = _ref.muted,
      volume = _ref.volume,
      onMute = _ref.onMute,
      onVolume = _ref.onVolume;
  var classes = useStyles();
  return /*#__PURE__*/_react.default.createElement("nav", {
    className: className || classes.root
  }, /*#__PURE__*/_react.default.createElement("header", {
    className: classes.header
  }, /*#__PURE__*/_react.default.createElement(_MediaPlayPauseButton.default, {
    className: classes.playPauseButton,
    paused: paused,
    onClick: onPlayPause
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.info
  }, /*#__PURE__*/_react.default.createElement(_Typography.default, {
    component: "h2",
    className: classes.title
  }, title || untitled), description && /*#__PURE__*/_react.default.createElement(_Typography.default, {
    component: "h3",
    className: classes.description
  }, description))), /*#__PURE__*/_react.default.createElement("footer", {
    className: classes.footer
  }, /*#__PURE__*/_react.default.createElement(_MediaTimeControls.default, {
    duration: duration,
    currentTime: currentTime,
    onChange: onSeek
  })));
};

AudioControls.propTypes = process.env.NODE_ENV !== "production" ? {
  className: _propTypes.default.string,
  untitled: _propTypes.default.string,
  title: _propTypes.default.string,
  description: _propTypes.default.string,

  /** Paused */
  paused: _propTypes.default.bool,

  /** Duration in seconds */
  duration: _propTypes.default.number,

  /** Current time in seconds */
  currentTime: _propTypes.default.number,

  /** Play/Pause */
  onPlayPause: _propTypes.default.func,

  /** Seek */
  onSeek: _propTypes.default.func
} : {};
var _default = AudioControls;
exports.default = _default;
module.exports = exports.default;