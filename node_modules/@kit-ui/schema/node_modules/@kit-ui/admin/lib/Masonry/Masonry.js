"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _reactResizeDetector = require("react-resize-detector");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    masonry: {
      width: "100%",
      overflow: "hidden"
    },
    row: {
      display: "flex",
      width: "auto",
      margin: function margin(props) {
        return theme.spacing(props.spacing / 2 * -1);
      },
      "& > *": {
        flexBasis: 0,
        flexGrow: 1
      }
    },
    col: {
      display: "flex",
      flexDirection: "column"
    },
    item: {
      backgroundColor: "red",
      margin: function margin(props) {
        return theme.spacing(props.spacing / 2);
      },
      "& > *": {
        display: "block",
        width: "100%"
      }
    }
  };
});

var Masonry = function Masonry(_ref) {
  var width = _ref.width,
      _ref$columns = _ref.columns,
      columns = _ref$columns === void 0 ? 3 : _ref$columns,
      _ref$spacing = _ref.spacing,
      spacing = _ref$spacing === void 0 ? 1 : _ref$spacing,
      _ref$padding = _ref.padding,
      padding = _ref$padding === void 0 ? 0 : _ref$padding,
      children = _ref.children,
      _ref$debug = _ref.debug,
      debug = _ref$debug === void 0 ? false : _ref$debug;
  var classes = useStyles({
    padding: padding,
    spacing: spacing
  });
  var items = [].concat(children || []);

  var getItemsByColumn = function getItemsByColumn() {
    var itemsByColumn = {};
    items.map(function (item, index) {
      var c = index % columns;

      if (!itemsByColumn[c]) {
        itemsByColumn[c] = [];
      }

      itemsByColumn[c].push(item);
    });
    return itemsByColumn;
  };

  var itemsByColumn = getItemsByColumn();
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.masonry
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.row
  }, itemsByColumn && Object.values(itemsByColumn).map(function (items) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: classes.col
    }, items.map(function (item) {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: classes.item
      }, item);
    }));
  })));
};

var _default = (0, _reactResizeDetector.withResizeDetector)(Masonry);

exports.default = _default;
module.exports = exports.default;