"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var _ArrowBack = _interopRequireDefault(require("@material-ui/icons/ArrowBack"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    subview: {
      backgroundColor: theme.palette.background.default,
      color: "black"
    },
    section: {
      height: theme.spacing(8),
      display: "flex",
      alignItems: "center",
      justifyContent: "flex-start",
      paddingLeft: theme.spacing(1),
      paddingRight: theme.spacing(1)
    },
    button: {
      width: theme.spacing(6),
      height: theme.spacing(6),
      color: "inherit",
      "& + $content": {
        paddingRight: theme.spacing(8)
      }
    },
    content: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center"
    },
    title: {
      fontFamily: "Akkurat, sans-serif",
      fontSize: "18px",
      fontWeight: "bold",
      marginLeft: theme.spacing(1)
    },
    description: {
      fontFamily: "Akkurat, sans-serif",
      fontSize: "18px",
      fontWeight: "normal",
      marginLeft: "0.25em"
    }
  };
});

var AppSubview = function AppSubview(_ref) {
  var className = _ref.className,
      expanded = _ref.expanded,
      title = _ref.title,
      description = _ref.description,
      onToggle = _ref.onToggle;
  var classes = useStyles();
  return /*#__PURE__*/_react.default.createElement("div", {
    className: className || classes.subview,
    "aria-expanded": expanded
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.section
  }, /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    className: classes.button,
    onClick: onToggle
  }, /*#__PURE__*/_react.default.createElement(_ArrowBack.default, null)), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.content
  }, /*#__PURE__*/_react.default.createElement(_Typography.default, {
    component: "h1",
    className: classes.title
  }, title && description && title + ":" || title), /*#__PURE__*/_react.default.createElement(_Typography.default, {
    component: "h2",
    className: classes.description
  }, description))));
};

AppSubview.propTypes = process.env.NODE_ENV !== "production" ? {
  className: _propTypes.default.string,
  expanded: _propTypes.default.bool,
  title: _propTypes.default.string,
  description: _propTypes.default.string,
  onBack: _propTypes.default.func
} : {};
var _default = AppSubview;
exports.default = _default;
module.exports = exports.default;