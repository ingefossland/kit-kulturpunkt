"use strict";

exports.__esModule = true;
exports.default = exports.AppHeaderExample = void 0;

var _react = _interopRequireWildcard(require("react"));

var _AppHeader = _interopRequireDefault(require("./AppHeader"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var AppHeaderExample = function AppHeaderExample(props) {
  // search
  var _useState = (0, _react.useState)(props.search),
      search = _useState[0],
      setSearch = _useState[1];

  var _useState2 = (0, _react.useState)(null),
      searchQ = _useState2[0],
      setSearchQ = _useState2[1];

  var searchChange = function searchChange(q) {
    setSearchQ(q);
  };

  var resetSearch = function resetSearch() {
    setSearchQ(null);

    if (!searchQ) {
      toggleSearch();
    }
  };

  var toggleSearch = function toggleSearch() {
    setSearch(_extends({}, search, {
      expanded: !search.expanded
    }));
  };

  var searchState = search && _extends({}, search, {
    onChange: searchChange,
    onToggle: toggleSearch,
    onReset: resetSearch,
    q: searchQ
  }); // subview


  var _useState3 = (0, _react.useState)(props.subview),
      subview = _useState3[0],
      setSubview = _useState3[1];

  var toggleSubview = function toggleSubview() {
    setSubview(_extends({}, subview, {
      expanded: !subview.expanded
    }));
  };

  var subviewState = subview && _extends({}, subview, {
    onToggle: toggleSubview
  });

  return /*#__PURE__*/_react.default.createElement(_AppHeader.default, _extends({}, props, {
    search: searchState,
    subview: subviewState
  }));
};

exports.AppHeaderExample = AppHeaderExample;
var _default = AppHeaderExample;
exports.default = _default;