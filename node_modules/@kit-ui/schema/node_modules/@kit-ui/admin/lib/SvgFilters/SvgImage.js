"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _uuid = require("uuid");

var _reactResizeDetector = require("react-resize-detector");

var _styles = require("@material-ui/core/styles");

var _ContrastFilter = _interopRequireDefault(require("./ContrastFilter"));

var _BrightnessFilter = _interopRequireDefault(require("./BrightnessFilter"));

var _VignetteFilter = _interopRequireDefault(require("./VignetteFilter"));

var _ColorMatrixFilter = _interopRequireDefault(require("./ColorMatrixFilter"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var templates = {
  "contrast": _ContrastFilter.default,
  "brightness": _BrightnessFilter.default,
  "vignette": _VignetteFilter.default,
  "colorMatrix": _ColorMatrixFilter.default
};
var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    svgImage: {
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }
  };
});

var SvgImage = function SvgImage(_ref) {
  var className = _ref.className,
      width = _ref.width,
      height = _ref.height,
      imageUrl = _ref.imageUrl,
      _ref$imageCropdata = _ref.imageCropdata,
      imageCropdata = _ref$imageCropdata === void 0 ? {} : _ref$imageCropdata,
      _ref$imageFilters = _ref.imageFilters,
      imageFilters = _ref$imageFilters === void 0 ? {} : _ref$imageFilters,
      children = _ref.children;
  var uniqueId = (0, _uuid.v4)();
  var classes = useStyles();
  var filterUrls = [];

  if (!Object.keys(imageFilters).length >= 1) {//        return children
  }

  var filters = imageFilters && Object.keys(imageFilters).map(function (name) {
    var id = name + "-" + uniqueId;
    var filter = name && imageFilters && imageFilters[name];
    filterUrls.push("url(#" + id + ")");
    return _extends({}, filter, {
      name: name,
      width: width,
      height: height,
      id: id
    });
  });
  var filterStyle = {
    filter: filterUrls.join(' ')
  };

  var childrenWithProps = _react.default.Children.map(children, function (child) {
    if (_react.default.isValidElement(child)) {
      return _react.default.cloneElement(child, {
        style: _extends({}, child.props.style, filterStyle)
      });
    }

    return child;
  });

  var preserveAspectRatio = "slice" || "none";
  var cropX = imageCropdata && imageCropdata.x * -1 + "%" || 0;
  var cropY = imageCropdata && imageCropdata.y * -1 + "%" || 0;
  var cropWidth = imageCropdata && imageCropdata.width * 100 / 100 + "%" || "100%";
  var cropHeight = imageCropdata && imageCropdata.height * 100 / 100 + "%" || "100%";
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("svg", {
    className: className || classes.svgImage,
    width: "100%",
    height: "100%",
    preserveAspectRatio: preserveAspectRatio
  }, filters.length && filters.map(function (_ref2) {
    var id = _ref2.id,
        name = _ref2.name,
        filter = _objectWithoutPropertiesLoose(_ref2, ["id", "name"]);

    var FilterTemplate = name && templates[name];
    return /*#__PURE__*/_react.default.createElement(FilterTemplate, _extends({
      id: id
    }, filter)) || "";
  }), /*#__PURE__*/_react.default.createElement("image", {
    href: imageUrl,
    filter: filterUrls.join(' '),
    x: cropX,
    y: cropY,
    width: "100%",
    height: "100%"
  })));
};

SvgImage.defaultProps = {
  imageUrl: undefined,
  imageCropdata: {},
  imageFilters: {}
};

var _default = (0, _reactResizeDetector.withResizeDetector)(SvgImage);

exports.default = _default;
module.exports = exports.default;