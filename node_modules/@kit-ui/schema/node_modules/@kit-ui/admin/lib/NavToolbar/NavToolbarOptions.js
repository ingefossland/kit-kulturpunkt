"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _core = require("@kit-ui/core");

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var _Icon = _interopRequireDefault(require("@material-ui/core/Icon"));

var _List = _interopRequireDefault(require("@material-ui/core/List"));

var _ListItem = _interopRequireDefault(require("@material-ui/core/ListItem"));

var _ListItemIcon = _interopRequireDefault(require("@material-ui/core/ListItemIcon"));

var _ListItemText = _interopRequireDefault(require("@material-ui/core/ListItemText"));

var _Button = _interopRequireDefault(require("@material-ui/core/Button"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var NavToolbarOptions = function NavToolbarOptions(_ref) {
  var _ref$options = _ref.options,
      options = _ref$options === void 0 ? [] : _ref$options,
      button = _objectWithoutPropertiesLoose(_ref, ["options"]);

  var _useState = (0, _react.useState)(false),
      expanded = _useState[0],
      setExpanded = _useState[1];

  var anchorRef = (0, _react.useRef)(null);

  var _onToggle = function _onToggle(event) {
    setExpanded(function (prevExpanded) {
      return !prevExpanded;
    });
  };

  var _onCollapse = function _onCollapse(event) {
    setExpanded(false);
  };

  var ListOption = function ListOption(_ref2) {
    var _ref2$type = _ref2.type,
        type = _ref2$type === void 0 ? "listitem" : _ref2$type,
        icon = _ref2.icon,
        title = _ref2.title,
        onClick = _ref2.onClick,
        props = _objectWithoutPropertiesLoose(_ref2, ["type", "icon", "title", "onClick"]);

    if (type === "button") {
      return /*#__PURE__*/_react.default.createElement(_ListItem.default, null, /*#__PURE__*/_react.default.createElement(_Button.default, _extends({}, props, {
        fullWidth: true,
        onClick: onClick
      }), title));
    }

    return /*#__PURE__*/_react.default.createElement(_ListItem.default, {
      button: true,
      onClick: onClick
    }, icon && /*#__PURE__*/_react.default.createElement(_ListItemIcon.default, null, /*#__PURE__*/_react.default.createElement(_Icon.default, null, icon)), /*#__PURE__*/_react.default.createElement(_ListItemText.default, {
      primary: title
    }));
  };

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    onClick: _onToggle,
    ref: anchorRef
  }, /*#__PURE__*/_react.default.createElement(_Icon.default, null, button && button.icon)), /*#__PURE__*/_react.default.createElement(_core.Dropdown, {
    expanded: expanded,
    anchorEl: anchorRef.current,
    onClickAway: _onCollapse
  }, /*#__PURE__*/_react.default.createElement(_List.default, null, options && options.map(function (option, index) {
    return /*#__PURE__*/_react.default.createElement(ListOption, _extends({}, option, {
      key: index
    }));
  }))));
};

var _default = NavToolbarOptions;
exports.default = _default;
module.exports = exports.default;