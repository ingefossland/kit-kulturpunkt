"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ = require("../");

require("./FinderTabs.scss");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var FinderTabs = /*#__PURE__*/function (_Component) {
  _inheritsLoose(FinderTabs, _Component);

  function FinderTabs() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "state", {
      index: 0,
      tabs: [],
      tabpanels: []
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidUpdate", function (prevProps) {
      if (prevProps.tabIndex !== _this.props.tabIndex) {
        _this.getTabs();
      }

      if (prevProps.tabId !== _this.props.tabId) {
        _this.getTabs();
      }

      if (prevProps.children !== _this.props.children) {
        _this.getTabs();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "getTabpanel", function (child, index) {
      var _child$props = child.props,
          id = _child$props.id,
          url = _child$props.url,
          title = _child$props.title,
          children = _child$props.children;
      var tabpanelId = id || "admin-tabs-" + index;
      var tabId = tabpanelId + "-tab";
      return {
        index: index,
        id: tabpanelId,
        labelledby: tabId,
        children: children
      };
    });

    _defineProperty(_assertThisInitialized(_this), "getTab", function (child, index) {
      var _child$props2 = child.props,
          id = _child$props2.id,
          url = _child$props2.url,
          title = _child$props2.title,
          children = _child$props2.children;
      var tabpanelId = id || "admin-tabs-" + index;
      var tabId = tabpanelId + "-tab";
      return {
        index: index,
        url: url,
        id: tabId,
        controls: tabpanelId,
        title: title
      };
    });

    _defineProperty(_assertThisInitialized(_this), "getTabs", function () {
      var _this$props = _this.props,
          tabIndex = _this$props.tabIndex,
          tabId = _this$props.tabId;

      if (!_this.props.children) {
        return false;
      }

      var tabs = _react.default.Children.toArray(_this.props.children).map(_this.getTab);

      var tabpanels = _react.default.Children.toArray(_this.props.children).map(_this.getTabpanel);

      var tabsById = {};
      tabpanels.map(function (tab) {
        tabsById[tab.id] = tab;
      });

      if (!tabsById) {
        return false;
      } // set index by tabId or tabIndex


      var index = tabId && tabsById && tabsById[tabId] && tabsById[tabId].index || tabIndex;

      _this.setState({
        index: index,
        tabs: tabs,
        tabpanels: tabpanels
      });
    });

    _defineProperty(_assertThisInitialized(_this), "renderTabpanel", function (tabpanel, index) {
      var id = tabpanel.id,
          labelledby = tabpanel.labelledby,
          children = tabpanel.children;
      var selected = _this.state.index === index;
      return /*#__PURE__*/_react.default.createElement("div", {
        className: "admin-finder__tabpanel",
        role: "tabpanel",
        id: id,
        "aria-selected": selected,
        "aria-labelledby": labelledby,
        key: id
      }, children);
    });

    _defineProperty(_assertThisInitialized(_this), "renderTab", function (tab, index) {
      var id = tab.id,
          controls = tab.controls,
          url = tab.url,
          title = tab.title;
      var selected = _this.state.index === index;
      return /*#__PURE__*/_react.default.createElement(_.ButtonTertiary, {
        key: id,
        title: title,
        url: url,
        id: id,
        controls: controls,
        role: "tab",
        selected: selected,
        onClick: function onClick(event) {
          return _this.onSelect(tab, event);
        }
      });
    });

    _defineProperty(_assertThisInitialized(_this), "onSelect", function (tab, event) {
      var id = tab.id,
          index = tab.index;

      _this.setState({
        index: index,
        id: id
      });

      if (_this.props.onSelect) {
        _this.props.onSelect(tab, event);
      }
    });

    return _this;
  }

  var _proto = FinderTabs.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.getTabs();
  };

  _proto.render = function render() {
    var _this$state = this.state,
        tabs = _this$state.tabs,
        tabpanels = _this$state.tabpanels;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "admin-finder__tabs",
      role: "dialog"
    }, /*#__PURE__*/_react.default.createElement("nav", {
      className: "nav-tabs"
    }, tabs.map(this.renderTab)), tabpanels.map(this.renderTabpanel));
  };

  return FinderTabs;
}(_react.Component);

_defineProperty(FinderTabs, "defaultProps", {
  tabIndex: 0,
  tabId: undefined
});

var _default = FinderTabs;
exports.default = _default;
module.exports = exports.default;