"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Path = _interopRequireDefault(require("./Path"));

var _PathFilters = _interopRequireDefault(require("./PathFilters"));

var _PathItem = _interopRequireDefault(require("./PathItem"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var NavPath = function NavPath(_ref) {
  var className = _ref.className,
      parents = _ref.parents,
      filters = _ref.filters,
      title = _ref.title,
      onSelect = _ref.onSelect,
      children = _ref.children;

  var handleSelect = function handleSelect(item) {
    item.onClick && item.onClick();
    onSelect && onSelect(item);
  };

  return /*#__PURE__*/_react.default.createElement(_Path.default, {
    className: className
  }, parents && parents.map(function (parent, index) {
    return /*#__PURE__*/_react.default.createElement(_PathItem.default, _extends({}, parent, {
      onClick: function onClick() {
        return handleSelect(parent);
      },
      key: index
    }), parent.label || parent.title);
  }), filters && /*#__PURE__*/_react.default.createElement(_PathFilters.default, {
    filters: filters,
    onSelect: handleSelect
  }), title && /*#__PURE__*/_react.default.createElement(_PathItem.default, null, title), children);
};

var _default = NavPath;
exports.default = _default;
module.exports = exports.default;