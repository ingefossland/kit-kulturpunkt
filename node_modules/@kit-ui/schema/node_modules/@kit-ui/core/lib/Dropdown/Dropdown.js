"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ClickAwayListener = _interopRequireDefault(require("@material-ui/core/ClickAwayListener"));

var _Popper = _interopRequireDefault(require("@material-ui/core/Popper"));

var _Paper = _interopRequireDefault(require("@material-ui/core/Paper"));

var _styles = require("@material-ui/core/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    paper: {
      backgroundColor: function backgroundColor(props) {
        return props.backgroundColor;
      },
      color: "black",
      maxWidth: "320px",
      zIndex: 2
    },
    arrow: {
      position: "absolute",
      zIndex: 1,
      fontSize: "7px",
      width: "3em",
      height: "3em",
      "[x-placement*=top] &": {
        bottom: 0,
        width: 0,
        height: 0,
        borderLeft: "1em solid transparent",
        borderRight: "1em solid transparent",
        borderTop: "1em solid",
        borderTopColor: function borderTopColor(props) {
          return props.arrowColor;
        },
        marginBottom: "-1em"
      },
      "[x-placement*=bottom] &": {
        width: 0,
        height: 0,
        borderLeft: "1em solid transparent",
        borderRight: "1em solid transparent",
        borderBottom: "1em solid",
        borderBottomColor: function borderBottomColor(props) {
          return props.arrowColor;
        },
        marginTop: "-1em"
      },
      "[x-placement*=right] &": {
        left: 0,
        width: 0,
        height: 0,
        borderTop: "1em solid transparent",
        borderBottom: "1em solid transparent",
        borderRight: "1em solid",
        borderRightColor: function borderRightColor(props) {
          return props.arrowColor;
        },
        marginLeft: "-1em"
      },
      "[x-placement*=left] &": {
        right: 0,
        width: 0,
        height: 0,
        borderTop: "1em solid transparent",
        borderBottom: "1em solid transparent",
        borderLeft: "1em solid",
        borderLeftColor: function borderLeftColor(props) {
          return props.arrowColor;
        },
        marginRight: "-0.9em"
      }
    }
  };
});
/** Dropdown component with arrow */

var Dropdown = function Dropdown(_ref) {
  var anchorEl = _ref.anchorEl,
      backgroundColor = _ref.backgroundColor,
      _ref$expanded = _ref.expanded,
      expanded = _ref$expanded === void 0 ? false : _ref$expanded,
      elevation = _ref.elevation,
      onClickAway = _ref.onClickAway,
      _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? "bottom-end" : _ref$placement,
      children = _ref.children;
  var classes = useStyles({
    backgroundColor: backgroundColor,
    arrowColor: backgroundColor
  });

  if (!onClickAway) {
    onClickAway = function onClickAway() {
      return null;
    };
  }

  return /*#__PURE__*/_react.default.createElement(_Popper.default, {
    open: expanded,
    style: {
      zIndex: 2000
    },
    role: undefined,
    transition: true,
    anchorEl: anchorEl,
    placement: placement,
    modifiers: {
      arrow: {
        enabled: true,
        element: "[data-popper-arrow]"
      }
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.arrow,
    "data-popper-arrow": true
  }), /*#__PURE__*/_react.default.createElement(_ClickAwayListener.default, {
    onClickAway: onClickAway
  }, /*#__PURE__*/_react.default.createElement(_Paper.default, {
    className: classes.paper,
    elevation: elevation,
    square: true
  }, children)));
};

Dropdown.defaultProps = {
  expanded: false,
  elevation: 24,
  backgroundColor: "white"
};
Dropdown.propTypes = process.env.NODE_ENV !== "production" ? {
  /** A HTML element, referenceObject, or a function that returns either. It's used to set the position of the popper. The return value will passed as the reference object of the Popper instance. */
  anchorEl: _propTypes.default.any,

  /** Whether the dropdown is expanded or not */
  expanded: _propTypes.default.bool,

  /** Placement of the dropdown */
  placement: _propTypes.default.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),

  /** Elevation */
  elevation: _propTypes.default.number,

  /** Children (or content) of the dropdown */
  children: _propTypes.default.node,

  /** onClickAway */
  onClickAway: _propTypes.default.func,

  /** BackgroundColor of expanded dropdown */
  backgroundColor: _propTypes.default.string
} : {};
var _default = Dropdown;
exports.default = _default;
module.exports = exports.default;