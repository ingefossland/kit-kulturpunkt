function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { Component } from 'react';
import { IframeChildren, IframeUrl } from "..";
import { makeStyles } from '@material-ui/core/styles';
var useStyles = makeStyles(function (theme) {
  return {
    root: {
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      width: "100%",
      height: "100%",
      padding: 0,
      margin: 0,
      border: 0
    }
  };
});

var Iframe = function Iframe(_ref) {
  var url = _ref.url,
      children = _ref.children,
      props = _objectWithoutPropertiesLoose(_ref, ["url", "children"]);

  var classes = useStyles();

  if (url) {
    return /*#__PURE__*/React.createElement(IframeUrl, _extends({}, props, {
      url: url,
      className: classes.root
    }));
  }

  return /*#__PURE__*/React.createElement(IframeChildren, _extends({}, props, {
    className: classes.root
  }), children);
};

export default Iframe;