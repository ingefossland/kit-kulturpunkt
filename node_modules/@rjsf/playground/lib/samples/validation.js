"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = void 0;

var _assign = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/assign"));

function validate(_ref, errors) {
  var pass1 = _ref.pass1,
      pass2 = _ref.pass2;

  if (pass1 !== pass2) {
    errors.pass2.addError("Passwords don't match.");
  }

  return errors;
}

function transformErrors(errors) {
  return errors.map(function (error) {
    if (error.name === "minimum" && error.property === "instance.age") {
      return (0, _assign["default"])({}, error, {
        message: "You need to be 18 because of some legal thing"
      });
    }

    return error;
  });
}

var _default = {
  schema: {
    title: "Custom validation",
    description: "This form defines custom validation rules checking that the two passwords match.",
    type: "object",
    properties: {
      pass1: {
        title: "Password",
        type: "string",
        minLength: 3
      },
      pass2: {
        title: "Repeat password",
        type: "string",
        minLength: 3
      },
      age: {
        title: "Age",
        type: "number",
        minimum: 18
      }
    }
  },
  uiSchema: {
    pass1: {
      "ui:widget": "password"
    },
    pass2: {
      "ui:widget": "password"
    }
  },
  formData: {},
  validate: validate,
  transformErrors: transformErrors
};
exports["default"] = _default;